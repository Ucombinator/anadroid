(class (attrs public ) org/bouncycastle/math/ec/ECAlgorithms
 (super java/lang/Object)
 (source "ECAlgorithms.java")


(method (attrs public ) <init>()void
  (limit registers 1)
  ; this: v0 ([object org/bouncycastle/math/ec/ECAlgorithms])
  (line 5)
  (invoke-direct {v0} java/lang/Object/<init> )
  (return-void )
 )

(method (attrs private static ) implShamirsTrick([object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] [object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] )[object org/bouncycastle/math/ec/ECPoint]
  (limit registers 10)
  ; parameter[0] : v6 ([object org/bouncycastle/math/ec/ECPoint])
  ; parameter[1] : v7 ([object java/math/BigInteger])
  ; parameter[2] : v8 ([object org/bouncycastle/math/ec/ECPoint])
  ; parameter[3] : v9 ([object java/math/BigInteger])
  (line 63)
  (invoke-virtual {v7} java/math/BigInteger/bitLength )
  (move-result v4)
  (invoke-virtual {v9} java/math/BigInteger/bitLength )
  (move-result v5)
  (invoke-static {v4 v5} java/lang/Math/max int int )
  (move-result v3)
  (line 64)
  (invoke-virtual {v6 v8} org/bouncycastle/math/ec/ECPoint/add [object org/bouncycastle/math/ec/ECPoint] )
  (move-result-object v1)
  (line 65)
  (invoke-virtual {v6} org/bouncycastle/math/ec/ECPoint/getCurve )
  (move-result-object v4)
  (invoke-virtual {v4} org/bouncycastle/math/ec/ECCurve/getInfinity )
  (move-result-object v0)
  (line 67)
  (add-int/lit8 v2 v3 255)
  (label l7ef9c)
  (if-gez v2 l7efa2)
  (line 91)
  (return-object v0)
  (label l7efa2)
  (line 69)
  (invoke-virtual {v0} org/bouncycastle/math/ec/ECPoint/twice )
  (move-result-object v0)
  (line 71)
  (invoke-virtual {v7 v2} java/math/BigInteger/testBit int )
  (move-result v4)
  (if-eqz v4 l7efda)
  (line 73)
  (invoke-virtual {v9 v2} java/math/BigInteger/testBit int )
  (move-result v4)
  (if-eqz v4 l7efd0)
  (line 75)
  (invoke-virtual {v0 v1} org/bouncycastle/math/ec/ECPoint/add [object org/bouncycastle/math/ec/ECPoint] )
  (move-result-object v0)
  (label l7efca)
  (line 67)
  (add-int/lit8 v2 v2 255)
  (goto l7ef9c)
  (label l7efd0)
  (line 79)
  (invoke-virtual {v0 v6} org/bouncycastle/math/ec/ECPoint/add [object org/bouncycastle/math/ec/ECPoint] )
  (move-result-object v0)
  (goto l7efca)
  (label l7efda)
  (line 84)
  (invoke-virtual {v9 v2} java/math/BigInteger/testBit int )
  (move-result v4)
  (if-eqz v4 l7efca)
  (line 86)
  (invoke-virtual {v0 v8} org/bouncycastle/math/ec/ECPoint/add [object org/bouncycastle/math/ec/ECPoint] )
  (move-result-object v0)
  (goto l7efca)
 )

(method (attrs public static ) shamirsTrick([object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] [object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] )[object org/bouncycastle/math/ec/ECPoint]
  (limit registers 6)
  ; parameter[0] : v2 ([object org/bouncycastle/math/ec/ECPoint])
  ; parameter[1] : v3 ([object java/math/BigInteger])
  ; parameter[2] : v4 ([object org/bouncycastle/math/ec/ECPoint])
  ; parameter[3] : v5 ([object java/math/BigInteger])
  (line 52)
  (invoke-virtual {v2} org/bouncycastle/math/ec/ECPoint/getCurve )
  (move-result-object v0)
  (invoke-virtual {v4} org/bouncycastle/math/ec/ECPoint/getCurve )
  (move-result-object v1)
  (invoke-virtual {v0 v1} java/lang/Object/equals [object java/lang/Object] )
  (move-result v0)
  (if-nez v0 l7f02c)
  (line 54)
  (new-instance v0 java/lang/IllegalArgumentException)
  (const-string v1 "P and Q must be on same curve")
  (invoke-direct {v0 v1} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v0)
  (label l7f02c)
  (line 57)
  (invoke-static {v2 v3 v4 v5} org/bouncycastle/math/ec/ECAlgorithms/implShamirsTrick [object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] [object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] )
  (move-result-object v0)
  (return-object v0)
 )

(method (attrs public static ) sumOfTwoMultiplies([object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] [object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] )[object org/bouncycastle/math/ec/ECPoint]
  (limit registers 7)
  ; parameter[0] : v3 ([object org/bouncycastle/math/ec/ECPoint])
  ; parameter[1] : v4 ([object java/math/BigInteger])
  ; parameter[2] : v5 ([object org/bouncycastle/math/ec/ECPoint])
  ; parameter[3] : v6 ([object java/math/BigInteger])
  (line 10)
  (invoke-virtual {v3} org/bouncycastle/math/ec/ECPoint/getCurve )
  (move-result-object v0)
  (line 11)
  (invoke-virtual {v5} org/bouncycastle/math/ec/ECPoint/getCurve )
  (move-result-object v1)
  (invoke-virtual {v0 v1} java/lang/Object/equals [object java/lang/Object] )
  (move-result v1)
  (if-nez v1 l7f074)
  (line 13)
  (new-instance v1 java/lang/IllegalArgumentException)
  (const-string v2 "P and Q must be on same curve")
  (invoke-direct {v1 v2} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v1)
  (label l7f074)
  (line 27)
  (invoke-static {v3 v4 v5 v6} org/bouncycastle/math/ec/ECAlgorithms/implShamirsTrick [object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] [object org/bouncycastle/math/ec/ECPoint] [object java/math/BigInteger] )
  (move-result-object v1)
  (return-object v1)
 )

)
