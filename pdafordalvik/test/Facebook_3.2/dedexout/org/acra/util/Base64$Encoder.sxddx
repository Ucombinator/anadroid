(class (attrs ) org/acra/util/Base64$Encoder
 (super org/acra/util/Base64$Coder)
 (source "Base64.java")

 (field (attrs static final ) $assertionsDisabled boolean false )
 (field (attrs private static final ) ENCODE [array byte] null )
 (field (attrs private static final ) ENCODE_WEBSAFE [array byte] null )
 (field (attrs public static final ) LINE_GROUPS int 19); 0x13 )
 (field (attrs private final ) alphabet [array byte] )
 (field (attrs private ) count int )
 (field (attrs public final ) do_cr boolean )
 (field (attrs public final ) do_newline boolean )
 (field (attrs public final ) do_padding boolean )
 (field (attrs private final ) tail [array byte] )
 (field (attrs ) tailLen int )

(method (attrs static ) <clinit>()void
  (limit registers 2)
  (const/16 v1 64)
  (line 542)
  (const-class v0 org/acra/util/Base64)
  (invoke-virtual {v0} java/lang/Class/desiredAssertionStatus )
  (move-result v0)
  (if-nez v0 l13aaf8)
  (const/4 v0 1)
  (label l13aad6)
  (sput-boolean v0 org/acra/util/Base64$Encoder.$assertionsDisabled boolean)
  (line 554)
  (new-array v0 v1 [array byte])
  (fill-array-data v0 l13aafc)
  (sput-object v0 org/acra/util/Base64$Encoder.ENCODE [array byte])
  (line 565)
  (new-array v0 v1 [array byte])
  (fill-array-data v0 l13ab44)
  (sput-object v0 org/acra/util/Base64$Encoder.ENCODE_WEBSAFE [array byte])
  (return-void )
  (label l13aaf8)
  (line 542)
  (const/4 v0 0)
  (goto l13aad6)
  (line 554)
  (label l13aafc)
  (data-array
    (0x41) ; #0
    (0x42) ; #1
    (0x43) ; #2
    (0x44) ; #3
    (0x45) ; #4
    (0x46) ; #5
    (0x47) ; #6
    (0x48) ; #7
    (0x49) ; #8
    (0x4A) ; #9
    (0x4B) ; #10
    (0x4C) ; #11
    (0x4D) ; #12
    (0x4E) ; #13
    (0x4F) ; #14
    (0x50) ; #15
    (0x51) ; #16
    (0x52) ; #17
    (0x53) ; #18
    (0x54) ; #19
    (0x55) ; #20
    (0x56) ; #21
    (0x57) ; #22
    (0x58) ; #23
    (0x59) ; #24
    (0x5A) ; #25
    (0x61) ; #26
    (0x62) ; #27
    (0x63) ; #28
    (0x64) ; #29
    (0x65) ; #30
    (0x66) ; #31
    (0x67) ; #32
    (0x68) ; #33
    (0x69) ; #34
    (0x6A) ; #35
    (0x6B) ; #36
    (0x6C) ; #37
    (0x6D) ; #38
    (0x6E) ; #39
    (0x6F) ; #40
    (0x70) ; #41
    (0x71) ; #42
    (0x72) ; #43
    (0x73) ; #44
    (0x74) ; #45
    (0x75) ; #46
    (0x76) ; #47
    (0x77) ; #48
    (0x78) ; #49
    (0x79) ; #50
    (0x7A) ; #51
    (0x30) ; #52
    (0x31) ; #53
    (0x32) ; #54
    (0x33) ; #55
    (0x34) ; #56
    (0x35) ; #57
    (0x36) ; #58
    (0x37) ; #59
    (0x38) ; #60
    (0x39) ; #61
    (0x2B) ; #62
    (0x2F) ; #63
  )
  (line 565)
  (label l13ab44)
  (data-array
    (0x41) ; #0
    (0x42) ; #1
    (0x43) ; #2
    (0x44) ; #3
    (0x45) ; #4
    (0x46) ; #5
    (0x47) ; #6
    (0x48) ; #7
    (0x49) ; #8
    (0x4A) ; #9
    (0x4B) ; #10
    (0x4C) ; #11
    (0x4D) ; #12
    (0x4E) ; #13
    (0x4F) ; #14
    (0x50) ; #15
    (0x51) ; #16
    (0x52) ; #17
    (0x53) ; #18
    (0x54) ; #19
    (0x55) ; #20
    (0x56) ; #21
    (0x57) ; #22
    (0x58) ; #23
    (0x59) ; #24
    (0x5A) ; #25
    (0x61) ; #26
    (0x62) ; #27
    (0x63) ; #28
    (0x64) ; #29
    (0x65) ; #30
    (0x66) ; #31
    (0x67) ; #32
    (0x68) ; #33
    (0x69) ; #34
    (0x6A) ; #35
    (0x6B) ; #36
    (0x6C) ; #37
    (0x6D) ; #38
    (0x6E) ; #39
    (0x6F) ; #40
    (0x70) ; #41
    (0x71) ; #42
    (0x72) ; #43
    (0x73) ; #44
    (0x74) ; #45
    (0x75) ; #46
    (0x76) ; #47
    (0x77) ; #48
    (0x78) ; #49
    (0x79) ; #50
    (0x7A) ; #51
    (0x30) ; #52
    (0x31) ; #53
    (0x32) ; #54
    (0x33) ; #55
    (0x34) ; #56
    (0x35) ; #57
    (0x36) ; #58
    (0x37) ; #59
    (0x38) ; #60
    (0x39) ; #61
    (0x2D) ; #62
    (0x5F) ; #63
  )
 )

(method (attrs public ) <init>(int [array byte] )void
  (limit registers 6)
  ; this: v3 ([object org/acra/util/Base64$Encoder])
  ; parameter[0] : v4 (int)
  ; parameter[1] : v5 ([array byte])
  (const/4 v1 1)
  (const/4 v2 0)
  (line 581)
  (invoke-direct {v3} org/acra/util/Base64$Coder/<init> )
  (line 582)
  (iput-object v5 v3 org/acra/util/Base64$Encoder.output [array byte])
  (line 584)
  (and-int/lit8 v0 v4 1)
  (if-nez v0 l13ac02)
  (move v0 v1)
  (label l13abb4)
  (iput-boolean v0 v3 org/acra/util/Base64$Encoder.do_padding boolean)
  (line 585)
  (and-int/lit8 v0 v4 2)
  (if-nez v0 l13ac06)
  (move v0 v1)
  (label l13abc2)
  (iput-boolean v0 v3 org/acra/util/Base64$Encoder.do_newline boolean)
  (line 586)
  (and-int/lit8 v0 v4 4)
  (if-eqz v0 l13ac0a)
  (label l13abce)
  (iput-boolean v1 v3 org/acra/util/Base64$Encoder.do_cr boolean)
  (line 587)
  (and-int/lit8 v0 v4 8)
  (if-nez v0 l13ac0e)
  (sget-object v0 org/acra/util/Base64$Encoder.ENCODE [array byte])
  (label l13abde)
  (iput-object v0 v3 org/acra/util/Base64$Encoder.alphabet [array byte])
  (line 589)
  (const/4 v0 2)
  (new-array v0 v0 [array byte])
  (iput-object v0 v3 org/acra/util/Base64$Encoder.tail [array byte])
  (line 590)
  (iput v2 v3 org/acra/util/Base64$Encoder.tailLen int)
  (line 592)
  (iget-boolean v0 v3 org/acra/util/Base64$Encoder.do_newline boolean)
  (if-eqz v0 l13ac14)
  (const/16 v0 19)
  (label l13abfc)
  (iput v0 v3 org/acra/util/Base64$Encoder.count int)
  (line 593)
  (return-void )
  (label l13ac02)
  (move v0 v2)
  (line 584)
  (goto l13abb4)
  (label l13ac06)
  (move v0 v2)
  (line 585)
  (goto l13abc2)
  (label l13ac0a)
  (move v1 v2)
  (line 586)
  (goto l13abce)
  (label l13ac0e)
  (line 587)
  (sget-object v0 org/acra/util/Base64$Encoder.ENCODE_WEBSAFE [array byte])
  (goto l13abde)
  (label l13ac14)
  (line 592)
  (const/4 v0 15)
  (goto l13abfc)
 )

(method (attrs public ) maxOutputSize(int )int
  (limit registers 3)
  ; this: v1 ([object org/acra/util/Base64$Encoder])
  ; parameter[0] : v2 (int)
  (line 600)
  (mul-int/lit8 v0 v2 8)
  (div-int/lit8 v0 v0 5)
  (add-int/lit8 v0 v0 10)
  (return v0)
)

(method (attrs public ) process([array byte] int int boolean )boolean
  (limit registers 16)
  ; this: v11 ([object org/acra/util/Base64$Encoder])
  ; parameter[0] : v12 ([array byte])
  ; parameter[1] : v13 (int)
  ; parameter[2] : v14 (int)
  ; parameter[3] : v15 (boolean)
  (line 605)
  (iget-object v6 v11 org/acra/util/Base64$Encoder.alphabet [array byte])
  (line 606)
  (iget-object v7 v11 org/acra/util/Base64$Encoder.output [array byte])
  (line 607)
  (const/4 v1 0)
  (line 608)
  (iget v0 v11 org/acra/util/Base64$Encoder.count int)
  (line 611)
  (add-int v8 v14 v13)
  (line 612)
  (const/4 v2 15)
  (line 618)
  (iget v3 v11 org/acra/util/Base64$Encoder.tailLen int)
  (packed-switch v3 0
    ps13ac60_13ad96 ; case 0
    ps13ac60_13ad9c ; case 1
    ps13ac60_13ade2 ; case 2
    ps13ac60_default) ; default
  (label l13ac66)
  (label ps13ac60_default)
  (move v3 v13)
  (label l13ac68)
  (line 645)
  (const/4 v4 15)
  (if-eq v2 v4 l13b0be)
  (line 646)
  (const/4 v4 1)
  (shr-int/lit8 v5 v2 18)
  (and-int/lit8 v5 v5 63)
  (aget-byte v5 v6 v5)
  (aput-byte v5 v7 v1)
  (line 647)
  (const/4 v1 2)
  (shr-int/lit8 v5 v2 12)
  (and-int/lit8 v5 v5 63)
  (aget-byte v5 v6 v5)
  (aput-byte v5 v7 v4)
  (line 648)
  (const/4 v4 3)
  (shr-int/lit8 v5 v2 6)
  (and-int/lit8 v5 v5 63)
  (aget-byte v5 v6 v5)
  (aput-byte v5 v7 v1)
  (line 649)
  (const/4 v1 4)
  (and-int/lit8 v2 v2 63)
  (aget-byte v2 v6 v2)
  (aput-byte v2 v7 v4)
  (line 650)
  (add-int/lit8 v0 v0 255)
  (if-nez v0 l13b0be)
  (line 651)
  (iget-boolean v0 v11 org/acra/util/Base64$Encoder.do_cr boolean)
  (if-eqz v0 l13b0c6)
  (const/4 v0 5)
  (const/16 v2 13)
  (aput-byte v2 v7 v1)
  (label l13accc)
  (line 652)
  (add-int/lit8 v1 v0 1)
  (const/16 v2 10)
  (aput-byte v2 v7 v0)
  (line 653)
  (const/16 v0 19)
  (move v5 v0)
  (move v4 v1)
  (label l13ace0)
  (line 662)
  (add-int/lit8 v0 v3 3)
  (if-gt v0 v8 l13ae28)
  (line 663)
  (aget-byte v0 v12 v3)
  (and-int/lit16 v0 v0 255)
  (shl-int/lit8 v0 v0 16)
  (add-int/lit8 v1 v3 1)
  (aget-byte v1 v12 v1)
  (and-int/lit16 v1 v1 255)
  (shl-int/lit8 v1 v1 8)
  (or-int/2addr v0 v1)
  (add-int/lit8 v1 v3 2)
  (aget-byte v1 v12 v1)
  (and-int/lit16 v1 v1 255)
  (or-int/2addr v0 v1)
  (line 666)
  (shr-int/lit8 v1 v0 18)
  (and-int/lit8 v1 v1 63)
  (aget-byte v1 v6 v1)
  (aput-byte v1 v7 v4)
  (line 667)
  (add-int/lit8 v1 v4 1)
  (shr-int/lit8 v2 v0 12)
  (and-int/lit8 v2 v2 63)
  (aget-byte v2 v6 v2)
  (aput-byte v2 v7 v1)
  (line 668)
  (add-int/lit8 v1 v4 2)
  (shr-int/lit8 v2 v0 6)
  (and-int/lit8 v2 v2 63)
  (aget-byte v2 v6 v2)
  (aput-byte v2 v7 v1)
  (line 669)
  (add-int/lit8 v1 v4 3)
  (and-int/lit8 v0 v0 63)
  (aget-byte v0 v6 v0)
  (aput-byte v0 v7 v1)
  (line 670)
  (add-int/lit8 v3 v3 3)
  (line 671)
  (add-int/lit8 v1 v4 4)
  (line 672)
  (add-int/lit8 v0 v5 255)
  (if-nez v0 l13b0be)
  (line 673)
  (iget-boolean v0 v11 org/acra/util/Base64$Encoder.do_cr boolean)
  (if-eqz v0 l13b0b8)
  (add-int/lit8 v0 v1 1)
  (const/16 v2 13)
  (aput-byte v2 v7 v1)
  (label l13ad80)
  (line 674)
  (add-int/lit8 v1 v0 1)
  (const/16 v2 10)
  (aput-byte v2 v7 v0)
  (line 675)
  (const/16 v0 19)
  (move v5 v0)
  (move v4 v1)
  (goto l13ace0)
  (label ps13ac60_13ad96)
  (move v3 v13)
  (line 621)
  (goto/16 l13ac68)
  (label ps13ac60_13ad9c)
  (line 624)
  (add-int/lit8 v3 v13 2)
  (if-gt v3 v8 l13ac66)
  (line 627)
  (iget-object v2 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (const/4 v3 0)
  (aget-byte v2 v2 v3)
  (and-int/lit16 v2 v2 255)
  (shl-int/lit8 v2 v2 16)
  (add-int/lit8 v3 v13 1)
  (aget-byte v4 v12 v13)
  (and-int/lit16 v4 v4 255)
  (shl-int/lit8 v4 v4 8)
  (or-int/2addr v2 v4)
  (add-int/lit8 v13 v3 1)
  (aget-byte v3 v12 v3)
  (and-int/lit16 v3 v3 255)
  (or-int/2addr v2 v3)
  (line 630)
  (const/4 v3 0)
  (iput v3 v11 org/acra/util/Base64$Encoder.tailLen int)
  (move v3 v13)
  (goto/16 l13ac68)
  (label ps13ac60_13ade2)
  (line 635)
  (add-int/lit8 v3 v13 1)
  (if-gt v3 v8 l13ac66)
  (line 637)
  (iget-object v2 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (const/4 v3 0)
  (aget-byte v2 v2 v3)
  (and-int/lit16 v2 v2 255)
  (shl-int/lit8 v2 v2 16)
  (iget-object v3 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (const/4 v4 1)
  (aget-byte v3 v3 v4)
  (and-int/lit16 v3 v3 255)
  (shl-int/lit8 v3 v3 8)
  (or-int/2addr v2 v3)
  (add-int/lit8 v3 v13 1)
  (aget-byte v4 v12 v13)
  (and-int/lit16 v4 v4 255)
  (or-int/2addr v2 v4)
  (line 640)
  (const/4 v4 0)
  (iput v4 v11 org/acra/util/Base64$Encoder.tailLen int)
  (goto/16 l13ac68)
  (label l13ae28)
  (line 679)
  (if-eqz v15 l13b044)
  (line 685)
  (iget v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (sub-int v0 v3 v0)
  (add-int/lit8 v1 v8 255)
  (if-ne v0 v1 l13af04)
  (line 686)
  (const/4 v2 0)
  (line 687)
  (iget v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (if-lez v0 l13aef4)
  (iget-object v0 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (const/4 v1 1)
  (aget-byte v0 v0 v2)
  (move v2 v3)
  (label l13ae52)
  (and-int/lit16 v0 v0 255)
  (shl-int/lit8 v3 v0 4)
  (line 688)
  (iget v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (sub-int/2addr v0 v1)
  (iput v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (line 689)
  (add-int/lit8 v1 v4 1)
  (shr-int/lit8 v0 v3 6)
  (and-int/lit8 v0 v0 63)
  (aget-byte v0 v6 v0)
  (aput-byte v0 v7 v4)
  (line 690)
  (add-int/lit8 v0 v1 1)
  (and-int/lit8 v3 v3 63)
  (aget-byte v3 v6 v3)
  (aput-byte v3 v7 v1)
  (line 691)
  (iget-boolean v1 v11 org/acra/util/Base64$Encoder.do_padding boolean)
  (if-eqz v1 l13aea8)
  (line 692)
  (add-int/lit8 v1 v0 1)
  (const/16 v3 61)
  (aput-byte v3 v7 v0)
  (line 693)
  (add-int/lit8 v0 v1 1)
  (const/16 v3 61)
  (aput-byte v3 v7 v1)
  (label l13aea8)
  (line 695)
  (iget-boolean v1 v11 org/acra/util/Base64$Encoder.do_newline boolean)
  (if-eqz v1 l13aed4)
  (line 696)
  (iget-boolean v1 v11 org/acra/util/Base64$Encoder.do_cr boolean)
  (if-eqz v1 l13aec6)
  (add-int/lit8 v1 v0 1)
  (const/16 v3 13)
  (aput-byte v3 v7 v0)
  (move v0 v1)
  (label l13aec6)
  (line 697)
  (add-int/lit8 v1 v0 1)
  (const/16 v3 10)
  (aput-byte v3 v7 v0)
  (move v0 v1)
  (label l13aed4)
  (move v3 v2)
  (move v4 v0)
  (label l13aed8)
  (line 719)
  (sget-boolean v0 org/acra/util/Base64$Encoder.$assertionsDisabled boolean)
  (if-nez v0 l13b02c)
  (iget v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (if-eqz v0 l13b02c)
  (new-instance v0 java/lang/AssertionError)
  (invoke-direct {v0} java/lang/AssertionError/<init> )
  (throw v0)
  (label l13aef4)
  (line 687)
  (add-int/lit8 v1 v3 1)
  (aget-byte v0 v12 v3)
  (move v10 v2)
  (move v2 v1)
  (move v1 v10)
  (goto l13ae52)
  (label l13af04)
  (line 699)
  (iget v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (sub-int v0 v3 v0)
  (add-int/lit8 v1 v8 254)
  (if-ne v0 v1 l13aff4)
  (line 700)
  (const/4 v2 0)
  (line 701)
  (iget v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (const/4 v1 1)
  (if-le v0 v1 l13afda)
  (iget-object v0 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (const/4 v1 1)
  (aget-byte v0 v0 v2)
  (label l13af2a)
  (and-int/lit16 v0 v0 255)
  (shl-int/lit8 v9 v0 10)
  (iget v0 v11 org/acra/util/Base64$Encoder.tailLen int)
  (if-lez v0 l13afe8)
  (iget-object v0 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (add-int/lit8 v2 v1 1)
  (aget-byte v0 v0 v1)
  (move v1 v2)
  (label l13af48)
  (and-int/lit16 v0 v0 255)
  (shl-int/lit8 v0 v0 2)
  (or-int/2addr v0 v9)
  (line 703)
  (iget v2 v11 org/acra/util/Base64$Encoder.tailLen int)
  (sub-int v1 v2 v1)
  (iput v1 v11 org/acra/util/Base64$Encoder.tailLen int)
  (line 704)
  (add-int/lit8 v1 v4 1)
  (shr-int/lit8 v2 v0 12)
  (and-int/lit8 v2 v2 63)
  (aget-byte v2 v6 v2)
  (aput-byte v2 v7 v4)
  (line 705)
  (add-int/lit8 v2 v1 1)
  (shr-int/lit8 v4 v0 6)
  (and-int/lit8 v4 v4 63)
  (aget-byte v4 v6 v4)
  (aput-byte v4 v7 v1)
  (line 706)
  (add-int/lit8 v1 v2 1)
  (and-int/lit8 v0 v0 63)
  (aget-byte v0 v6 v0)
  (aput-byte v0 v7 v2)
  (line 707)
  (iget-boolean v0 v11 org/acra/util/Base64$Encoder.do_padding boolean)
  (if-eqz v0 l13b0b2)
  (line 708)
  (add-int/lit8 v0 v1 1)
  (const/16 v2 61)
  (aput-byte v2 v7 v1)
  (label l13afaa)
  (line 710)
  (iget-boolean v1 v11 org/acra/util/Base64$Encoder.do_newline boolean)
  (if-eqz v1 l13afd6)
  (line 711)
  (iget-boolean v1 v11 org/acra/util/Base64$Encoder.do_cr boolean)
  (if-eqz v1 l13afc8)
  (add-int/lit8 v1 v0 1)
  (const/16 v2 13)
  (aput-byte v2 v7 v0)
  (move v0 v1)
  (label l13afc8)
  (line 712)
  (add-int/lit8 v1 v0 1)
  (const/16 v2 10)
  (aput-byte v2 v7 v0)
  (move v0 v1)
  (label l13afd6)
  (move v4 v0)
  (line 714)
  (goto l13aed8)
  (label l13afda)
  (line 701)
  (add-int/lit8 v1 v3 1)
  (aget-byte v0 v12 v3)
  (move v3 v1)
  (move v1 v2)
  (goto l13af2a)
  (label l13afe8)
  (add-int/lit8 v2 v3 1)
  (aget-byte v0 v12 v3)
  (move v3 v2)
  (goto l13af48)
  (label l13aff4)
  (line 714)
  (iget-boolean v0 v11 org/acra/util/Base64$Encoder.do_newline boolean)
  (if-eqz v0 l13aed8)
  (if-lez v4 l13aed8)
  (const/16 v0 19)
  (if-eq v5 v0 l13aed8)
  (line 715)
  (iget-boolean v0 v11 org/acra/util/Base64$Encoder.do_cr boolean)
  (if-eqz v0 l13b0ae)
  (add-int/lit8 v0 v4 1)
  (const/16 v1 13)
  (aput-byte v1 v7 v4)
  (label l13b01c)
  (line 716)
  (add-int/lit8 v4 v0 1)
  (const/16 v1 10)
  (aput-byte v1 v7 v0)
  (goto/16 l13aed8)
  (label l13b02c)
  (line 720)
  (sget-boolean v0 org/acra/util/Base64$Encoder.$assertionsDisabled boolean)
  (if-nez v0 l13b064)
  (if-eq v3 v8 l13b064)
  (new-instance v0 java/lang/AssertionError)
  (invoke-direct {v0} java/lang/AssertionError/<init> )
  (throw v0)
  (label l13b044)
  (line 725)
  (add-int/lit8 v0 v8 255)
  (if-ne v3 v0 l13b070)
  (line 726)
  (iget-object v0 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (iget v1 v11 org/acra/util/Base64$Encoder.tailLen int)
  (add-int/lit8 v2 v1 1)
  (iput v2 v11 org/acra/util/Base64$Encoder.tailLen int)
  (aget-byte v2 v12 v3)
  (aput-byte v2 v0 v1)
  (label l13b064)
  (line 733)
  (iput v4 v11 org/acra/util/Base64$Encoder.op int)
  (line 734)
  (iput v5 v11 org/acra/util/Base64$Encoder.count int)
  (line 736)
  (const/4 v0 1)
  (return v0)
  (label l13b070)
  (line 727)
  (add-int/lit8 v0 v8 254)
  (if-ne v3 v0 l13b064)
  (line 728)
  (iget-object v0 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (iget v1 v11 org/acra/util/Base64$Encoder.tailLen int)
  (add-int/lit8 v2 v1 1)
  (iput v2 v11 org/acra/util/Base64$Encoder.tailLen int)
  (aget-byte v2 v12 v3)
  (aput-byte v2 v0 v1)
  (line 729)
  (iget-object v0 v11 org/acra/util/Base64$Encoder.tail [array byte])
  (iget v1 v11 org/acra/util/Base64$Encoder.tailLen int)
  (add-int/lit8 v2 v1 1)
  (iput v2 v11 org/acra/util/Base64$Encoder.tailLen int)
  (add-int/lit8 v2 v3 1)
  (aget-byte v2 v12 v2)
  (aput-byte v2 v0 v1)
  (goto l13b064)
  (label l13b0ae)
  (move v0 v4)
  (goto l13b01c)
  (label l13b0b2)
  (move v0 v1)
  (goto/16 l13afaa)
  (label l13b0b8)
  (move v0 v1)
  (goto/16 l13ad80)
  (label l13b0be)
  (move v5 v0)
  (move v4 v1)
  (goto/16 l13ace0)
  (label l13b0c6)
  (move v0 v1)
  (goto/16 l13accc)
  (line 618)
)

)
