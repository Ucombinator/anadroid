(class (attrs public ) org/python/modules/sha
 (super java/lang/Object)
 (source "sha.java")

 (field (attrs public static ) __doc__ [object java/lang/String] )
 (field (attrs public ) blocksize int )
 (field (attrs public ) digest_size int )
 (field (attrs public ) digestsize int )

(method (attrs static ) <clinit>()void
  (limit registers 1)
  (line 13)
  (const-string v0 "* Cryptix General License\n* Copyright (c) 1995, 1996, 1997, 1998, 1999, 2000 The Cryptix Foundation\n* Limited. All rights reserved.\n* \n* Redistribution and use in source and binary forms, with or\n* without modification, are permitted provided that the\n* following conditions are met:\n*\n* - Redistributions of source code must retain the copyright\n*   notice, this list of conditions and the following disclaimer.\n* - Redistributions in binary form must reproduce the above\n*   copyright notice, this list of conditions and the following\n*   disclaimer in the documentation and/or other materials\n*   provided with the distribution.\n*\n* THIS SOFTWARE IS PROVIDED BY THE CRYPTIX FOUNDATION LIMITED\n* AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED\n* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n* PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE CRYPTIX\n* FOUNDATION LIMITED OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n* INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n* OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n* THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n* OF SUCH DAMAGE.\n")
  (line 12)
  (sput-object v0 org/python/modules/sha.__doc__ [object java/lang/String])
  (line 7)
  (return-void )
 )

(method (attrs public ) <init>()void
  (limit registers 2)
  ; this: v1 ([object org/python/modules/sha])
  (line 7)
  (invoke-direct {v1} java/lang/Object/<init> )
  (line 8)
  (const/4 v0 1)
  (iput v0 v1 org/python/modules/sha.blocksize int)
  (line 9)
  (const/16 v0 20)
  (iput v0 v1 org/python/modules/sha.digestsize int)
  (line 10)
  (iget v0 v1 org/python/modules/sha.digestsize int)
  (iput v0 v1 org/python/modules/sha.digest_size int)
  (line 7)
  (return-void )
 )

(method (attrs public static ) new$([array [object org/python/core/PyObject]] [array [object java/lang/String]] )[object org/python/modules/SHA1]
  (limit registers 7)
  ; parameter[0] : v5 ([array [object org/python/core/PyObject]])
  ; parameter[1] : v6 ([array [object java/lang/String]])
  (line 46)
  (new-instance v0 org/python/core/ArgParser)
  (const-string v3 "sha")
  (const-string v4 "string")
  (invoke-direct {v0 v3 v5 v6 v4} org/python/core/ArgParser/<init> [object java/lang/String] [array [object org/python/core/PyObject]] [array [object java/lang/String]] [object java/lang/String] )
  (line 47)
  (const/4 v3 0)
  (const/4 v4 0)
  (invoke-virtual {v0 v3 v4} org/python/core/ArgParser/getString int [object java/lang/String] )
  (move-result-object v1)
  (line 49)
  (new-instance v2 org/python/modules/SHA1)
  (invoke-direct {v2} org/python/modules/SHA1/<init> )
  (line 50)
  (if-eqz v1 lb53ee)
  (line 51)
  (invoke-virtual {v1} java/lang/String/getBytes )
  (move-result-object v3)
  (invoke-virtual {v2 v3} org/python/modules/SHA1/update [array byte] )
  (label lb53ee)
  (line 52)
  (return-object v2)
 )

(method (attrs public static ) sha$([array [object org/python/core/PyObject]] [array [object java/lang/String]] )[object org/python/modules/SHA1]
  (limit registers 3)
  ; parameter[0] : v1 ([array [object org/python/core/PyObject]])
  ; parameter[1] : v2 ([array [object java/lang/String]])
  (line 57)
  (invoke-static {v1 v2} org/python/modules/sha/new$ [array [object org/python/core/PyObject]] [array [object java/lang/String]] )
  (move-result-object v0)
  (return-object v0)
 )

)
