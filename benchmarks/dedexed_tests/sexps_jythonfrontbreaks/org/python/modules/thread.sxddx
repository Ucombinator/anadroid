(class (attrs public ) org/python/modules/thread
 (super java/lang/Object)
 (source "thread.java")
 (implements org/python/core/ClassDictInit)

 (field (attrs public static ) __doc__ [object org/python/core/PyString] )
 (field (attrs public static ) error [object org/python/core/PyObject] )

(method (attrs static ) <clinit>()void
  (limit registers 2)
  (line 30)
  (new-instance v0 org/python/core/PyString)
  (line 31)
  (const-string v1 "This module provides primitive operations to write multi-threaded programs.\nThe 'threading' module provides a more convenient interface.")
  (line 30)
  (invoke-direct {v0 v1} org/python/core/PyString/<init> [object java/lang/String] )
  (sput-object v0 org/python/modules/thread.__doc__ [object org/python/core/PyString])
  (line 40)
  (new-instance v0 org/python/core/PyString)
  (const-string v1 "thread.error")
  (invoke-direct {v0 v1} org/python/core/PyString/<init> [object java/lang/String] )
  (sput-object v0 org/python/modules/thread.error [object org/python/core/PyObject])
  (line 28)
  (return-void )
 )

(method (attrs public ) <init>()void
  (limit registers 1)
  ; this: v0 ([object org/python/modules/thread])
  (line 28)
  (invoke-direct {v0} java/lang/Object/<init> )
  (return-void )
 )

(method (attrs public static ) allocate_lock()[object org/python/modules/PyLock]
  (limit registers 1)
  (line 48)
  (new-instance v0 org/python/modules/PyLock)
  (invoke-direct {v0} org/python/modules/PyLock/<init> )
  (return-object v0)
 )

(method (attrs public static ) classDictInit([object org/python/core/PyObject] )void
  (limit registers 3)
  ; parameter[0] : v2 ([object org/python/core/PyObject])
  (line 37)
  (const-string v0 "LockType")
  (const-class v1 org/python/modules/PyLock)
  (invoke-static {v1} org/python/core/PyType/fromClass [object java/lang/Class] )
  (move-result-object v1)
  (invoke-virtual {v2 v0 v1} org/python/core/PyObject/__setitem__ [object java/lang/String] [object org/python/core/PyObject] )
  (line 38)
  (return-void )
 )

(method (attrs public static ) exit()void
  (limit registers 0)
  (line 52)
  (invoke-static {} org/python/modules/thread/exit_thread )
  (nop )
  (line 53)
  (return-void )
 )

(method (attrs public static ) exit_thread()void
  (limit registers 4)
  (line 56)
  (new-instance v0 org/python/core/PyException)
  (sget-object v1 org/python/core/Py.SystemExit [object org/python/core/PyObject])
  (new-instance v2 org/python/core/PyInteger)
  (const/4 v3 0)
  (invoke-direct {v2 v3} org/python/core/PyInteger/<init> int )
  (invoke-direct {v0 v1 v2} org/python/core/PyException/<init> [object org/python/core/PyObject] [object org/python/core/PyObject] )
  (throw v0)
 )

(method (attrs public static ) get_ident()long
  (limit registers 2)
  (line 60)
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v0)
  (invoke-static {v0} org/python/core/Py/java_obj_id [object java/lang/Object] )
  (move-result-wide v0)
  (return-wide v0)
 )

(method (attrs public static ) start_new_thread([object org/python/core/PyObject] [object org/python/core/PyTuple] )void
  (limit registers 4)
  ; parameter[0] : v2 ([object org/python/core/PyObject])
  ; parameter[1] : v3 ([object org/python/core/PyTuple])
  (line 43)
  (new-instance v0 org/python/modules/FunctionThread)
  (invoke-virtual {v3} org/python/core/PyTuple/getArray )
  (move-result-object v1)
  (invoke-direct {v0 v2 v1} org/python/modules/FunctionThread/<init> [object org/python/core/PyObject] [array [object org/python/core/PyObject]] )
  (line 44)
  (invoke-virtual {v0} java/lang/Thread/start )
  (line 45)
  (return-void )
 )

)
