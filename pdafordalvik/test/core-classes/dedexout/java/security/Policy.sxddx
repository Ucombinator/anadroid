(class (attrs public abstract synchronized ) java/security/Policy
 (super java/lang/Object)
 (source "Policy.java")

 (field (attrs private static final ) GET_POLICY [object java/security/SecurityPermission] null )
 (field (attrs private static final ) POLICY_PROVIDER [object java/lang/String] "policy.provider" )
 (field (attrs private static final ) SET_POLICY [object java/security/SecurityPermission] )
 (field (attrs private static ) activePolicy [object java/security/Policy] )

(method (attrs static ) <clinit>()void
  (limit registers 2)
  (line 52)
  (new-instance v0 java/security/SecurityPermission)
  (const-string v1 "setPolicy")
  (invoke-direct {v0 v1} java/security/SecurityPermission/<init> [object java/lang/String] )
  (sput-object v0 java/security/Policy.SET_POLICY [object java/security/SecurityPermission])
  (line 56)
  (new-instance v0 java/security/SecurityPermission)
  (const-string v1 "getPolicy")
  (invoke-direct {v0 v1} java/security/SecurityPermission/<init> [object java/lang/String] )
  (sput-object v0 java/security/Policy.GET_POLICY [object java/security/SecurityPermission])
  (return-void )
 )

(method (attrs public ) <init>()void
  (limit registers 1)
  ; this: v0 ([object java/security/Policy])
  (line 46)
  (invoke-direct-empty {v0} java/lang/Object/<init> )
  (return-void )
 )

(method (attrs static ) getAccessiblePolicy()[object java/security/Policy]
  (limit registers 3)
  (catchall  java/lang/Exception from lba11a to lba13c using lba138)
  (line 218)
  (sget-object v0 java/security/Policy.activePolicy [object java/security/Policy])
  (line 219)
  (if-nez v0 lba13e)
  (line 220)
  (const-class v1 java/security/Policy)
  (monitor-enter v1)
  (label lba11a)
  (line 223)
  (sget-object v2 java/security/Policy.activePolicy [object java/security/Policy])
  (if-nez v2 lba12e)
  (line 224)
  (invoke-static {} java/security/Policy/getDefaultProvider )
  (nop )
  (move-result-object v2)
  (sput-object v2 java/security/Policy.activePolicy [object java/security/Policy])
  (label lba12e)
  (line 226)
  (sget-object v2 java/security/Policy.activePolicy [object java/security/Policy])
  (monitor-exit v1)
  (move-object v1 v2)
  (label lba136)
  (line 229)
  (return-object v1)
  (label lba138)
  (line 227)
  (move-exception v2)
  (monitor-exit v1)
  (label lba13c)
  (throw v2)
  (label lba13e)
  (move-object v1 v0)
  (line 229)
  (goto lba136)
 )

(method (attrs private static ) getDefaultProvider()[object java/security/Policy]
  (limit registers 3)
  (line 173)
  (new-instance v1 org/apache/harmony/security/fortress/PolicyUtils$SecurityPropertyAccessor)
  (const-string v2 "policy.provider")
  (invoke-direct {v1 v2} org/apache/harmony/security/fortress/PolicyUtils$SecurityPropertyAccessor/<init> [object java/lang/String] )
  (invoke-static {v1} java/security/AccessController/doPrivileged [object java/security/PrivilegedAction] )
  (move-result-object v0)
  (check-cast v0 [object java/lang/String])
  (label lba17a)
  (line 176)
  (if-nez v0 lba18a)
  (line 180)
  (new-instance v1 org/apache/harmony/security/fortress/DefaultPolicy)
  (invoke-direct {v1} org/apache/harmony/security/fortress/DefaultPolicy/<init> )
  (label lba188)
  (line 184)
  (return-object v1)
  (label lba18a)
  (new-instance v1 java/security/Policy$1)
  (invoke-direct {v1 v0} java/security/Policy$1/<init> [object java/lang/String] )
  (invoke-static {v1} java/security/AccessController/doPrivileged [object java/security/PrivilegedAction] )
  (move-result-object v0)
  (label lba19c)
  (check-cast v0 [object java/security/Policy])
  (move-object v1 v0)
  (goto lba188)
 )

(method (attrs public static ) getPolicy()[object java/security/Policy]
  (limit registers 2)
  (line 161)
  (invoke-static {} java/lang/System/getSecurityManager )
  (nop )
  (move-result-object v0)
  (line 162)
  (if-eqz v0 lba1ca)
  (line 163)
  (sget-object v1 java/security/Policy.GET_POLICY [object java/security/SecurityPermission])
  (invoke-virtual-quick {v0 v1} vtable #0x1c)
  (label lba1ca)
  (line 165)
  (invoke-static {} java/security/Policy/getAccessiblePolicy )
  (nop )
  (move-result-object v1)
  (return-object v1)
 )

(method (attrs static ) isSet()boolean
  (limit registers 1)
  (line 208)
  (sget-object v0 java/security/Policy.activePolicy [object java/security/Policy])
  (if-eqz v0 lba1f0)
  (const/4 v0 1)
  (label lba1ee)
  (return v0)
  (label lba1f0)
  (const/4 v0 0)
  (goto lba1ee)
 )

(method (attrs public static ) setPolicy([object java/security/Policy] )void
  (limit registers 4)
  ; parameter[0] : v3 ([object java/security/Policy])
  (catchall  java/lang/Exception from lba220 to lba22c using lba228)
  (line 248)
  (invoke-static {} java/lang/System/getSecurityManager )
  (nop )
  (move-result-object v0)
  (line 249)
  (if-eqz v0 lba21a)
  (line 250)
  (sget-object v1 java/security/Policy.SET_POLICY [object java/security/SecurityPermission])
  (invoke-virtual-quick {v0 v1} vtable #0x1c)
  (label lba21a)
  (line 252)
  (const-class v1 java/security/Policy)
  (monitor-enter v1)
  (label lba220)
  (line 253)
  (sput-object v3 java/security/Policy.activePolicy [object java/security/Policy])
  (line 254)
  (monitor-exit v1)
  (line 255)
  (return-void )
  (label lba228)
  (line 254)
  (move-exception v2)
  (monitor-exit v1)
  (label lba22c)
  (throw v2)
 )

(method (attrs public abstract ) getPermissions([object java/security/CodeSource] )[object java/security/PermissionCollection]
)

(method (attrs public ) getPermissions([object java/security/ProtectionDomain] )[object java/security/PermissionCollection]
  (limit registers 3)
  ; this: v1 ([object java/security/Policy])
  ; parameter[0] : v2 ([object java/security/ProtectionDomain])
  (line 106)
  (if-eqz v2 lba262)
  (line 107)
  (invoke-virtual-quick {v2} vtable #0xc)
  (move-result-object v0)
  (invoke-virtual-quick {v1 v0} vtable #0xb)
  (move-result-object v0)
  (label lba260)
  (line 109)
  (return-object v0)
  (label lba262)
  (new-instance v0 java/security/Permissions)
  (invoke-direct {v0} java/security/Permissions/<init> )
  (goto lba260)
)

(method (attrs public ) implies([object java/security/ProtectionDomain] [object java/security/Permission] )boolean
  (limit registers 7)
  ; this: v4 ([object java/security/Policy])
  ; parameter[0] : v5 ([object java/security/ProtectionDomain])
  ; parameter[1] : v6 ([object java/security/Permission])
  (line 127)
  (if-eqz v5 lba2da)
  (line 128)
  (invoke-virtual-quick {v4 v5} vtable #0xc)
  (move-result-object v2)
  (label lba28c)
  (line 129)
  (invoke-virtual-quick {v5} vtable #0xd)
  (move-result-object v1)
  (label lba294)
  (line 130)
  (if-nez v2 lba2ae)
  (line 131)
  (move-object v2 v1)
  (label lba29a)
  (line 137)
  (if-eqz v2 lba2da)
  (invoke-virtual-quick {v2 v6} vtable #0xd)
  (move-result v3)
  (if-eqz v3 lba2da)
  (line 138)
  (const/4 v3 1)
  (label lba2ac)
  (line 141)
  (return v3)
  (label lba2ae)
  (line 132)
  (if-eqz v1 lba29a)
  (line 133)
  (invoke-virtual-quick {v1} vtable #0xc)
  (move-result-object v0)
  (label lba2ba)
  (invoke-interface {v0} java/util/Enumeration/hasMoreElements )
  (move-result v3)
  (if-eqz v3 lba29a)
  (line 134)
  (invoke-interface {v0} java/util/Enumeration/nextElement )
  (move-result-object v4)
  (check-cast v4 [object java/security/Permission])
  (invoke-virtual-quick {v2 v4} vtable #0xb)
  (goto lba2ba)
  (label lba2da)
  (line 141)
  (const/4 v3 0)
  (goto lba2ac)
)

(method (attrs public abstract ) refresh()void
)

)
