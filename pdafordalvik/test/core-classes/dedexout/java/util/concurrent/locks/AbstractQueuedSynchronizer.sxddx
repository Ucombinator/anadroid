(class (attrs public abstract synchronized ) java/util/concurrent/locks/AbstractQueuedSynchronizer
 (super java/util/concurrent/locks/AbstractOwnableSynchronizer)
 (source "AbstractQueuedSynchronizer.java")
 (implements java/io/Serializable)

 (field (attrs private static final ) headOffset long 0); 0x0 )
 (field (attrs private static final ) nextOffset long 0); 0x0 )
 (field (attrs private static final ) serialVersionUID long 2004876003); 0x777ffae3 )
 (field (attrs static final ) spinForTimeoutThreshold long 1000); 0x3e8 )
 (field (attrs private static final ) stateOffset long )
 (field (attrs private static final ) tailOffset long )
 (field (attrs private static final ) unsafe [object sun/misc/Unsafe] )
 (field (attrs private static final ) waitStatusOffset long )
 (field (attrs private volatile transient ) head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
 (field (attrs private volatile ) state int )
 (field (attrs private volatile transient ) tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )

(method (attrs static ) <clinit>()void
  (limit registers 4)
  (catch java/lang/Exception from lebcbc to lebd5c using lebd5e)
  (const-class v1 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node)
  (const-class v1 java/util/concurrent/locks/AbstractQueuedSynchronizer)
  (line 2249)
  (sget-object v1 java/util/concurrent/locks/UnsafeAccess.THE_ONE [object sun/misc/Unsafe])
  (sput-object v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (label lebcbc)
  (line 2259)
  (sget-object v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (const-class v2 java/util/concurrent/locks/AbstractQueuedSynchronizer)
  (const-string v3 "state")
  (invoke-virtual-quick {v2 v3} java/lang/Class/getDeclaredField [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v1 v2} sun/misc/Unsafe/objectFieldOffset [object java/lang/reflect/Field] )
  (move-result-wide v1)
  (sput-wide v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.stateOffset long)
  (line 2261)
  (sget-object v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (const-class v2 java/util/concurrent/locks/AbstractQueuedSynchronizer)
  (const-string v3 "head")
  (invoke-virtual-quick {v2 v3} java/lang/Class/getDeclaredField [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v1 v2} sun/misc/Unsafe/objectFieldOffset [object java/lang/reflect/Field] )
  (move-result-wide v1)
  (sput-wide v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.headOffset long)
  (line 2263)
  (sget-object v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (const-class v2 java/util/concurrent/locks/AbstractQueuedSynchronizer)
  (const-string v3 "tail")
  (invoke-virtual-quick {v2 v3} java/lang/Class/getDeclaredField [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v1 v2} sun/misc/Unsafe/objectFieldOffset [object java/lang/reflect/Field] )
  (move-result-wide v1)
  (sput-wide v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.tailOffset long)
  (line 2265)
  (sget-object v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (const-class v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node)
  (const-string v3 "waitStatus")
  (invoke-virtual-quick {v2 v3} java/lang/Class/getDeclaredField [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v1 v2} sun/misc/Unsafe/objectFieldOffset [object java/lang/reflect/Field] )
  (move-result-wide v1)
  (sput-wide v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.waitStatusOffset long)
  (line 2267)
  (sget-object v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (const-class v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node)
  (const-string v3 "next")
  (invoke-virtual-quick {v2 v3} java/lang/Class/getDeclaredField [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v1 v2} sun/misc/Unsafe/objectFieldOffset [object java/lang/reflect/Field] )
  (move-result-wide v1)
  (sput-wide v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.nextOffset long)
  (label lebd5c)
  (line 2271)
  (return-void )
  (label lebd5e)
  (line 2270)
  (move-exception v1)
  (move-object v0 v1)
  (new-instance v1 java/lang/Error)
  (invoke-direct {v1 v0} java/lang/Error/<init> [object java/lang/Throwable] )
  (throw v1)
 )

(method (attrs protected ) <init>()void
  (limit registers 1)
  ; this: v0 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 255)
  (invoke-direct {v0} java/util/concurrent/locks/AbstractOwnableSynchronizer/<init> )
  (return-void )
 )

(method (attrs static ) access$000()void
  (limit registers 0)
  (line 245)
  (invoke-static {} java/util/concurrent/locks/AbstractQueuedSynchronizer/selfInterrupt )
  (nop )
  (return-void )
 )

(method (attrs private ) addWaiter([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )[object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node]
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 562)
  (new-instance v0 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node)
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v2)
  (invoke-direct {v0 v2 v4} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/<init> [object java/lang/Thread] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (line 564)
  (iget-object-quick v1 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 565)
  (if-eqz v1 lebdf0)
  (line 566)
  (iput-object-quick v1 v0 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 567)
  (invoke-direct {v3 v1 v0} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetTail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v2)
  (if-eqz v2 lebdf0)
  (line 568)
  (iput-object-quick v0 v1 )
  (label lebdee)
  (line 573)
  (return-object v0)
  (label lebdf0)
  (line 572)
  (invoke-direct {v3 v0} java/util/concurrent/locks/AbstractQueuedSynchronizer/enq [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (goto lebdee)
 )

(method (attrs private ) cancelAcquire([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )void
  (limit registers 9)
  ; this: v7 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v8 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (const/4 v6 0)
  (const/4 v5 15)
  (line 698)
  (if-nez v8 lebe12)
  (label lebe10)
  (line 738)
  (return-void )
  (label lebe12)
  (line 701)
  (iput-object-quick v6 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.thread [object java/lang/Thread])
  (line 704)
  (iget-object-quick v1 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lebe1a)
  (line 705)
  (iget-quick v4 v1 )
  (if-lez v4 lebe2c)
  (line 706)
  (iget-object-quick v1 v1 )
  (iput-object-quick v1 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (goto lebe1a)
  (label lebe2c)
  (line 711)
  (iget-object-quick v2 v1 )
  (line 716)
  (const/4 v4 1)
  (iput-quick v4 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.waitStatus int)
  (line 719)
  (iget-object-quick v4 v7 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v8 v4 lebe52)
  (invoke-direct {v7 v8 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetTail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v4)
  (if-eqz v4 lebe52)
  (line 720)
  (invoke-static {v1 v2 v6} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetNext [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (goto lebe10)
  (label lebe52)
  (line 725)
  (iget-object-quick v4 v7 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eq v1 v4 lebe96)
  (iget-quick v3 v1 )
  (label lebe5e)
  (if-eq v3 v5 lebe72)
  (if-gtz v3 lebe96)
  (invoke-static {v1 v3 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (move-result v4)
  (if-eqz v4 lebe96)
  (label lebe72)
  (iget-object-quick v4 v1 )
  (if-eqz v4 lebe96)
  (line 729)
  (iget-object-quick v0 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lebe7e)
  (line 730)
  (if-eqz v0 lebe90)
  (iget-quick v4 v0 )
  (if-gtz v4 lebe90)
  (line 731)
  (invoke-static {v1 v2 v0} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetNext [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lebe90)
  (line 736)
  (iput-object-quick v8 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (goto lebe10)
  (label lebe96)
  (line 733)
  (invoke-direct {v7 v8} java/util/concurrent/locks/AbstractQueuedSynchronizer/unparkSuccessor [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (goto lebe90)
 )

(method (attrs private final ) compareAndSetHead([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v7 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 2277)
  (sget-object v0 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (sget-wide v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.headOffset long)
  (const/4 v4 0)
  (move-object v1 v6)
  (move-object v5 v7)
  (invoke-virtual-quick/range {v0 .. v5}sun/misc/Unsafe/compareAndSwapObject [object java/lang/Object] long [object java/lang/Object] [object java/lang/Object] )
  (move-result v0)
  (return v0)
 )

(method (attrs private static final ) compareAndSetNext([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 9)
  ; parameter[0] : v6 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  ; parameter[1] : v7 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  ; parameter[2] : v8 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 2303)
  (sget-object v0 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (sget-wide v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.nextOffset long)
  (move-object v1 v6)
  (move-object v4 v7)
  (move-object v5 v8)
  (invoke-virtual-quick/range {v0 .. v5}sun/misc/Unsafe/compareAndSwapObject [object java/lang/Object] long [object java/lang/Object] [object java/lang/Object] )
  (move-result v0)
  (return v0)
 )

(method (attrs private final ) compareAndSetTail([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 9)
  ; this: v6 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v7 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  ; parameter[1] : v8 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 2284)
  (sget-object v0 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (sget-wide v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.tailOffset long)
  (move-object v1 v6)
  (move-object v4 v7)
  (move-object v5 v8)
  (invoke-virtual-quick/range {v0 .. v5}sun/misc/Unsafe/compareAndSwapObject [object java/lang/Object] long [object java/lang/Object] [object java/lang/Object] )
  (move-result v0)
  (return v0)
 )

(method (attrs private static final ) compareAndSetWaitStatus([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )boolean
  (limit registers 9)
  ; parameter[0] : v6 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  ; parameter[1] : v7 (int)
  ; parameter[2] : v8 (int)
  (line 2293)
  (sget-object v0 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (sget-wide v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.waitStatusOffset long)
  (move-object v1 v6)
  (move v4 v7)
  (move v5 v8)
  (invoke-virtual-quick/range {v0 .. v5}sun/misc/Unsafe/compareAndSwapInt [object java/lang/Object] long int int )
  (move-result v0)
  (return v0)
 )

(method (attrs private ) doAcquireInterruptibly(int )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v5 (int)
  (catchall  java/lang/Exception from lebf94 to lebfb8 using lebfb8)
  (catchall  java/lang/Exception from lebf5e to lebf86 using lebfb8)
  (line 839)
  (sget-object v3 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.EXCLUSIVE [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (invoke-direct {v4 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/addWaiter [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result-object v1)
  (line 840)
  (const/4 v0 1)
  (label lebf5e)
  (line 843)
  (invoke-virtual-quick {v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/predecessor )
  (move-result-object v2)
  (label lebf66)
  (line 844)
  (iget-object-quick v3 v4 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v2 v3 lebf94)
  (invoke-virtual-quick {v4 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquire int )
  (move-result v3)
  (if-eqz v3 lebf94)
  (line 845)
  (invoke-direct {v4 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/setHead [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (line 846)
  (const/4 v3 0)
  (iput-object-quick v3 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lebf86)
  (line 847)
  (const/4 v0 0)
  (line 855)
  (if-eqz v0 lebf92)
  (line 856)
  (invoke-direct {v4 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lebf92)
  (return-void )
  (label lebf94)
  (line 850)
  (invoke-static {v2 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/shouldParkAfterFailedAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v3)
  (if-eqz v3 lebf5e)
  (invoke-direct {v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/parkAndCheckInterrupt )
  (move-result v3)
  (if-eqz v3 lebf5e)
  (line 852)
  (new-instance v3 java/lang/InterruptedException)
  (invoke-direct {v3} java/lang/InterruptedException/<init> )
  (throw v3)
  (label lebfb8)
  (line 855)
  (move-exception v3)
  (if-eqz v0 lebfc4)
  (line 856)
  (invoke-direct {v4 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lebfc4)
  (throw v3)
 )

(method (attrs private ) doAcquireNanos(int long )boolean
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 13)
  ; this: v9 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v10 (int)
  ; parameter[1] : v11 (long)
  (catchall  java/lang/Exception from lec054 to lec09a using lec09a)
  (catchall  java/lang/Exception from lec002 to lec02a using lec09a)
  (line 869)
  (invoke-static {} java/lang/System/nanoTime )
  (nop )
  (move-result-wide v1)
  (line 870)
  (sget-object v7 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.EXCLUSIVE [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (invoke-direct {v9 v7} java/util/concurrent/locks/AbstractQueuedSynchronizer/addWaiter [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result-object v3)
  (line 871)
  (const/4 v0 1)
  (label lec002)
  (line 874)
  (invoke-virtual-quick {v3} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/predecessor )
  (move-result-object v6)
  (label lec00a)
  (line 875)
  (iget-object-quick v7 v9 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v6 v7 lec03a)
  (invoke-virtual-quick {v9 v10} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquire int )
  (move-result v7)
  (if-eqz v7 lec03a)
  (line 876)
  (invoke-direct {v9 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/setHead [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (line 877)
  (const/4 v7 0)
  (iput-object-quick v7 v6 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec02a)
  (line 878)
  (const/4 v0 0)
  (line 879)
  (const/4 v7 1)
  (line 893)
  (if-eqz v0 lec038)
  (line 894)
  (invoke-direct {v9 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec038)
  (return v7)
  (label lec03a)
  (line 881)
  (const-wide/16 v7 0)
  (cmp-long v7 v11 v7)
  (if-gtz v7 lec054)
  (line 882)
  (const/4 v7 0)
  (line 893)
  (if-eqz v0 lec038)
  (line 894)
  (invoke-direct {v9 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (goto lec038)
  (label lec054)
  (line 883)
  (invoke-static {v6 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/shouldParkAfterFailedAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v7)
  (if-eqz v7 lec072)
  (const-wide/16 v7 1000)
  (cmp-long v7 v11 v7)
  (if-lez v7 lec072)
  (line 885)
  (invoke-static {v11 v12} java/util/concurrent/locks/LockSupport/parkNanos long )
  (label lec072)
  (line 886)
  (invoke-static {} java/lang/System/nanoTime )
  (nop )
  (move-result-wide v4)
  (label lec07a)
  (line 887)
  (sub-long v7 v4 v1)
  (sub-long/2addr v11 v7)
  (line 888)
  (move-wide v1 v4)
  (line 889)
  (invoke-static {} java/lang/Thread/interrupted )
  (nop )
  (move-result v7)
  (if-eqz v7 lec002)
  (line 890)
  (new-instance v7 java/lang/InterruptedException)
  (invoke-direct {v7} java/lang/InterruptedException/<init> )
  (throw v7)
  (label lec09a)
  (line 893)
  (move-exception v7)
  (if-eqz v0 lec0a6)
  (line 894)
  (invoke-direct {v9 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec0a6)
  (throw v7)
 )

(method (attrs private ) doAcquireShared(int )void
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v7 (int)
  (catchall  java/lang/Exception from lec11c to lec12e using lec138)
  (catchall  java/lang/Exception from lec0dc to lec10e using lec138)
  (line 903)
  (sget-object v5 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.SHARED [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (invoke-direct {v6 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/addWaiter [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result-object v2)
  (line 904)
  (const/4 v0 1)
  (line 906)
  (const/4 v1 0)
  (label lec0dc)
  (line 908)
  (invoke-virtual-quick {v2} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/predecessor )
  (move-result-object v3)
  (label lec0e4)
  (line 909)
  (iget-object-quick v5 v6 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v3 v5 lec11c)
  (line 910)
  (invoke-virtual-quick {v6 v7} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquireShared int )
  (move-result v4)
  (label lec0f4)
  (line 911)
  (if-ltz v4 lec11c)
  (line 912)
  (invoke-direct {v6 v2 v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/setHeadAndPropagate [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int )
  (line 913)
  (const/4 v5 0)
  (iput-object-quick v5 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 914)
  (if-eqz v1 lec10e)
  (line 915)
  (invoke-static {} java/util/concurrent/locks/AbstractQueuedSynchronizer/selfInterrupt )
  (nop )
  (label lec10e)
  (line 916)
  (const/4 v0 0)
  (line 925)
  (if-eqz v0 lec11a)
  (line 926)
  (invoke-direct {v6 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec11a)
  (return-void )
  (label lec11c)
  (line 920)
  (invoke-static {v3 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/shouldParkAfterFailedAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v5)
  (if-eqz v5 lec0dc)
  (invoke-direct {v6} java/util/concurrent/locks/AbstractQueuedSynchronizer/parkAndCheckInterrupt )
  (label lec12e)
  (move-result v5)
  (if-eqz v5 lec0dc)
  (line 922)
  (const/4 v1 1)
  (goto lec0dc)
  (label lec138)
  (line 925)
  (move-exception v5)
  (if-eqz v0 lec144)
  (line 926)
  (invoke-direct {v6 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec144)
  (throw v5)
 )

(method (attrs private ) doAcquireSharedInterruptibly(int )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 7)
  ; this: v5 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v6 (int)
  (catchall  java/lang/Exception from lec1b0 to lec1d4 using lec1d4)
  (catchall  java/lang/Exception from lec17a to lec1a2 using lec1d4)
  (line 936)
  (sget-object v4 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.SHARED [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (invoke-direct {v5 v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/addWaiter [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result-object v1)
  (line 937)
  (const/4 v0 1)
  (label lec17a)
  (line 940)
  (invoke-virtual-quick {v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/predecessor )
  (move-result-object v2)
  (label lec182)
  (line 941)
  (iget-object-quick v4 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v2 v4 lec1b0)
  (line 942)
  (invoke-virtual-quick {v5 v6} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquireShared int )
  (move-result v3)
  (label lec192)
  (line 943)
  (if-ltz v3 lec1b0)
  (line 944)
  (invoke-direct {v5 v1 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/setHeadAndPropagate [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int )
  (line 945)
  (const/4 v4 0)
  (iput-object-quick v4 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec1a2)
  (line 946)
  (const/4 v0 0)
  (line 955)
  (if-eqz v0 lec1ae)
  (line 956)
  (invoke-direct {v5 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec1ae)
  (return-void )
  (label lec1b0)
  (line 950)
  (invoke-static {v2 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/shouldParkAfterFailedAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v4)
  (if-eqz v4 lec17a)
  (invoke-direct {v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/parkAndCheckInterrupt )
  (move-result v4)
  (if-eqz v4 lec17a)
  (line 952)
  (new-instance v4 java/lang/InterruptedException)
  (invoke-direct {v4} java/lang/InterruptedException/<init> )
  (throw v4)
  (label lec1d4)
  (line 955)
  (move-exception v4)
  (if-eqz v0 lec1e0)
  (line 956)
  (invoke-direct {v5 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec1e0)
  (throw v4)
 )

(method (attrs private ) doAcquireSharedNanos(int long )boolean
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 14)
  ; this: v10 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v11 (int)
  ; parameter[1] : v12 (long)
  (catchall  java/lang/Exception from lec270 to lec2b6 using lec2b6)
  (catchall  java/lang/Exception from lec21e to lec246 using lec2b6)
  (line 970)
  (invoke-static {} java/lang/System/nanoTime )
  (nop )
  (move-result-wide v1)
  (line 971)
  (sget-object v8 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.SHARED [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (invoke-direct {v10 v8} java/util/concurrent/locks/AbstractQueuedSynchronizer/addWaiter [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result-object v3)
  (line 972)
  (const/4 v0 1)
  (label lec21e)
  (line 975)
  (invoke-virtual-quick {v3} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/predecessor )
  (move-result-object v6)
  (label lec226)
  (line 976)
  (iget-object-quick v8 v10 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v6 v8 lec256)
  (line 977)
  (invoke-virtual-quick {v10 v11} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquireShared int )
  (move-result v7)
  (label lec236)
  (line 978)
  (if-ltz v7 lec256)
  (line 979)
  (invoke-direct {v10 v3 v7} java/util/concurrent/locks/AbstractQueuedSynchronizer/setHeadAndPropagate [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int )
  (line 980)
  (const/4 v8 0)
  (iput-object-quick v8 v6 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec246)
  (line 981)
  (const/4 v0 0)
  (line 982)
  (const/4 v8 1)
  (line 997)
  (if-eqz v0 lec254)
  (line 998)
  (invoke-direct {v10 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec254)
  (return v8)
  (label lec256)
  (line 985)
  (const-wide/16 v8 0)
  (cmp-long v8 v12 v8)
  (if-gtz v8 lec270)
  (line 986)
  (const/4 v8 0)
  (line 997)
  (if-eqz v0 lec254)
  (line 998)
  (invoke-direct {v10 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (goto lec254)
  (label lec270)
  (line 987)
  (invoke-static {v6 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/shouldParkAfterFailedAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v8)
  (if-eqz v8 lec28e)
  (const-wide/16 v8 1000)
  (cmp-long v8 v12 v8)
  (if-lez v8 lec28e)
  (line 989)
  (invoke-static {v12 v13} java/util/concurrent/locks/LockSupport/parkNanos long )
  (label lec28e)
  (line 990)
  (invoke-static {} java/lang/System/nanoTime )
  (nop )
  (move-result-wide v4)
  (label lec296)
  (line 991)
  (sub-long v8 v4 v1)
  (sub-long/2addr v12 v8)
  (line 992)
  (move-wide v1 v4)
  (line 993)
  (invoke-static {} java/lang/Thread/interrupted )
  (nop )
  (move-result v8)
  (if-eqz v8 lec21e)
  (line 994)
  (new-instance v8 java/lang/InterruptedException)
  (invoke-direct {v8} java/lang/InterruptedException/<init> )
  (throw v8)
  (label lec2b6)
  (line 997)
  (move-exception v8)
  (if-eqz v0 lec2c2)
  (line 998)
  (invoke-direct {v10 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec2c2)
  (throw v8)
 )

(method (attrs private ) doReleaseShared()void
  (limit registers 6)
  ; this: v5 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (const/4 v4 0)
  (const/4 v3 15)
  (label lec2ec)
  (line 639)
  (iget-object-quick v0 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 640)
  (if-eqz v0 lec316)
  (iget-object-quick v2 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eq v0 v2 lec316)
  (line 641)
  (iget-quick v1 v0 )
  (label lec300)
  (line 642)
  (if-ne v1 v3 lec320)
  (line 643)
  (invoke-static {v0 v3 v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (move-result v2)
  (if-eqz v2 lec2ec)
  (line 645)
  (invoke-direct {v5 v0} java/util/concurrent/locks/AbstractQueuedSynchronizer/unparkSuccessor [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec316)
  (line 651)
  (iget-object-quick v2 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v0 v2 lec2ec)
  (line 654)
  (return-void )
  (label lec320)
  (line 647)
  (if-nez v1 lec316)
  (const/4 v2 13)
  (invoke-static {v0 v4 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (move-result v2)
  (if-nez v2 lec316)
  (goto lec2ec)
 )

(method (attrs private ) enq([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )[object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node]
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec344)
  (line 541)
  (iget-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 542)
  (if-nez v0 lec36c)
  (line 543)
  (new-instance v1 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node)
  (invoke-direct {v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/<init> )
  (invoke-direct {v2 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetHead [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v1)
  (if-eqz v1 lec344)
  (line 544)
  (iget-object-quick v1 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (iput-object-quick v1 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (goto lec344)
  (label lec36c)
  (line 546)
  (iput-object-quick v0 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 547)
  (invoke-direct {v2 v0 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetTail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v1)
  (if-eqz v1 lec344)
  (line 548)
  (iput-object-quick v3 v0 )
  (line 549)
  (return-object v0)
 )

(method (attrs private ) findNodeFromTail([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 1603)
  (iget-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec398)
  (line 1605)
  (if-ne v0 v3 lec3a0)
  (line 1606)
  (const/4 v1 1)
  (label lec39e)
  (line 1608)
  (return v1)
  (label lec3a0)
  (line 1607)
  (if-nez v0 lec3a8)
  (line 1608)
  (const/4 v1 0)
  (goto lec39e)
  (label lec3a8)
  (line 1609)
  (iget-object-quick v0 v0 )
  (goto lec398)
 )

(method (attrs private ) fullGetFirstQueuedThread()[object java/lang/Thread]
  (limit registers 9)
  ; this: v8 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1359)
  (iget-object-quick v1 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eqz v1 lec3e4)
  (iget-object-quick v2 v1 )
  (label lec3cc)
  (if-eqz v2 lec3e4)
  (iget-object-quick v6 v2 )
  (iget-object-quick v7 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v6 v7 lec3e4)
  (iget-object-quick v3 v2 )
  (label lec3e0)
  (if-nez v3 lec408)
  (label lec3e4)
  (iget-object-quick v1 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eqz v1 lec40c)
  (iget-object-quick v2 v1 )
  (label lec3f0)
  (if-eqz v2 lec40c)
  (iget-object-quick v6 v2 )
  (iget-object-quick v7 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v6 v7 lec40c)
  (iget-object-quick v3 v2 )
  (label lec404)
  (if-eqz v3 lec40c)
  (label lec408)
  (move-object v6 v3)
  (label lec40a)
  (line 1381)
  (return-object v6)
  (label lec40c)
  (line 1373)
  (iget-object-quick v4 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 1374)
  (const/4 v0 0)
  (label lec412)
  (line 1375)
  (if-eqz v4 lec42e)
  (iget-object-quick v6 v8 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eq v4 v6 lec42e)
  (line 1376)
  (iget-object-quick v5 v4 )
  (label lec422)
  (line 1377)
  (if-eqz v5 lec428)
  (line 1378)
  (move-object v0 v5)
  (label lec428)
  (line 1379)
  (iget-object-quick v4 v4 )
  (line 1380)
  (goto lec412)
  (label lec42e)
  (move-object v6 v0)
  (line 1381)
  (goto lec40a)
 )

(method (attrs private final ) parkAndCheckInterrupt()boolean
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 790)
  (invoke-static {} java/util/concurrent/locks/LockSupport/park )
  (nop )
  (line 791)
  (invoke-static {} java/lang/Thread/interrupted )
  (nop )
  (move-result v0)
  (return v0)
 )

(method (attrs private static ) selfInterrupt()void
  (limit registers 1)
  (line 781)
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v0)
  (invoke-virtual-quick {v0} java/lang/Thread/interrupt )
  (line 782)
  (return-void )
 )

(method (attrs private ) setHead([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )void
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (const/4 v0 0)
  (line 584)
  (iput-object-quick v2 v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 585)
  (iput-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.thread [object java/lang/Thread])
  (line 586)
  (iput-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 587)
  (return-void )
 )

(method (attrs private ) setHeadAndPropagate([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int )void
  (limit registers 6)
  ; this: v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  ; parameter[1] : v5 (int)
  (line 665)
  (iget-object-quick v0 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 666)
  (invoke-direct {v3 v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/setHead [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (line 682)
  (if-gtz v5 lec4be)
  (if-eqz v0 lec4be)
  (iget-quick v2 v0 )
  (if-gez v2 lec4d8)
  (label lec4be)
  (line 683)
  (iget-object-quick v1 v4 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec4c2)
  (line 684)
  (if-eqz v1 lec4d2)
  (invoke-virtual-quick {v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/isShared )
  (move-result v2)
  (if-eqz v2 lec4d8)
  (label lec4d2)
  (line 685)
  (invoke-direct {v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/doReleaseShared )
  (label lec4d8)
  (line 687)
  (return-void )
 )

(method (attrs private static ) shouldParkAfterFailedAcquire([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 4)
  ; parameter[0] : v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  ; parameter[1] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (const/4 v1 15)
  (line 750)
  (iget-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.waitStatus int)
  (line 751)
  (if-ne v0 v1 lec4fa)
  (line 756)
  (const/4 v1 1)
  (label lec4f8)
  (line 774)
  (return v1)
  (label lec4fa)
  (line 757)
  (if-lez v0 lec516)
  (label lec4fe)
  (line 763)
  (iget-object-quick v2 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (iput-object-quick v2 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 764)
  (iget-quick v1 v2 )
  (if-gtz v1 lec4fe)
  (line 765)
  (iput-object-quick v3 v2 )
  (label lec512)
  (line 774)
  (const/4 v1 0)
  (goto lec4f8)
  (label lec516)
  (line 772)
  (invoke-static {v2 v0 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (goto lec512)
 )

(method (attrs private ) unparkSuccessor([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )void
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v5 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 600)
  (iget-quick v2 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.waitStatus int)
  (line 601)
  (if-gez v2 lec540)
  (line 602)
  (const/4 v3 0)
  (invoke-static {v5 v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (label lec540)
  (line 610)
  (iget-object-quick v0 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 611)
  (if-eqz v0 lec550)
  (iget-quick v3 v0 )
  (if-lez v3 lec56e)
  (label lec550)
  (line 612)
  (const/4 v0 0)
  (line 613)
  (iget-object-quick v1 v4 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec556)
  (if-eqz v1 lec56e)
  (if-eq v1 v5 lec56e)
  (line 614)
  (iget-quick v3 v1 )
  (if-gtz v3 lec568)
  (line 615)
  (move-object v0 v1)
  (label lec568)
  (line 613)
  (iget-object-quick v1 v1 )
  (goto lec556)
  (label lec56e)
  (line 617)
  (if-eqz v0 lec57c)
  (line 618)
  (iget-object-quick v3 v0 )
  (invoke-static {v3} java/util/concurrent/locks/LockSupport/unpark [object java/lang/Thread] )
  (label lec57c)
  (line 619)
  (return-void )
 )

(method (attrs public final ) acquire(int )void
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1153)
  (invoke-virtual-quick {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquire int )
  (move-result v0)
  (if-nez v0 lec5ba)
  (sget-object v0 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.EXCLUSIVE [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (invoke-direct {v1 v0} java/util/concurrent/locks/AbstractQueuedSynchronizer/addWaiter [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result-object v0)
  (invoke-virtual-quick {v1 v0 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/acquireQueued [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int )
  (move-result v0)
  (if-eqz v0 lec5ba)
  (line 1155)
  (invoke-static {} java/util/concurrent/locks/AbstractQueuedSynchronizer/selfInterrupt )
  (nop )
  (label lec5ba)
  (line 1156)
  (return-void )
)

(method (attrs public final ) acquireInterruptibly(int )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1173)
  (invoke-static {} java/lang/Thread/interrupted )
  (nop )
  (move-result v0)
  (if-eqz v0 lec5e4)
  (line 1174)
  (new-instance v0 java/lang/InterruptedException)
  (invoke-direct {v0} java/lang/InterruptedException/<init> )
  (throw v0)
  (label lec5e4)
  (line 1175)
  (invoke-virtual-quick {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquire int )
  (move-result v0)
  (if-nez v0 lec5f6)
  (line 1176)
  (invoke-direct {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/doAcquireInterruptibly int )
  (label lec5f6)
  (line 1177)
  (return-void )
)

(method (attrs final ) acquireQueued([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int )boolean
  (limit registers 7)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v5 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  ; parameter[1] : v6 (int)
  (catchall  java/lang/Exception from lec642 to lec654 using lec65e)
  (catchall  java/lang/Exception from lec60c to lec634 using lec65e)
  (line 812)
  (const/4 v0 1)
  (line 814)
  (const/4 v1 0)
  (label lec60c)
  (line 816)
  (invoke-virtual-quick {v5} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/predecessor )
  (move-result-object v2)
  (label lec614)
  (line 817)
  (iget-object-quick v3 v4 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v2 v3 lec642)
  (invoke-virtual-quick {v4 v6} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquire int )
  (move-result v3)
  (if-eqz v3 lec642)
  (line 818)
  (invoke-direct {v4 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/setHead [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (line 819)
  (const/4 v3 0)
  (iput-object-quick v3 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec634)
  (line 820)
  (const/4 v0 0)
  (line 828)
  (if-eqz v0 lec640)
  (line 829)
  (invoke-direct {v4 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec640)
  (return v1)
  (label lec642)
  (line 823)
  (invoke-static {v2 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/shouldParkAfterFailedAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v3)
  (if-eqz v3 lec60c)
  (invoke-direct {v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/parkAndCheckInterrupt )
  (label lec654)
  (move-result v3)
  (if-eqz v3 lec60c)
  (line 825)
  (const/4 v1 1)
  (goto lec60c)
  (label lec65e)
  (line 828)
  (move-exception v3)
  (if-eqz v0 lec66a)
  (line 829)
  (invoke-direct {v4 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/cancelAcquire [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lec66a)
  (throw v3)
)

(method (attrs public final ) acquireShared(int )void
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1235)
  (invoke-virtual-quick {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquireShared int )
  (move-result v0)
  (if-gez v0 lec6a2)
  (line 1236)
  (invoke-direct {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/doAcquireShared int )
  (label lec6a2)
  (line 1237)
  (return-void )
)

(method (attrs public final ) acquireSharedInterruptibly(int )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1253)
  (invoke-static {} java/lang/Thread/interrupted )
  (nop )
  (move-result v0)
  (if-eqz v0 lec6cc)
  (line 1254)
  (new-instance v0 java/lang/InterruptedException)
  (invoke-direct {v0} java/lang/InterruptedException/<init> )
  (throw v0)
  (label lec6cc)
  (line 1255)
  (invoke-virtual-quick {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquireShared int )
  (move-result v0)
  (if-gez v0 lec6de)
  (line 1256)
  (invoke-direct {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/doAcquireSharedInterruptibly int )
  (label lec6de)
  (line 1257)
  (return-void )
)

(method (attrs final ) apparentlyFirstQueuedIsExclusive()boolean
  (limit registers 4)
  ; this: v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1414)
  (iget-object-quick v0 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eqz v0 lec718)
  (iget-object-quick v1 v0 )
  (label lec6fc)
  (if-eqz v1 lec718)
  (invoke-virtual-quick {v1} vtable #0xb)
  (move-result v2)
  (if-nez v2 lec718)
  (iget-object-quick v2 v1 )
  (if-eqz v2 lec718)
  (const/4 v2 1)
  (label lec716)
  (return v2)
  (label lec718)
  (const/4 v2 0)
  (goto lec716)
)

(method (attrs protected final ) compareAndSetState(int int )boolean
  (limit registers 9)
  ; this: v6 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v7 (int)
  ; parameter[1] : v8 (int)
  (line 522)
  (sget-object v0 java/util/concurrent/locks/AbstractQueuedSynchronizer.unsafe [object sun/misc/Unsafe])
  (sget-wide v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.stateOffset long)
  (move-object v1 v6)
  (move v4 v7)
  (move v5 v8)
  (invoke-virtual-quick/range {v0 .. v5}sun/misc/Unsafe/compareAndSwapInt [object java/lang/Object] long int int )
  (move-result v0)
  (return v0)
)

(method (attrs final ) fullyRelease([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )int
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v5 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (catchall  java/lang/Exception from lec778 to lec784 using lec784)
  (catchall  java/lang/Exception from lec758 to lec766 using lec784)
  (const/4 v3 1)
  (line 1670)
  (const/4 v0 1)
  (label lec758)
  (line 1672)
  (invoke-virtual-quick {v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/getState )
  (move-result v1)
  (label lec760)
  (line 1673)
  (invoke-virtual-quick {v4 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/release int )
  (label lec766)
  (move-result v2)
  (if-eqz v2 lec778)
  (line 1674)
  (const/4 v0 0)
  (line 1680)
  (if-eqz v0 lec776)
  (line 1681)
  (iput-quick v3 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.waitStatus int)
  (label lec776)
  (return v1)
  (label lec778)
  (line 1677)
  (new-instance v2 java/lang/IllegalMonitorStateException)
  (invoke-direct {v2} java/lang/IllegalMonitorStateException/<init> )
  (throw v2)
  (label lec784)
  (line 1680)
  (move-exception v2)
  (if-eqz v0 lec78e)
  (line 1681)
  (iput-quick v3 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.waitStatus int)
  (label lec78e)
  (throw v2)
)

(method (attrs public final ) getExclusiveQueuedThreads()[object java/util/Collection]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "()"  "Ljava/util/Collection"  "<"  "Ljava/lang/Thread;"  ">;")
  )
  (limit registers 5)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1525)
  (new-instance v0 java/util/ArrayList)
  (invoke-direct {v0} java/util/ArrayList/<init> )
  (line 1526)
  (iget-object-quick v1 v4 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec7c2)
  (if-eqz v1 lec7e6)
  (line 1527)
  (invoke-virtual-quick {v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/isShared )
  (move-result v3)
  (if-nez v3 lec7e0)
  (line 1528)
  (iget-object-quick v2 v1 )
  (label lec7d6)
  (line 1529)
  (if-eqz v2 lec7e0)
  (line 1530)
  (invoke-virtual-quick {v0 v2} java/util/ArrayList/add [object java/lang/Object] )
  (label lec7e0)
  (line 1526)
  (iget-object-quick v1 v1 )
  (goto lec7c2)
  (label lec7e6)
  (line 1533)
  (return-object v0)
)

(method (attrs public final ) getFirstQueuedThread()[object java/lang/Thread]
  (limit registers 3)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1342)
  (iget-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (iget-object-quick v1 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-ne v0 v1 lec808)
  (const/4 v0 0)
  (label lec806)
  (return-object v0)
  (label lec808)
  (invoke-direct {v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/fullGetFirstQueuedThread )
  (move-result-object v0)
  (goto lec806)
)

(method (attrs public final ) getQueueLength()int
  (limit registers 4)
  ; this: v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1487)
  (const/4 v0 0)
  (line 1488)
  (iget-object-quick v1 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec82a)
  (if-eqz v1 lec840)
  (line 1489)
  (iget-object-quick v2 v1 )
  (if-eqz v2 lec83a)
  (line 1490)
  (add-int/lit8 v0 v0 1)
  (label lec83a)
  (line 1488)
  (iget-object-quick v1 v1 )
  (goto lec82a)
  (label lec840)
  (line 1492)
  (return v0)
)

(method (attrs public final ) getQueuedThreads()[object java/util/Collection]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "()"  "Ljava/util/Collection"  "<"  "Ljava/lang/Thread;"  ">;")
  )
  (limit registers 4)
  ; this: v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1507)
  (new-instance v0 java/util/ArrayList)
  (invoke-direct {v0} java/util/ArrayList/<init> )
  (line 1508)
  (iget-object-quick v1 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec862)
  (if-eqz v1 lec87a)
  (line 1509)
  (iget-object-quick v2 v1 )
  (label lec86a)
  (line 1510)
  (if-eqz v2 lec874)
  (line 1511)
  (invoke-virtual-quick {v0 v2} java/util/ArrayList/add [object java/lang/Object] )
  (label lec874)
  (line 1508)
  (iget-object-quick v1 v1 )
  (goto lec862)
  (label lec87a)
  (line 1513)
  (return-object v0)
)

(method (attrs public final ) getSharedQueuedThreads()[object java/util/Collection]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "()"  "Ljava/util/Collection"  "<"  "Ljava/lang/Thread;"  ">;")
  )
  (limit registers 5)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1545)
  (new-instance v0 java/util/ArrayList)
  (invoke-direct {v0} java/util/ArrayList/<init> )
  (line 1546)
  (iget-object-quick v1 v4 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lec89a)
  (if-eqz v1 lec8be)
  (line 1547)
  (invoke-virtual-quick {v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$Node/isShared )
  (move-result v3)
  (if-eqz v3 lec8b8)
  (line 1548)
  (iget-object-quick v2 v1 )
  (label lec8ae)
  (line 1549)
  (if-eqz v2 lec8b8)
  (line 1550)
  (invoke-virtual-quick {v0 v2} java/util/ArrayList/add [object java/lang/Object] )
  (label lec8b8)
  (line 1546)
  (iget-object-quick v1 v1 )
  (goto lec89a)
  (label lec8be)
  (line 1553)
  (return-object v0)
)

(method (attrs protected final ) getState()int
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 497)
  (iget-quick v0 v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.state int)
  (return v0)
)

(method (attrs public final ) getWaitQueueLength([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject] )int
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject])
  (line 1740)
  (invoke-virtual-quick {v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/owns [object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject] )
  (move-result v0)
  (if-nez v0 lec904)
  (line 1741)
  (new-instance v0 java/lang/IllegalArgumentException)
  (const-string v1 "Not owner")
  (invoke-direct {v0 v1} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v0)
  (label lec904)
  (line 1742)
  (invoke-virtual-quick {v3} java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject/getWaitQueueLength )
  (move-result v0)
  (return v0)
)

(method (attrs public final ) getWaitingThreads([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject] )[object java/util/Collection]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "("  "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;"  ")"  "Ljava/util/Collection"  "<"  "Ljava/lang/Thread;"  ">;")
  )
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject])
  (line 1762)
  (invoke-virtual-quick {v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/owns [object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject] )
  (move-result v0)
  (if-nez v0 lec93c)
  (line 1763)
  (new-instance v0 java/lang/IllegalArgumentException)
  (const-string v1 "Not owner")
  (invoke-direct {v0 v1} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v0)
  (label lec93c)
  (line 1764)
  (invoke-virtual-quick {v3} java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject/getWaitingThreads )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public final ) hasContended()boolean
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1326)
  (iget-object-quick v0 v1 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eqz v0 lec964)
  (const/4 v0 1)
  (label lec962)
  (return v0)
  (label lec964)
  (const/4 v0 0)
  (goto lec962)
)

(method (attrs final ) hasQueuedPredecessors()boolean
  (limit registers 6)
  ; this: v5 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1466)
  (iget-object-quick v2 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 1467)
  (iget-object-quick v0 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 1469)
  (if-eq v0 v2 lec9a0)
  (iget-object-quick v1 v0 )
  (label lec988)
  (if-eqz v1 lec99c)
  (iget-object-quick v3 v1 )
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v4)
  (if-eq v3 v4 lec9a0)
  (label lec99c)
  (const/4 v3 1)
  (label lec99e)
  (return v3)
  (label lec9a0)
  (const/4 v3 0)
  (goto lec99e)
)

(method (attrs public final ) hasQueuedThreads()boolean
  (limit registers 3)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1313)
  (iget-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (iget-object-quick v1 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eq v0 v1 lec9c4)
  (const/4 v0 1)
  (label lec9c2)
  (return v0)
  (label lec9c4)
  (const/4 v0 0)
  (goto lec9c2)
)

(method (attrs public final ) hasWaiters([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject] )boolean
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject])
  (line 1718)
  (invoke-virtual-quick {v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/owns [object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject] )
  (move-result v0)
  (if-nez v0 lec9f4)
  (line 1719)
  (new-instance v0 java/lang/IllegalArgumentException)
  (const-string v1 "Not owner")
  (invoke-direct {v0 v1} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v0)
  (label lec9f4)
  (line 1720)
  (invoke-virtual-quick {v3} java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject/hasWaiters )
  (move-result v0)
  (return v0)
)

(method (attrs protected ) isHeldExclusively()boolean
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1137)
  (new-instance v0 java/lang/UnsupportedOperationException)
  (invoke-direct {v0} java/lang/UnsupportedOperationException/<init> )
  (throw v0)
)

(method (attrs final ) isOnSyncQueue([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (line 1582)
  (iget-quick v0 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.waitStatus int)
  (const/4 v1 14)
  (if-eq v0 v1 leca3e)
  (iget-object-quick v0 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.prev [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-nez v0 leca42)
  (label leca3e)
  (line 1583)
  (const/4 v0 0)
  (label leca40)
  (line 1594)
  (return v0)
  (label leca42)
  (line 1584)
  (iget-object-quick v0 v3 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.next [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (if-eqz v0 leca4e)
  (line 1585)
  (const/4 v0 1)
  (goto leca40)
  (label leca4e)
  (line 1594)
  (invoke-direct {v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/findNodeFromTail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v0)
  (goto leca40)
)

(method (attrs public final ) isQueued([object java/lang/Thread] )boolean
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/lang/Thread])
  (line 1395)
  (if-nez v3 leca78)
  (line 1396)
  (new-instance v1 java/lang/NullPointerException)
  (invoke-direct {v1} java/lang/NullPointerException/<init> )
  (throw v1)
  (label leca78)
  (line 1397)
  (iget-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.tail [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label leca7c)
  (if-eqz v0 leca92)
  (line 1398)
  (iget-object-quick v1 v0 )
  (if-ne v1 v3 leca8c)
  (line 1399)
  (const/4 v1 1)
  (label leca8a)
  (line 1400)
  (return v1)
  (label leca8c)
  (line 1397)
  (iget-object-quick v0 v0 )
  (goto leca7c)
  (label leca92)
  (line 1400)
  (const/4 v1 0)
  (goto leca8a)
)

(method (attrs public final ) owns([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject] )boolean
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject])
  (line 1696)
  (if-nez v2 lecab8)
  (line 1697)
  (new-instance v0 java/lang/NullPointerException)
  (invoke-direct {v0} java/lang/NullPointerException/<init> )
  (throw v0)
  (label lecab8)
  (line 1698)
  (invoke-virtual-quick {v2 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject/isOwnedBy [object java/util/concurrent/locks/AbstractQueuedSynchronizer] )
  (move-result v0)
  (return v0)
)

(method (attrs public final ) release(int )boolean
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 (int)
  (line 1214)
  (invoke-virtual-quick {v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryRelease int )
  (move-result v1)
  (if-eqz v1 lecafa)
  (line 1215)
  (iget-object-quick v0 v2 java/util/concurrent/locks/AbstractQueuedSynchronizer.head [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (label lecae4)
  (line 1216)
  (if-eqz v0 lecaf6)
  (iget-quick v1 v0 )
  (if-eqz v1 lecaf6)
  (line 1217)
  (invoke-direct {v2 v0} java/util/concurrent/locks/AbstractQueuedSynchronizer/unparkSuccessor [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (label lecaf6)
  (line 1218)
  (const/4 v1 1)
  (label lecaf8)
  (line 1220)
  (return v1)
  (label lecafa)
  (const/4 v1 0)
  (goto lecaf8)
)

(method (attrs public final ) releaseShared(int )boolean
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1292)
  (invoke-virtual-quick {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryReleaseShared int )
  (move-result v0)
  (if-eqz v0 lecb26)
  (line 1293)
  (invoke-direct {v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/doReleaseShared )
  (line 1294)
  (const/4 v0 1)
  (label lecb24)
  (line 1296)
  (return v0)
  (label lecb26)
  (const/4 v0 0)
  (goto lecb24)
)

(method (attrs protected final ) setState(int )void
  (limit registers 2)
  ; this: v0 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v1 (int)
  (line 506)
  (iput-quick v1 v0 java/util/concurrent/locks/AbstractQueuedSynchronizer.state int)
  (line 507)
  (return-void )
)

(method (attrs public ) toString()[object java/lang/String]
  (limit registers 5)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  (line 1566)
  (invoke-virtual-quick {v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/getState )
  (move-result v1)
  (line 1567)
  (invoke-virtual-quick {v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/hasQueuedThreads )
  (move-result v2)
  (if-eqz v2 lecbc6)
  (const-string v2 "non")
  (move-object v0 v2)
  (label lecb6e)
  (line 1568)
  (new-instance v2 java/lang/StringBuilder)
  (invoke-direct {v2} java/lang/StringBuilder/<init> )
  (invoke-super-quick {v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/toString )
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "[State = ")
  (invoke-virtual-quick {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v2 v1} java/lang/StringBuilder/append int )
  (move-result-object v2)
  (const-string v3 ", ")
  (invoke-virtual-quick {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v2 v0} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "empty queue]")
  (invoke-virtual-quick {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual-quick {v2} java/lang/StringBuilder/toString )
  (move-result-object v2)
  (return-object v2)
  (label lecbc6)
  (line 1567)
  (const-string v2 "")
  (move-object v0 v2)
  (goto lecb6e)
)

(method (attrs final ) transferAfterCancelledWait([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 4)
  ; this: v2 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v3 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (const/4 v1 0)
  (line 1648)
  (const/4 v0 14)
  (invoke-static {v3 v0 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (move-result v0)
  (if-eqz v0 lecbfa)
  (line 1649)
  (invoke-direct {v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/enq [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (line 1650)
  (const/4 v0 1)
  (label lecbf8)
  (line 1660)
  (return v0)
  (label lecbfa)
  (line 1658)
  (invoke-virtual-quick {v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/isOnSyncQueue [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result v0)
  (if-nez v0 lecc0e)
  (line 1659)
  (invoke-static {} java/lang/Thread/yield )
  (nop )
  (goto lecbfa)
  (label lecc0e)
  (move v0 v1)
  (line 1660)
  (goto lecbf8)
)

(method (attrs final ) transferForSignal([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )boolean
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v5 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node])
  (const/4 v3 0)
  (line 1624)
  (const/4 v2 14)
  (invoke-static {v5 v2 v3} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (move-result v2)
  (if-nez v2 lecc38)
  (move v2 v3)
  (label lecc36)
  (line 1637)
  (return v2)
  (label lecc38)
  (line 1633)
  (invoke-direct {v4 v5} java/util/concurrent/locks/AbstractQueuedSynchronizer/enq [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] )
  (move-result-object v0)
  (line 1634)
  (iget-quick v1 v0 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.waitStatus int)
  (line 1635)
  (if-gtz v1 lecc56)
  (const/4 v2 15)
  (invoke-static {v0 v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/compareAndSetWaitStatus [object java/util/concurrent/locks/AbstractQueuedSynchronizer$Node] int int )
  (move-result v2)
  (if-nez v2 lecc60)
  (label lecc56)
  (line 1636)
  (iget-object-quick v2 v5 java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.thread [object java/lang/Thread])
  (invoke-static {v2} java/util/concurrent/locks/LockSupport/unpark [object java/lang/Thread] )
  (label lecc60)
  (line 1637)
  (const/4 v2 1)
  (goto lecc36)
)

(method (attrs protected ) tryAcquire(int )boolean
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1031)
  (new-instance v0 java/lang/UnsupportedOperationException)
  (invoke-direct {v0} java/lang/UnsupportedOperationException/<init> )
  (throw v0)
)

(method (attrs public final ) tryAcquireNanos(int long )boolean
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 5)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  ; parameter[1] : v3 (long)
  (line 1197)
  (invoke-static {} java/lang/Thread/interrupted )
  (nop )
  (move-result v0)
  (if-eqz v0 lecca8)
  (line 1198)
  (new-instance v0 java/lang/InterruptedException)
  (invoke-direct {v0} java/lang/InterruptedException/<init> )
  (throw v0)
  (label lecca8)
  (line 1199)
  (invoke-virtual-quick {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquire int )
  (move-result v0)
  (if-nez v0 leccc0)
  (invoke-direct {v1 v2 v3 v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/doAcquireNanos int long )
  (move-result v0)
  (if-eqz v0 leccc4)
  (label leccc0)
  (const/4 v0 1)
  (label leccc2)
  (return v0)
  (label leccc4)
  (const/4 v0 0)
  (goto leccc2)
)

(method (attrs protected ) tryAcquireShared(int )int
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1093)
  (new-instance v0 java/lang/UnsupportedOperationException)
  (invoke-direct {v0} java/lang/UnsupportedOperationException/<init> )
  (throw v0)
)

(method (attrs public final ) tryAcquireSharedNanos(int long )boolean
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/lang/InterruptedException])
  )
  (limit registers 5)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  ; parameter[1] : v3 (long)
  (line 1276)
  (invoke-static {} java/lang/Thread/interrupted )
  (nop )
  (move-result v0)
  (if-eqz v0 lecd0c)
  (line 1277)
  (new-instance v0 java/lang/InterruptedException)
  (invoke-direct {v0} java/lang/InterruptedException/<init> )
  (throw v0)
  (label lecd0c)
  (line 1278)
  (invoke-virtual-quick {v1 v2} java/util/concurrent/locks/AbstractQueuedSynchronizer/tryAcquireShared int )
  (move-result v0)
  (if-gez v0 lecd24)
  (invoke-direct {v1 v2 v3 v4} java/util/concurrent/locks/AbstractQueuedSynchronizer/doAcquireSharedNanos int long )
  (move-result v0)
  (if-eqz v0 lecd28)
  (label lecd24)
  (const/4 v0 1)
  (label lecd26)
  (return v0)
  (label lecd28)
  (const/4 v0 0)
  (goto lecd26)
)

(method (attrs protected ) tryRelease(int )boolean
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1057)
  (new-instance v0 java/lang/UnsupportedOperationException)
  (invoke-direct {v0} java/lang/UnsupportedOperationException/<init> )
  (throw v0)
)

(method (attrs protected ) tryReleaseShared(int )boolean
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/AbstractQueuedSynchronizer])
  ; parameter[0] : v2 (int)
  (line 1118)
  (new-instance v0 java/lang/UnsupportedOperationException)
  (invoke-direct {v0} java/lang/UnsupportedOperationException/<init> )
  (throw v0)
)

)
