(class (attrs synchronized ) java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl
 (super java/util/concurrent/atomic/AtomicIntegerFieldUpdater)
 (source "AtomicIntegerFieldUpdater.java")

 (field (attrs private static final ) unsafe [object sun/misc/Unsafe] )
 (field (attrs private final ) cclass [object java/lang/Class] )
 (field (attrs private final ) offset long )
 (field (attrs private final ) tclass [object java/lang/Class] )

(method (attrs static ) <clinit>()void
  (limit registers 1)
  (line 230)
  (sget-object v0 java/util/concurrent/atomic/UnsafeAccess.THE_ONE [object sun/misc/Unsafe])
  (sput-object v0 java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe [object sun/misc/Unsafe])
  (return-void )
 )

(method (attrs ) <init>([object java/lang/Class] [object java/lang/String] )void
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "("  "Ljava/lang/Class"  "<TT;>;"  "Ljava/lang/String;"  ")V")
  )
  (limit registers 12)
  ; this: v9 ([object java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl])
  ; parameter[0] : v10 ([object java/lang/Class])
  ; parameter[1] : v11 ([object java/lang/String])
  (catch java/lang/Exception from lf1224 to lf1274 using lf129a)
  (line 236)
  (invoke-direct {v9} java/util/concurrent/atomic/AtomicIntegerFieldUpdater/<init> )
  (line 237)
  (const/4 v2 0)
  (line 238)
  (const/4 v0 0)
  (line 239)
  (const/4 v4 0)
  (label lf1224)
  (line 241)
  (invoke-virtual-quick {v10 v11} vtable #0x1d)
  (move-result-object v2)
  (line 243)
  (invoke-static {} dalvik/system/VMStack/getStackClass2 )
  (nop )
  (move-result-object v0)
  (line 245)
  (invoke-virtual-quick {v2} vtable #0x24)
  (move-result v4)
  (line 247)
  (invoke-static {} java/lang/System/getSecurityManager )
  (nop )
  (move-result-object v5)
  (label lf1244)
  (line 248)
  (if-eqz v5 lf1274)
  (line 249)
  (invoke-static {v4} java/lang/reflect/Modifier/isPublic int )
  (move-result v7)
  (if-eqz v7 lf1294)
  (const/4 v7 0)
  (move v6 v7)
  (label lf1258)
  (line 251)
  (invoke-virtual-quick {v5 v10 v6} vtable #0x17)
  (line 252)
  (invoke-virtual-quick {v10} vtable #0x2f)
  (move-result-object v7)
  (invoke-virtual-quick {v7} vtable #0x11)
  (move-result-object v7)
  (invoke-virtual-quick {v5 v7} vtable #0x1a)
  (label lf1274)
  (line 258)
  (invoke-virtual-quick {v2} vtable #0x27)
  (move-result-object v3)
  (label lf127c)
  (line 259)
  (sget-object v7 java/lang/Integer.TYPE [object java/lang/Class])
  (if-eq v3 v7 lf12aa)
  (line 260)
  (new-instance v7 java/lang/IllegalArgumentException)
  (const-string v8 "Must be integer type")
  (invoke-direct {v7 v8} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v7)
  (label lf1294)
  (line 249)
  (const/4 v7 1)
  (move v6 v7)
  (goto lf1258)
  (label lf129a)
  (line 254)
  (move-exception v7)
  (move-object v1 v7)
  (label lf129e)
  (line 255)
  (new-instance v7 java/lang/RuntimeException)
  (invoke-direct {v7 v1} java/lang/RuntimeException/<init> [object java/lang/Throwable] )
  (throw v7)
  (label lf12aa)
  (line 262)
  (invoke-static {v4} java/lang/reflect/Modifier/isVolatile int )
  (move-result v7)
  (if-nez v7 lf12c6)
  (line 263)
  (new-instance v7 java/lang/IllegalArgumentException)
  (const-string v8 "Must be volatile type")
  (invoke-direct {v7 v8} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v7)
  (label lf12c6)
  (line 265)
  (invoke-static {v4} java/lang/reflect/Modifier/isProtected int )
  (move-result v7)
  (if-eqz v7 lf12f2)
  (if-eq v0 v10 lf12f2)
  (move-object v7 v0)
  (label lf12d8)
  (iput-object-quick v7 v9 )
  (line 267)
  (iput-object-quick v10 v9 )
  (line 268)
  (sget-object v7 java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe [object sun/misc/Unsafe])
  (invoke-virtual-quick {v7 v2} vtable #0x16)
  (move-result-wide v7)
  (iput-wide-quick v7 v9 )
  (line 269)
  (return-void )
  (label lf12f2)
  (line 265)
  (const/4 v7 0)
  (goto lf12d8)
 )

(method (attrs private ) ensureProtectedAccess([object java/lang/Object] )void
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "(TT;)V")
  )
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl])
  ; parameter[0] : v5 ([object java/lang/Object])
  (line 299)
  (iget-object-quick v0 v4 )
  (invoke-virtual-quick {v0 v5} vtable #0x3d)
  (move-result v0)
  (if-eqz v0 lf132a)
  (line 300)
  (return-void )
  (label lf132a)
  (line 302)
  (new-instance v0 java/lang/RuntimeException)
  (new-instance v1 java/lang/IllegalAccessException)
  (new-instance v2 java/lang/StringBuilder)
  (invoke-direct {v2} java/lang/StringBuilder/<init> )
  (const-string v3 "Class ")
  (invoke-virtual-quick {v2 v3} vtable #0x3b)
  (move-result-object v2)
  (iget-object-quick v3 v4 )
  (invoke-virtual-quick {v3} vtable #0x2e)
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} vtable #0x3b)
  (move-result-object v2)
  (const-string v3 " can not access a protected member of class ")
  (invoke-virtual-quick {v2 v3} vtable #0x3b)
  (move-result-object v2)
  (iget-object-quick v3 v4 )
  (invoke-virtual-quick {v3} vtable #0x2e)
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} vtable #0x3b)
  (move-result-object v2)
  (const-string v3 " using an instance of ")
  (invoke-virtual-quick {v2 v3} vtable #0x3b)
  (move-result-object v2)
  (invoke-virtual-quick {v5} vtable #0x3)
  (move-result-object v3)
  (invoke-virtual-quick {v3} vtable #0x2e)
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} vtable #0x3b)
  (move-result-object v2)
  (invoke-virtual-quick {v2} vtable #0x7)
  (move-result-object v2)
  (invoke-direct {v1 v2} java/lang/IllegalAccessException/<init> [object java/lang/String] )
  (invoke-direct {v0 v1} java/lang/RuntimeException/<init> [object java/lang/Throwable] )
  (throw v0)
 )

(method (attrs private ) fullCheck([object java/lang/Object] )void
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "(TT;)V")
  )
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl])
  ; parameter[0] : v2 ([object java/lang/Object])
  (line 272)
  (iget-object-quick v0 v1 )
  (invoke-virtual-quick {v0 v2} vtable #0x3d)
  (move-result v0)
  (if-nez v0 lf13e4)
  (line 273)
  (new-instance v0 java/lang/ClassCastException)
  (invoke-direct {v0} java/lang/ClassCastException/<init> )
  (throw v0)
  (label lf13e4)
  (line 274)
  (iget-object-quick v0 v1 )
  (if-eqz v0 lf13f2)
  (line 275)
  (invoke-direct {v1 v2} java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl/ensureProtectedAccess [object java/lang/Object] )
  (label lf13f2)
  (line 276)
  (return-void )
 )

(method (attrs public ) compareAndSet([object java/lang/Object] int int )boolean
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "(TT;II)Z")
  )
  (limit registers 10)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl])
  ; parameter[0] : v7 ([object java/lang/Object])
  ; parameter[1] : v8 (int)
  ; parameter[2] : v9 (int)
  (line 279)
  (if-eqz v7 lf1420)
  (invoke-virtual-quick {v7} vtable #0x3)
  (move-result-object v0)
  (iget-object-quick v1 v6 )
  (if-ne v0 v1 lf1420)
  (iget-object-quick v0 v6 )
  (if-eqz v0 lf1426)
  (label lf1420)
  (invoke-direct {v6 v7} java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl/fullCheck [object java/lang/Object] )
  (label lf1426)
  (line 280)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe [object sun/misc/Unsafe])
  (iget-wide-quick v2 v6 )
  (move-object v1 v7)
  (move v4 v8)
  (move v5 v9)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xd)
  (move-result v0)
  (return v0)
)

(method (attrs public final ) get([object java/lang/Object] )int
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "(TT;)I")
  )
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl])
  ; parameter[0] : v4 ([object java/lang/Object])
  (line 294)
  (if-eqz v4 lf146c)
  (invoke-virtual-quick {v4} vtable #0x3)
  (move-result-object v0)
  (iget-object-quick v1 v3 )
  (if-ne v0 v1 lf146c)
  (iget-object-quick v0 v3 )
  (if-eqz v0 lf1472)
  (label lf146c)
  (invoke-direct {v3 v4} java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl/fullCheck [object java/lang/Object] )
  (label lf1472)
  (line 295)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe [object sun/misc/Unsafe])
  (iget-wide-quick v1 v3 )
  (invoke-virtual-quick {v0 v4 v1 v2} vtable #0x11)
  (move-result v0)
  (return v0)
)

(method (attrs public ) set([object java/lang/Object] int )void
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "(TT;I)V")
  )
  (limit registers 6)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl])
  ; parameter[0] : v4 ([object java/lang/Object])
  ; parameter[1] : v5 (int)
  (line 289)
  (if-eqz v4 lf14b0)
  (invoke-virtual-quick {v4} vtable #0x3)
  (move-result-object v0)
  (iget-object-quick v1 v3 )
  (if-ne v0 v1 lf14b0)
  (iget-object-quick v0 v3 )
  (if-eqz v0 lf14b6)
  (label lf14b0)
  (invoke-direct {v3 v4} java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl/fullCheck [object java/lang/Object] )
  (label lf14b6)
  (line 290)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe [object sun/misc/Unsafe])
  (iget-wide-quick v1 v3 )
  (invoke-virtual-quick {v0 v4 v1 v2v5} vtable #0x19)
  (line 291)
  (return-void )
)

(method (attrs public ) weakCompareAndSet([object java/lang/Object] int int )boolean
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "(TT;II)Z")
  )
  (limit registers 10)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl])
  ; parameter[0] : v7 ([object java/lang/Object])
  ; parameter[1] : v8 (int)
  ; parameter[2] : v9 (int)
  (line 284)
  (if-eqz v7 lf14f4)
  (invoke-virtual-quick {v7} vtable #0x3)
  (move-result-object v0)
  (iget-object-quick v1 v6 )
  (if-ne v0 v1 lf14f4)
  (iget-object-quick v0 v6 )
  (if-eqz v0 lf14fa)
  (label lf14f4)
  (invoke-direct {v6 v7} java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl/fullCheck [object java/lang/Object] )
  (label lf14fa)
  (line 285)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.unsafe [object sun/misc/Unsafe])
  (iget-wide-quick v2 v6 )
  (move-object v1 v7)
  (move v4 v8)
  (move v5 v9)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xd)
  (move-result v0)
  (return v0)
)

)
