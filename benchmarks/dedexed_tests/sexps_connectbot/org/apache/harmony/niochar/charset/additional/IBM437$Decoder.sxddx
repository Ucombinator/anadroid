(class (attrs final ) org/apache/harmony/niochar/charset/additional/IBM437$Decoder
 (super java/nio/charset/CharsetDecoder)
 (source "IBM437.java")

 (field (attrs static final ) arr [array char] )

(method (attrs static ) <clinit>()void
  (limit registers 1)
  (line 101)
  (const/16 v0 230)
  (new-array v0 v0 [array char])
  (fill-array-data v0 l37a24)
  (sput-object v0 org/apache/harmony/niochar/charset/additional/IBM437$Decoder.arr [array char])
  (line 35)
  (return-void )
  (line 101)
  (label l37a24)
  (data-array
    (0x1C 0x00) ; #0
    (0x1B 0x00) ; #1
    (0x7F 0x00) ; #2
    (0x1D 0x00) ; #3
    (0x1E 0x00) ; #4
    (0x1F 0x00) ; #5
    (0x20 0x00) ; #6
    (0x21 0x00) ; #7
    (0x22 0x00) ; #8
    (0x23 0x00) ; #9
    (0x24 0x00) ; #10
    (0x25 0x00) ; #11
    (0x26 0x00) ; #12
    (0x27 0x00) ; #13
    (0x28 0x00) ; #14
    (0x29 0x00) ; #15
    (0x2A 0x00) ; #16
    (0x2B 0x00) ; #17
    (0x2C 0x00) ; #18
    (0x2D 0x00) ; #19
    (0x2E 0x00) ; #20
    (0x2F 0x00) ; #21
    (0x30 0x00) ; #22
    (0x31 0x00) ; #23
    (0x32 0x00) ; #24
    (0x33 0x00) ; #25
    (0x34 0x00) ; #26
    (0x35 0x00) ; #27
    (0x36 0x00) ; #28
    (0x37 0x00) ; #29
    (0x38 0x00) ; #30
    (0x39 0x00) ; #31
    (0x3A 0x00) ; #32
    (0x3B 0x00) ; #33
    (0x3C 0x00) ; #34
    (0x3D 0x00) ; #35
    (0x3E 0x00) ; #36
    (0x3F 0x00) ; #37
    (0x40 0x00) ; #38
    (0x41 0x00) ; #39
    (0x42 0x00) ; #40
    (0x43 0x00) ; #41
    (0x44 0x00) ; #42
    (0x45 0x00) ; #43
    (0x46 0x00) ; #44
    (0x47 0x00) ; #45
    (0x48 0x00) ; #46
    (0x49 0x00) ; #47
    (0x4A 0x00) ; #48
    (0x4B 0x00) ; #49
    (0x4C 0x00) ; #50
    (0x4D 0x00) ; #51
    (0x4E 0x00) ; #52
    (0x4F 0x00) ; #53
    (0x50 0x00) ; #54
    (0x51 0x00) ; #55
    (0x52 0x00) ; #56
    (0x53 0x00) ; #57
    (0x54 0x00) ; #58
    (0x55 0x00) ; #59
    (0x56 0x00) ; #60
    (0x57 0x00) ; #61
    (0x58 0x00) ; #62
    (0x59 0x00) ; #63
    (0x5A 0x00) ; #64
    (0x5B 0x00) ; #65
    (0x5C 0x00) ; #66
    (0x5D 0x00) ; #67
    (0x5E 0x00) ; #68
    (0x5F 0x00) ; #69
    (0x60 0x00) ; #70
    (0x61 0x00) ; #71
    (0x62 0x00) ; #72
    (0x63 0x00) ; #73
    (0x64 0x00) ; #74
    (0x65 0x00) ; #75
    (0x66 0x00) ; #76
    (0x67 0x00) ; #77
    (0x68 0x00) ; #78
    (0x69 0x00) ; #79
    (0x6A 0x00) ; #80
    (0x6B 0x00) ; #81
    (0x6C 0x00) ; #82
    (0x6D 0x00) ; #83
    (0x6E 0x00) ; #84
    (0x6F 0x00) ; #85
    (0x70 0x00) ; #86
    (0x71 0x00) ; #87
    (0x72 0x00) ; #88
    (0x73 0x00) ; #89
    (0x74 0x00) ; #90
    (0x75 0x00) ; #91
    (0x76 0x00) ; #92
    (0x77 0x00) ; #93
    (0x78 0x00) ; #94
    (0x79 0x00) ; #95
    (0x7A 0x00) ; #96
    (0x7B 0x00) ; #97
    (0x7C 0x00) ; #98
    (0x7D 0x00) ; #99
    (0x7E 0x00) ; #100
    (0x1A 0x00) ; #101
    (0xC7 0x00) ; #102
    (0xFC 0x00) ; #103
    (0xE9 0x00) ; #104
    (0xE2 0x00) ; #105
    (0xE4 0x00) ; #106
    (0xE0 0x00) ; #107
    (0xE5 0x00) ; #108
    (0xE7 0x00) ; #109
    (0xEA 0x00) ; #110
    (0xEB 0x00) ; #111
    (0xE8 0x00) ; #112
    (0xEF 0x00) ; #113
    (0xEE 0x00) ; #114
    (0xEC 0x00) ; #115
    (0xC4 0x00) ; #116
    (0xC5 0x00) ; #117
    (0xC9 0x00) ; #118
    (0xE6 0x00) ; #119
    (0xC6 0x00) ; #120
    (0xF4 0x00) ; #121
    (0xF6 0x00) ; #122
    (0xF2 0x00) ; #123
    (0xFB 0x00) ; #124
    (0xF9 0x00) ; #125
    (0xFF 0x00) ; #126
    (0xD6 0x00) ; #127
    (0xDC 0x00) ; #128
    (0xA2 0x00) ; #129
    (0xA3 0x00) ; #130
    (0xA5 0x00) ; #131
    (0xA7 0x20) ; #132
    (0x92 0x01) ; #133
    (0xE1 0x00) ; #134
    (0xED 0x00) ; #135
    (0xF3 0x00) ; #136
    (0xFA 0x00) ; #137
    (0xF1 0x00) ; #138
    (0xD1 0x00) ; #139
    (0xAA 0x00) ; #140
    (0xBA 0x00) ; #141
    (0xBF 0x00) ; #142
    (0x10 0x23) ; #143
    (0xAC 0x00) ; #144
    (0xBD 0x00) ; #145
    (0xBC 0x00) ; #146
    (0xA1 0x00) ; #147
    (0xAB 0x00) ; #148
    (0xBB 0x00) ; #149
    (0x91 0x25) ; #150
    (0x92 0x25) ; #151
    (0x93 0x25) ; #152
    (0x02 0x25) ; #153
    (0x24 0x25) ; #154
    (0x61 0x25) ; #155
    (0x62 0x25) ; #156
    (0x56 0x25) ; #157
    (0x55 0x25) ; #158
    (0x63 0x25) ; #159
    (0x51 0x25) ; #160
    (0x57 0x25) ; #161
    (0x5D 0x25) ; #162
    (0x5C 0x25) ; #163
    (0x5B 0x25) ; #164
    (0x10 0x25) ; #165
    (0x14 0x25) ; #166
    (0x34 0x25) ; #167
    (0x2C 0x25) ; #168
    (0x1C 0x25) ; #169
    (0x00 0x25) ; #170
    (0x3C 0x25) ; #171
    (0x5E 0x25) ; #172
    (0x5F 0x25) ; #173
    (0x5A 0x25) ; #174
    (0x54 0x25) ; #175
    (0x69 0x25) ; #176
    (0x66 0x25) ; #177
    (0x60 0x25) ; #178
    (0x50 0x25) ; #179
    (0x6C 0x25) ; #180
    (0x67 0x25) ; #181
    (0x68 0x25) ; #182
    (0x64 0x25) ; #183
    (0x65 0x25) ; #184
    (0x59 0x25) ; #185
    (0x58 0x25) ; #186
    (0x52 0x25) ; #187
    (0x53 0x25) ; #188
    (0x6B 0x25) ; #189
    (0x6A 0x25) ; #190
    (0x18 0x25) ; #191
    (0x0C 0x25) ; #192
    (0x88 0x25) ; #193
    (0x84 0x25) ; #194
    (0x8C 0x25) ; #195
    (0x90 0x25) ; #196
    (0x80 0x25) ; #197
    (0xB1 0x03) ; #198
    (0xDF 0x00) ; #199
    (0x93 0x03) ; #200
    (0xC0 0x03) ; #201
    (0xA3 0x03) ; #202
    (0xC3 0x03) ; #203
    (0xBC 0x03) ; #204
    (0xC4 0x03) ; #205
    (0xA6 0x03) ; #206
    (0x98 0x03) ; #207
    (0xA9 0x03) ; #208
    (0xB4 0x03) ; #209
    (0x1E 0x22) ; #210
    (0xC6 0x03) ; #211
    (0xB5 0x03) ; #212
    (0x29 0x22) ; #213
    (0x61 0x22) ; #214
    (0xB1 0x00) ; #215
    (0x65 0x22) ; #216
    (0x64 0x22) ; #217
    (0x20 0x23) ; #218
    (0x21 0x23) ; #219
    (0xF7 0x00) ; #220
    (0x48 0x22) ; #221
    (0xB0 0x00) ; #222
    (0x19 0x22) ; #223
    (0xB7 0x00) ; #224
    (0x1A 0x22) ; #225
    (0x7F 0x20) ; #226
    (0xB2 0x00) ; #227
    (0xA0 0x25) ; #228
    (0xA0 0x00) ; #229
  )
 )

(method (attrs private ) <init>([object java/nio/charset/Charset] )void
  (limit registers 3)
  ; this: v1 ([object org/apache/harmony/niochar/charset/additional/IBM437$Decoder])
  ; parameter[0] : v2 ([object java/nio/charset/Charset])
  (const/high16 v0 16256)
  (line 37)
  (invoke-direct {v1 v2 v0 v0} java/nio/charset/CharsetDecoder/<init> [object java/nio/charset/Charset] float float )
  (line 39)
  (return-void )
 )

(method (attrs ) <init>([object java/nio/charset/Charset] [object org/apache/harmony/niochar/charset/additional/IBM437$Decoder] )void
  (limit registers 3)
  ; this: v0 ([object org/apache/harmony/niochar/charset/additional/IBM437$Decoder])
  ; parameter[0] : v1 ([object java/nio/charset/Charset])
  ; parameter[1] : v2 ([object org/apache/harmony/niochar/charset/additional/IBM437$Decoder])
  (line 36)
  (invoke-direct {v0 v1} org/apache/harmony/niochar/charset/additional/IBM437$Decoder/<init> [object java/nio/charset/Charset] )
  (return-void )
 )

(method (attrs protected ) decodeLoop([object java/nio/ByteBuffer] [object java/nio/CharBuffer] )[object java/nio/charset/CoderResult]
  (limit registers 15)
  ; this: v12 ([object org/apache/harmony/niochar/charset/additional/IBM437$Decoder])
  ; parameter[0] : v13 ([object java/nio/ByteBuffer])
  ; parameter[1] : v14 ([object java/nio/CharBuffer])
  (const/16 v11 26)
  (line 45)
  (invoke-virtual {v14} java/nio/CharBuffer/remaining )
  (move-result v5)
  (line 62)
  (invoke-virtual {v13} java/nio/ByteBuffer/hasArray )
  (move-result v10)
  (if-eqz v10 l37d2a)
  (invoke-virtual {v14} java/nio/CharBuffer/hasArray )
  (move-result v10)
  (if-eqz v10 l37d2a)
  (line 63)
  (invoke-virtual {v13} java/nio/ByteBuffer/remaining )
  (move-result v9)
  (label l37c68)
  (line 64)
  (if-lt v5 v9 l37cba)
  (label l37c6c)
  (line 65)
  (invoke-virtual {v13} java/nio/ByteBuffer/array )
  (move-result-object v0)
  (label l37c74)
  (line 66)
  (invoke-virtual {v14} java/nio/CharBuffer/array )
  (move-result-object v2)
  (label l37c7c)
  (line 67)
  (invoke-virtual {v13} java/nio/ByteBuffer/position )
  (move-result v1)
  (label l37c84)
  (line 68)
  (invoke-virtual {v14} java/nio/CharBuffer/position )
  (move-result v3)
  (label l37c8c)
  (line 70)
  (move v6 v1)
  (label l37c8e)
  (move v4 v3)
  (label l37c90)
  (add-int v10 v1 v9)
  (if-lt v6 v10 l37cbe)
  (line 79)
  (invoke-virtual {v13 v6} java/nio/ByteBuffer/position int )
  (line 80)
  (invoke-virtual {v14 v4} java/nio/CharBuffer/position int )
  (line 81)
  (if-ne v9 v5 l37d36)
  (invoke-virtual {v13} java/nio/ByteBuffer/hasRemaining )
  (move-result v10)
  (if-eqz v10 l37d36)
  (sget-object v10 java/nio/charset/CoderResult.OVERFLOW [object java/nio/charset/CoderResult])
  (label l37cb8)
  (line 98)
  (return-object v10)
  (label l37cba)
  (move v9 v5)
  (line 64)
  (goto l37c6c)
  (label l37cbe)
  (line 71)
  (aget-byte v10 v0 v6)
  (and-int/lit16 v10 v10 255)
  (int-to-char v7 v10)
  (label l37cc8)
  (line 72)
  (if-lt v7 v11 l37ce8)
  (line 73)
  (add-int/lit8 v8 v7 230)
  (label l37cd0)
  (line 74)
  (add-int/lit8 v3 v4 1)
  (label l37cd4)
  (sget-object v10 org/apache/harmony/niochar/charset/additional/IBM437$Decoder.arr [array char])
  (aget-char v10 v10 v8)
  (aput-char v10 v2 v4)
  (label l37ce0)
  (line 70)
  (add-int/lit8 v6 v6 1)
  (move v4 v3)
  (label l37ce6)
  (goto l37c90)
  (label l37ce8)
  (line 76)
  (add-int/lit8 v3 v4 1)
  (label l37cec)
  (and-int/lit16 v10 v7 255)
  (int-to-char v10 v10)
  (aput-char v10 v2 v4)
  (goto l37ce0)
  (label l37cf8)
  (line 84)
  (if-nez v5 l37d02)
  (sget-object v10 java/nio/charset/CoderResult.OVERFLOW [object java/nio/charset/CoderResult])
  (goto l37cb8)
  (label l37d02)
  (line 85)
  (invoke-virtual {v13} java/nio/ByteBuffer/get )
  (move-result v10)
  (and-int/lit16 v10 v10 255)
  (int-to-char v7 v10)
  (label l37d10)
  (line 86)
  (if-lt v7 v11 l37d3c)
  (line 87)
  (add-int/lit8 v8 v7 230)
  (label l37d18)
  (line 88)
  (sget-object v10 org/apache/harmony/niochar/charset/additional/IBM437$Decoder.arr [array char])
  (aget-char v10 v10 v8)
  (invoke-virtual {v14 v10} java/nio/CharBuffer/put char )
  (label l37d26)
  (line 92)
  (add-int/lit8 v5 v5 255)
  (label l37d2a)
  (line 83)
  (invoke-virtual {v13} java/nio/ByteBuffer/hasRemaining )
  (move-result v10)
  (if-nez v10 l37cf8)
  (label l37d36)
  (line 98)
  (sget-object v10 java/nio/charset/CoderResult.UNDERFLOW [object java/nio/charset/CoderResult])
  (goto l37cb8)
  (label l37d3c)
  (line 90)
  (and-int/lit16 v10 v7 255)
  (int-to-char v10 v10)
  (invoke-virtual {v14 v10} java/nio/CharBuffer/put char )
  (goto l37d26)
)

)
