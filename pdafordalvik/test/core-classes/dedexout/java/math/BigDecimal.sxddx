(class (attrs public synchronized ) java/math/BigDecimal
 (super java/lang/Number)
 (source "BigDecimal.java")
 (implements java/lang/Comparable)
 (implements java/io/Serializable)

 (field (attrs private static final ) BI_SCALED_BY_ZERO [array [object java/math/BigDecimal]] null )
 (field (attrs private static final ) BI_SCALED_BY_ZERO_LENGTH int 11); 0xb )
 (field (attrs private static final ) CH_ZEROS [array char] null )
 (field (attrs private static final ) FIVE_POW [array [object java/math/BigInteger]] null )
 (field (attrs private static final ) LOG10_2 double 0.3010299956639812 )
 (field (attrs private static final ) LONG_FIVE_POW [array long] null )
 (field (attrs private static final ) LONG_FIVE_POW_BIT_LENGTH [array int] null )
 (field (attrs private static final ) LONG_TEN_POW [array long] null )
 (field (attrs private static final ) LONG_TEN_POW_BIT_LENGTH [array int] null )
 (field (attrs public static final ) ONE [object java/math/BigDecimal] null )
 (field (attrs public static final ) ROUND_CEILING int 2); 0x2 )
 (field (attrs public static final ) ROUND_DOWN int 1); 0x1 )
 (field (attrs public static final ) ROUND_FLOOR int 3); 0x3 )
 (field (attrs public static final ) ROUND_HALF_DOWN int 5); 0x5 )
 (field (attrs public static final ) ROUND_HALF_EVEN int 6); 0x6 )
 (field (attrs public static final ) ROUND_HALF_UP int 4); 0x4 )
 (field (attrs public static final ) ROUND_UNNECESSARY int 7); 0x7 )
 (field (attrs public static final ) ROUND_UP int 0); 0x0 )
 (field (attrs public static final ) TEN [object java/math/BigDecimal] null )
 (field (attrs private static final ) TEN_POW [array [object java/math/BigInteger]] null )
 (field (attrs public static final ) ZERO [object java/math/BigDecimal] null )
 (field (attrs private static final ) ZERO_SCALED_BY [array [object java/math/BigDecimal]] null )
 (field (attrs private static final ) serialVersionUID long -37274273); 0xfdc73d5f )
 (field (attrs private transient ) bitLength int )
 (field (attrs private transient ) hashCode int )
 (field (attrs private ) intVal [object java/math/BigInteger] )
 (field (attrs private transient ) precision int )
 (field (attrs private ) scale int )
 (field (attrs private transient ) smallValue long )
 (field (attrs private transient ) toStringImage [object java/lang/String] )

(method (attrs static ) <clinit>()void
  (limit registers 7)
  (const/16 v6 48)
  (const/16 v5 11)
  (const/4 v4 0)
  (line 46)
  (new-instance v2 java/math/BigDecimal)
  (invoke-direct {v2 v4 v4} java/math/BigDecimal/<init> int int )
  (sput-object v2 java/math/BigDecimal.ZERO [object java/math/BigDecimal])
  (line 51)
  (new-instance v2 java/math/BigDecimal)
  (const/4 v3 1)
  (invoke-direct {v2 v3 v4} java/math/BigDecimal/<init> int int )
  (sput-object v2 java/math/BigDecimal.ONE [object java/math/BigDecimal])
  (line 56)
  (new-instance v2 java/math/BigDecimal)
  (const/16 v3 10)
  (invoke-direct {v2 v3 v4} java/math/BigDecimal/<init> int int )
  (sput-object v2 java/math/BigDecimal.TEN [object java/math/BigDecimal])
  (line 152)
  (const/16 v2 19)
  (new-array v2 v2 [array long])
  (fill-array-data v2 lb0418)
  (sput-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (line 174)
  (const/16 v2 28)
  (new-array v2 v2 [array long])
  (fill-array-data v2 lb04b8)
  (sput-object v2 java/math/BigDecimal.LONG_FIVE_POW [array long])
  (line 204)
  (sget-object v2 java/math/BigDecimal.LONG_FIVE_POW [array long])
  (array-length v2 v2)
  (new-array v2 v2 [array int])
  (sput-object v2 java/math/BigDecimal.LONG_FIVE_POW_BIT_LENGTH [array int])
  (line 205)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v2 v2)
  (new-array v2 v2 [array int])
  (sput-object v2 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (line 213)
  (new-array v2 v5 [array [object java/math/BigDecimal]])
  (sput-object v2 java/math/BigDecimal.BI_SCALED_BY_ZERO [array [object java/math/BigDecimal]])
  (line 219)
  (new-array v2 v5 [array [object java/math/BigDecimal]])
  (sput-object v2 java/math/BigDecimal.ZERO_SCALED_BY [array [object java/math/BigDecimal]])
  (line 222)
  (const/16 v2 100)
  (new-array v2 v2 [array char])
  (sput-object v2 java/math/BigDecimal.CH_ZEROS [array char])
  (line 226)
  (const/4 v0 0)
  (label lb035c)
  (line 228)
  (sget-object v2 java/math/BigDecimal.ZERO_SCALED_BY [array [object java/math/BigDecimal]])
  (array-length v2 v2)
  (if-ge v0 v2 lb0398)
  (line 229)
  (sget-object v2 java/math/BigDecimal.BI_SCALED_BY_ZERO [array [object java/math/BigDecimal]])
  (new-instance v3 java/math/BigDecimal)
  (invoke-direct {v3 v0 v4} java/math/BigDecimal/<init> int int )
  (aput-object v3 v2 v0)
  (line 230)
  (sget-object v2 java/math/BigDecimal.ZERO_SCALED_BY [array [object java/math/BigDecimal]])
  (new-instance v3 java/math/BigDecimal)
  (invoke-direct {v3 v4 v0} java/math/BigDecimal/<init> int int )
  (aput-object v3 v2 v0)
  (line 231)
  (sget-object v2 java/math/BigDecimal.CH_ZEROS [array char])
  (aput-char v6 v2 v0)
  (line 228)
  (add-int/lit8 v0 v0 1)
  (goto lb035c)
  (label lb0398)
  (line 234)
  (sget-object v2 java/math/BigDecimal.CH_ZEROS [array char])
  (array-length v2 v2)
  (if-ge v0 v2 lb03b0)
  (line 235)
  (sget-object v2 java/math/BigDecimal.CH_ZEROS [array char])
  (aput-char v6 v2 v0)
  (line 234)
  (add-int/lit8 v0 v0 1)
  (goto lb0398)
  (label lb03b0)
  (line 237)
  (const/4 v1 0)
  (label lb03b2)
  (sget-object v2 java/math/BigDecimal.LONG_FIVE_POW_BIT_LENGTH [array int])
  (array-length v2 v2)
  (if-ge v1 v2 lb03da)
  (line 238)
  (sget-object v2 java/math/BigDecimal.LONG_FIVE_POW_BIT_LENGTH [array int])
  (sget-object v3 java/math/BigDecimal.LONG_FIVE_POW [array long])
  (aget-wide v3 v3 v1)
  (invoke-static {v3 v4} java/math/BigDecimal/bitLength long )
  (move-result v3)
  (aput v3 v2 v1)
  (line 237)
  (add-int/lit8 v1 v1 1)
  (goto lb03b2)
  (label lb03da)
  (line 240)
  (const/4 v1 0)
  (label lb03dc)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (array-length v2 v2)
  (if-ge v1 v2 lb0404)
  (line 241)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (sget-object v3 java/math/BigDecimal.LONG_TEN_POW [array long])
  (aget-wide v3 v3 v1)
  (invoke-static {v3 v4} java/math/BigDecimal/bitLength long )
  (move-result v3)
  (aput v3 v2 v1)
  (line 240)
  (add-int/lit8 v1 v1 1)
  (goto lb03dc)
  (label lb0404)
  (line 245)
  (sget-object v2 java/math/Multiplication.bigTenPows [array [object java/math/BigInteger]])
  (sput-object v2 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (line 246)
  (sget-object v2 java/math/Multiplication.bigFivePows [array [object java/math/BigInteger]])
  (sput-object v2 java/math/BigDecimal.FIVE_POW [array [object java/math/BigInteger]])
  (line 247)
  (return-void )
  (line 152)
  (label lb0416)
  (data-array
    0x00 0x00
  )
  (label lb0418)
  (data-array
    (0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00) ; #0
    (0x0A 0x00 0x00 0x00 0x00 0x00 0x00 0x00) ; #1
    (0x64 0x00 0x00 0x00 0x00 0x00 0x00 0x00) ; #2
    (0xE8 0x03 0x00 0x00 0x00 0x00 0x00 0x00) ; #3
    (0x10 0x27 0x00 0x00 0x00 0x00 0x00 0x00) ; #4
    (0xA0 0x86 0x01 0x00 0x00 0x00 0x00 0x00) ; #5
    (0x40 0x42 0x0F 0x00 0x00 0x00 0x00 0x00) ; #6
    (0x80 0x96 0x98 0x00 0x00 0x00 0x00 0x00) ; #7
    (0x00 0xE1 0xF5 0x05 0x00 0x00 0x00 0x00) ; #8
    (0x00 0xCA 0x9A 0x3B 0x00 0x00 0x00 0x00) ; #9
    (0x00 0xE4 0x0B 0x54 0x02 0x00 0x00 0x00) ; #10
    (0x00 0xE8 0x76 0x48 0x17 0x00 0x00 0x00) ; #11
    (0x00 0x10 0xA5 0xD4 0xE8 0x00 0x00 0x00) ; #12
    (0x00 0xA0 0x72 0x4E 0x18 0x09 0x00 0x00) ; #13
    (0x00 0x40 0x7A 0x10 0xF3 0x5A 0x00 0x00) ; #14
    (0x00 0x80 0xC6 0xA4 0x7E 0x8D 0x03 0x00) ; #15
    (0x00 0x00 0xC1 0x6F 0xF2 0x86 0x23 0x00) ; #16
    (0x00 0x00 0x8A 0x5D 0x78 0x45 0x63 0x01) ; #17
    (0x00 0x00 0x64 0xA7 0xB3 0xB6 0xE0 0x0D) ; #18
  )
  (line 174)
  (label lb04b8)
  (data-array
    (0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00) ; #0
    (0x05 0x00 0x00 0x00 0x00 0x00 0x00 0x00) ; #1
    (0x19 0x00 0x00 0x00 0x00 0x00 0x00 0x00) ; #2
    (0x7D 0x00 0x00 0x00 0x00 0x00 0x00 0x00) ; #3
    (0x71 0x02 0x00 0x00 0x00 0x00 0x00 0x00) ; #4
    (0x35 0x0C 0x00 0x00 0x00 0x00 0x00 0x00) ; #5
    (0x09 0x3D 0x00 0x00 0x00 0x00 0x00 0x00) ; #6
    (0x2D 0x31 0x01 0x00 0x00 0x00 0x00 0x00) ; #7
    (0xE1 0xF5 0x05 0x00 0x00 0x00 0x00 0x00) ; #8
    (0x65 0xCD 0x1D 0x00 0x00 0x00 0x00 0x00) ; #9
    (0xF9 0x02 0x95 0x00 0x00 0x00 0x00 0x00) ; #10
    (0xDD 0x0E 0xE9 0x02 0x00 0x00 0x00 0x00) ; #11
    (0x51 0x4A 0x8D 0x0E 0x00 0x00 0x00 0x00) ; #12
    (0x95 0x73 0xC2 0x48 0x00 0x00 0x00 0x00) ; #13
    (0xE9 0x41 0xCC 0x6B 0x01 0x00 0x00 0x00) ; #14
    (0x8D 0x49 0xFD 0x1A 0x07 0x00 0x00 0x00) ; #15
    (0xC1 0x6F 0xF2 0x86 0x23 0x00 0x00 0x00) ; #16
    (0xC5 0x2E 0xBC 0xA2 0xB1 0x00 0x00 0x00) ; #17
    (0xD9 0xE9 0xAC 0x2D 0x78 0x03 0x00 0x00) ; #18
    (0x3D 0x91 0x60 0xE4 0x58 0x11 0x00 0x00) ; #19
    (0x31 0xD6 0xE2 0x75 0xBC 0x56 0x00 0x00) ; #20
    (0xF5 0x2E 0x6E 0x4D 0xAE 0xB1 0x01 0x00) ; #21
    (0xC9 0xEA 0x26 0x83 0x67 0x78 0x08 0x00) ; #22
    (0xED 0x95 0xC2 0x8F 0x05 0x5A 0x2A 0x00) ; #23
    (0xA1 0xED 0xCC 0xCE 0x1B 0xC2 0xD3 0x00) ; #24
    (0x25 0xA4 0x00 0x0A 0x8B 0xCA 0x22 0x04) ; #25
    (0xB9 0x34 0x03 0x32 0xB7 0xF4 0xAD 0x14) ; #26
    (0x9D 0x07 0x10 0xFA 0x93 0xC7 0x65 0x67) ; #27
  )
 )

(method (attrs public ) <init>(double )void
  (limit registers 15)
  ; this: v12 ([object java/math/BigDecimal])
  ; parameter[0] : v13 (double)
  (line 524)
  (invoke-direct {v12} java/lang/Number/<init> )
  (line 131)
  (const/4 v7 0)
  (iput-object-quick v7 v12 java/math/BigDecimal.toStringImage [object java/lang/String])
  (line 134)
  (const/4 v7 0)
  (iput-quick v7 v12 java/math/BigDecimal.bitLength int)
  (line 273)
  (const/4 v7 0)
  (iput-quick v7 v12 java/math/BigDecimal.scale int)
  (line 525)
  (invoke-static {v13 v14} java/lang/Double/isInfinite double )
  (move-result v7)
  (if-nez v7 lb05e0)
  (invoke-static {v13 v14} java/lang/Double/isNaN double )
  (move-result v7)
  (if-eqz v7 lb05f8)
  (label lb05e0)
  (line 527)
  (new-instance v7 java/lang/NumberFormatException)
  (const-string v8 "math.03")
  (invoke-static {v8} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v8)
  (invoke-direct {v7 v8} java/lang/NumberFormatException/<init> [object java/lang/String] )
  (throw v7)
  (label lb05f8)
  (line 529)
  (invoke-static {v13 v14} java/lang/Double/doubleToLongBits double )
  (move-result-wide v1)
  (line 533)
  (const/16 v7 1075)
  (const/16 v8 52)
  (shr-long v8 v1 v8)
  (const-wide/16 v10 2047)
  (and-long/2addr v8 v10)
  (long-to-int v8 v8)
  (sub-int/2addr v7 v8)
  (iput-quick v7 v12 java/math/BigDecimal.smallValue long)
  (line 535)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (const/16 v8 1075)
  (if-ne v7 v8 lb06ca)
  (const-wide v7 4503599627370495) ; 0xfffffffffffff)
  (and-long/2addr v7 v1)
  (const/4 v9 1)
  (shl-long/2addr v7 v9)
  (move-wide v3 v7)
  (label lb0638)
  (line 537)
  (const-wide/16 v7 0)
  (cmp-long v7 v3 v7)
  (if-nez v7 lb0650)
  (line 538)
  (const/4 v7 0)
  (iput-quick v7 v12 java/math/BigDecimal.smallValue long)
  (line 539)
  (const/4 v7 1)
  (iput-quick v7 v12 java/math/BigDecimal.scale int)
  (label lb0650)
  (line 542)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (if-lez v7 lb0678)
  (line 543)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (invoke-static {v3 v4} java/lang/Long/numberOfTrailingZeros long )
  (move-result v8)
  (execute-inline {v7 v8} Ljava/lang/Math/min int int )
  (move-result v6)
  (label lb066c)
  (line 544)
  (ushr-long/2addr v3 v6)
  (line 545)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (sub-int/2addr v7 v6)
  (iput-quick v7 v12 java/math/BigDecimal.smallValue long)
  (label lb0678)
  (line 548)
  (const/16 v7 63)
  (shr-long v7 v1 v7)
  (const-wide/16 v9 0)
  (cmp-long v7 v7 v9)
  (if-eqz v7 lb068e)
  (line 549)
  (neg-long v3 v3)
  (label lb068e)
  (line 551)
  (invoke-static {v3 v4} java/math/BigDecimal/bitLength long )
  (move-result v5)
  (label lb0696)
  (line 552)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (if-gez v7 lb0716)
  (line 553)
  (if-nez v5 lb06e0)
  (const/4 v7 0)
  (label lb06a4)
  (iput-quick v7 v12 java/math/BigDecimal.null)
  (line 554)
  (iget-quick v7 v12 java/math/BigDecimal.null)
  (const/16 v8 64)
  (if-ge v7 v8 lb06ea)
  (line 555)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (neg-int v7 v7)
  (shl-long v7 v3 v7)
  (iput-wide-quick v7 v12 java/math/BigDecimal.hashCode int)
  (label lb06c2)
  (line 564)
  (const/4 v7 0)
  (iput-quick v7 v12 java/math/BigDecimal.smallValue long)
  (label lb06c8)
  (line 578)
  (return-void )
  (label lb06ca)
  (line 535)
  (const-wide v7 4503599627370495) ; 0xfffffffffffff)
  (and-long/2addr v7 v1)
  (const-wide/high16 v9 16)
  (or-long/2addr v7 v9)
  (move-wide v3 v7)
  (goto lb0638)
  (label lb06e0)
  (line 553)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (sub-int v7 v5 v7)
  (goto lb06a4)
  (label lb06ea)
  (line 558)
  (new-instance v0 java/math/BigInt)
  (invoke-direct {v0} java/math/BigInt/<init> )
  (label lb06f4)
  (line 559)
  (invoke-virtual-quick {v0 v3 v4} java/math/BigInt/putLongInt long )
  (line 560)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (neg-int v7 v7)
  (invoke-virtual-quick {v0 v7} java/math/BigInt/shift int )
  (line 561)
  (new-instance v7 java/math/BigInteger)
  (invoke-direct {v7 v0} java/math/BigInteger/<init> [object java/math/BigInt] )
  (iput-object-quick v7 v12 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (goto lb06c2)
  (label lb0716)
  (line 565)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (if-lez v7 lb0782)
  (line 567)
  (iget-quick v7 v12 java/math/BigDecimal.smallValue long)
  (sget-object v8 java/math/BigDecimal.LONG_FIVE_POW [array long])
  (array-length v8 v8)
  (if-ge v7 v8 lb0766)
  (sget-object v7 java/math/BigDecimal.LONG_FIVE_POW_BIT_LENGTH [array int])
  (iget-quick v8 v12 java/math/BigDecimal.smallValue long)
  (aget v7 v7 v8)
  (add-int/2addr v7 v5)
  (const/16 v8 64)
  (if-ge v7 v8 lb0766)
  (line 569)
  (sget-object v7 java/math/BigDecimal.LONG_FIVE_POW [array long])
  (iget-quick v8 v12 java/math/BigDecimal.smallValue long)
  (aget-wide v7 v7 v8)
  (mul-long/2addr v7 v3)
  (iput-wide-quick v7 v12 java/math/BigDecimal.hashCode int)
  (line 570)
  (iget-wide-quick v7 v12 java/math/BigDecimal.hashCode int)
  (invoke-static {v7 v8} java/math/BigDecimal/bitLength long )
  (move-result v7)
  (iput-quick v7 v12 java/math/BigDecimal.null)
  (goto lb06c8)
  (label lb0766)
  (line 572)
  (invoke-static {v3 v4} java/math/BigInteger/valueOf long )
  (move-result-object v7)
  (iget-quick v8 v12 java/math/BigDecimal.smallValue long)
  (invoke-static {v7 v8} java/math/Multiplication/multiplyByFivePow [object java/math/BigInteger] int )
  (move-result-object v7)
  (invoke-direct {v12 v7} java/math/BigDecimal/setUnscaledValue [object java/math/BigInteger] )
  (goto lb06c8)
  (label lb0782)
  (line 575)
  (iput-wide-quick v3 v12 java/math/BigDecimal.hashCode int)
  (line 576)
  (iput-quick v5 v12 java/math/BigDecimal.null)
  (goto lb06c8)
 )

(method (attrs public ) <init>(double [object java/math/MathContext] )void
  (limit registers 4)
  ; this: v0 ([object java/math/BigDecimal])
  ; parameter[0] : v1 (double)
  ; parameter[1] : v3 ([object java/math/MathContext])
  (line 602)
  (invoke-direct {v0 v1 v2} java/math/BigDecimal/<init> double )
  (line 603)
  (invoke-direct {v0 v3} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 604)
  (return-void )
 )

(method (attrs public ) <init>(int )void
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 (int)
  (line 691)
  (const/4 v0 0)
  (invoke-direct {v1 v2 v0} java/math/BigDecimal/<init> int int )
  (line 692)
  (return-void )
 )

(method (attrs private ) <init>(int int )void
  (limit registers 5)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 (int)
  ; parameter[1] : v4 (int)
  (const/4 v1 0)
  (line 281)
  (invoke-direct {v2} java/lang/Number/<init> )
  (line 131)
  (const/4 v0 0)
  (iput-object-quick v0 v2 java/math/BigDecimal.toStringImage [object java/lang/String])
  (line 134)
  (iput-quick v1 v2 java/math/BigDecimal.bitLength int)
  (line 273)
  (iput-quick v1 v2 java/math/BigDecimal.scale int)
  (line 282)
  (int-to-long v0 v3)
  (iput-wide-quick v0 v2 java/math/BigDecimal.hashCode int)
  (line 283)
  (iput-quick v4 v2 java/math/BigDecimal.smallValue long)
  (line 284)
  (invoke-static {v3} java/math/BigDecimal/bitLength int )
  (move-result v0)
  (iput-quick v0 v2 java/math/BigDecimal.null)
  (line 285)
  (return-void )
 )

(method (attrs public ) <init>(int [object java/math/MathContext] )void
  (limit registers 4)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 (int)
  ; parameter[1] : v3 ([object java/math/MathContext])
  (line 709)
  (const/4 v0 0)
  (invoke-direct {v1 v2 v0} java/math/BigDecimal/<init> int int )
  (line 710)
  (invoke-direct {v1 v3} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 711)
  (return-void )
 )

(method (attrs public ) <init>(long )void
  (limit registers 4)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 (long)
  (line 721)
  (const/4 v0 0)
  (invoke-direct {v1 v2 v3 v0} java/math/BigDecimal/<init> long int )
  (line 722)
  (return-void )
 )

(method (attrs private ) <init>(long int )void
  (limit registers 6)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 (long)
  ; parameter[1] : v5 (int)
  (const/4 v1 0)
  (line 275)
  (invoke-direct {v2} java/lang/Number/<init> )
  (line 131)
  (const/4 v0 0)
  (iput-object-quick v0 v2 java/math/BigDecimal.toStringImage [object java/lang/String])
  (line 134)
  (iput-quick v1 v2 java/math/BigDecimal.bitLength int)
  (line 273)
  (iput-quick v1 v2 java/math/BigDecimal.scale int)
  (line 276)
  (iput-wide-quick v3 v2 java/math/BigDecimal.hashCode int)
  (line 277)
  (iput-quick v5 v2 java/math/BigDecimal.smallValue long)
  (line 278)
  (invoke-static {v3 v4} java/math/BigDecimal/bitLength long )
  (move-result v0)
  (iput-quick v0 v2 java/math/BigDecimal.null)
  (line 279)
  (return-void )
 )

(method (attrs public ) <init>(long [object java/math/MathContext] )void
  (limit registers 4)
  ; this: v0 ([object java/math/BigDecimal])
  ; parameter[0] : v1 (long)
  ; parameter[1] : v3 ([object java/math/MathContext])
  (line 739)
  (invoke-direct {v0 v1 v2} java/math/BigDecimal/<init> long )
  (line 740)
  (invoke-direct {v0 v3} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 741)
  (return-void )
 )

(method (attrs public ) <init>([object java/lang/String] )void
  (limit registers 5)
  ; this: v3 ([object java/math/BigDecimal])
  ; parameter[0] : v4 ([object java/lang/String])
  (line 483)
  (invoke-virtual-quick {v4} java/lang/String/toCharArray )
  (move-result-object v0)
  (const/4 v1 0)
  (execute-inline {v4} Ljava/lang/String/length )
  (move-result v2)
  (invoke-direct {v3 v0 v1 v2} java/math/BigDecimal/<init> [array char] int int )
  (line 484)
  (return-void )
 )

(method (attrs public ) <init>([object java/lang/String] [object java/math/MathContext] )void
  (limit registers 6)
  ; this: v3 ([object java/math/BigDecimal])
  ; parameter[0] : v4 ([object java/lang/String])
  ; parameter[1] : v5 ([object java/math/MathContext])
  (line 505)
  (invoke-virtual-quick {v4} java/lang/String/toCharArray )
  (move-result-object v0)
  (const/4 v1 0)
  (execute-inline {v4} Ljava/lang/String/length )
  (move-result v2)
  (invoke-direct {v3 v0 v1 v2} java/math/BigDecimal/<init> [array char] int int )
  (line 506)
  (invoke-direct {v3 v5} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 507)
  (return-void )
 )

(method (attrs public ) <init>([object java/math/BigInteger] )void
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/BigInteger])
  (line 615)
  (const/4 v0 0)
  (invoke-direct {v1 v2 v0} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (line 616)
  (return-void )
 )

(method (attrs public ) <init>([object java/math/BigInteger] int )void
  (limit registers 5)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([object java/math/BigInteger])
  ; parameter[1] : v4 (int)
  (const/4 v1 0)
  (line 650)
  (invoke-direct {v2} java/lang/Number/<init> )
  (line 131)
  (const/4 v0 0)
  (iput-object-quick v0 v2 java/math/BigDecimal.toStringImage [object java/lang/String])
  (line 134)
  (iput-quick v1 v2 java/math/BigDecimal.bitLength int)
  (line 273)
  (iput-quick v1 v2 java/math/BigDecimal.scale int)
  (line 651)
  (if-nez v3 lb094e)
  (line 652)
  (new-instance v0 java/lang/NullPointerException)
  (invoke-direct {v0} java/lang/NullPointerException/<init> )
  (throw v0)
  (label lb094e)
  (line 654)
  (iput-quick v4 v2 java/math/BigDecimal.smallValue long)
  (line 655)
  (invoke-direct {v2 v3} java/math/BigDecimal/setUnscaledValue [object java/math/BigInteger] )
  (line 656)
  (return-void )
 )

(method (attrs public ) <init>([object java/math/BigInteger] int [object java/math/MathContext] )void
  (limit registers 4)
  ; this: v0 ([object java/math/BigDecimal])
  ; parameter[0] : v1 ([object java/math/BigInteger])
  ; parameter[1] : v2 (int)
  ; parameter[2] : v3 ([object java/math/MathContext])
  (line 679)
  (invoke-direct {v0 v1 v2} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (line 680)
  (invoke-direct {v0 v3} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 681)
  (return-void )
 )

(method (attrs public ) <init>([object java/math/BigInteger] [object java/math/MathContext] )void
  (limit registers 3)
  ; this: v0 ([object java/math/BigDecimal])
  ; parameter[0] : v1 ([object java/math/BigInteger])
  ; parameter[1] : v2 ([object java/math/MathContext])
  (line 633)
  (invoke-direct {v0 v1} java/math/BigDecimal/<init> [object java/math/BigInteger] )
  (line 634)
  (invoke-direct {v0 v2} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 635)
  (return-void )
 )

(method (attrs public ) <init>([array char] )void
  (limit registers 4)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([array char])
  (line 443)
  (const/4 v0 0)
  (array-length v1 v3)
  (invoke-direct {v2 v3 v0 v1} java/math/BigDecimal/<init> [array char] int int )
  (line 444)
  (return-void )
 )

(method (attrs public ) <init>([array char] int int )void
  (limit registers 21)
  ; this: v17 ([object java/math/BigDecimal])
  ; parameter[0] : v18 ([array char])
  ; parameter[1] : v19 (int)
  ; parameter[2] : v20 (int)
  (line 307)
  (invoke-direct/range {v17} java/lang/Number/<init> )
  (line 131)
  (const/4 v13 0)
  (move-object v0 v13)
  (move-object/from16 v1 v17)
  (iput-object-quick v0 v1 java/math/BigDecimal.toStringImage [object java/lang/String])
  (line 134)
  (const/4 v13 0)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.bitLength int)
  (line 273)
  (const/4 v13 0)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.scale int)
  (line 308)
  (move/from16 v4 v19)
  (line 309)
  (const/4 v13 1)
  (sub-int v13 v20 v13)
  (add-int v7 v19 v13)
  (line 310)
  (const/4 v10 0)
  (line 314)
  (if-nez v18 lb0a12)
  (line 315)
  (new-instance v13 java/lang/NullPointerException)
  (invoke-direct {v13} java/lang/NullPointerException/<init> )
  (throw v13)
  (label lb0a12)
  (line 317)
  (move-object/from16 v0 v18)
  (array-length v0 v0)
  (move v13 v0)
  (if-ge v7 v13 lb0a2a)
  (if-ltz v19 lb0a2a)
  (if-lez v20 lb0a2a)
  (if-gez v7 lb0a36)
  (label lb0a2a)
  (line 318)
  (new-instance v13 java/lang/NumberFormatException)
  (invoke-direct {v13} java/lang/NumberFormatException/<init> )
  (throw v13)
  (label lb0a36)
  (line 320)
  (new-instance v11 java/lang/StringBuilder)
  (move-object v0 v11)
  (move/from16 v1 v20)
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> int )
  (line 321)
  (const/4 v5 0)
  (line 323)
  (move/from16 v0 v19)
  (move v1 v7)
  (if-gt v0 v1 lb0a66)
  (aget-char v13 v18 v19)
  (const/16 v14 43)
  (if-ne v13 v14 lb0a66)
  (line 324)
  (add-int/lit8 v19 v19 1)
  (line 325)
  (add-int/lit8 v4 v4 1)
  (label lb0a66)
  (line 327)
  (const/4 v6 0)
  (line 328)
  (const/4 v12 0)
  (label lb0a6a)
  (line 331)
  (move/from16 v0 v19)
  (move v1 v7)
  (if-gt v0 v1 lb0ab6)
  (aget-char v13 v18 v19)
  (const/16 v14 46)
  (if-eq v13 v14 lb0ab6)
  (aget-char v13 v18 v19)
  (const/16 v14 101)
  (if-eq v13 v14 lb0ab6)
  (aget-char v13 v18 v19)
  (const/16 v14 69)
  (if-eq v13 v14 lb0ab6)
  (line 332)
  (if-nez v12 lb0aac)
  (line 333)
  (aget-char v13 v18 v19)
  (const/16 v14 48)
  (if-ne v13 v14 lb0ab2)
  (line 334)
  (add-int/lit8 v6 v6 1)
  (label lb0aac)
  (line 331)
  (add-int/lit8 v19 v19 1)
  (goto lb0a6a)
  (label lb0ab2)
  (line 336)
  (const/4 v12 1)
  (goto lb0aac)
  (label lb0ab6)
  (line 341)
  (sub-int v13 v19 v4)
  (move-object v0 v11)
  (move-object/from16 v1 v18)
  (move v2 v4)
  (move v3 v13)
  (invoke-virtual-quick {v0 v1 v2 v3} java/lang/StringBuilder/append [array char] int int )
  (line 342)
  (sub-int v13 v19 v4)
  (add-int/2addr v5 v13)
  (line 344)
  (move/from16 v0 v19)
  (move v1 v7)
  (if-gt v0 v1 lb0c28)
  (aget-char v13 v18 v19)
  (const/16 v14 46)
  (if-ne v13 v14 lb0c28)
  (line 345)
  (add-int/lit8 v19 v19 1)
  (line 347)
  (move/from16 v4 v19)
  (label lb0aee)
  (line 349)
  (move/from16 v0 v19)
  (move v1 v7)
  (if-gt v0 v1 lb0b2e)
  (aget-char v13 v18 v19)
  (const/16 v14 101)
  (if-eq v13 v14 lb0b2e)
  (aget-char v13 v18 v19)
  (const/16 v14 69)
  (if-eq v13 v14 lb0b2e)
  (line 350)
  (if-nez v12 lb0b24)
  (line 351)
  (aget-char v13 v18 v19)
  (const/16 v14 48)
  (if-ne v13 v14 lb0b2a)
  (line 352)
  (add-int/lit8 v6 v6 1)
  (label lb0b24)
  (line 349)
  (add-int/lit8 v19 v19 1)
  (goto lb0aee)
  (label lb0b2a)
  (line 354)
  (const/4 v12 1)
  (goto lb0b24)
  (label lb0b2e)
  (line 358)
  (sub-int v13 v19 v4)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.smallValue long)
  (line 359)
  (move-object/from16 v0 v17)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v13 v0)
  (add-int/2addr v5 v13)
  (line 360)
  (move-object/from16 v0 v17)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v13 v0)
  (move-object v0 v11)
  (move-object/from16 v1 v18)
  (move v2 v4)
  (move v3 v13)
  (invoke-virtual-quick {v0 v1 v2 v3} java/lang/StringBuilder/append [array char] int int )
  (label lb0b62)
  (line 365)
  (move/from16 v0 v19)
  (move v1 v7)
  (if-gt v0 v1 lb0c36)
  (aget-char v13 v18 v19)
  (const/16 v14 101)
  (if-eq v13 v14 lb0b84)
  (aget-char v13 v18 v19)
  (const/16 v14 69)
  (if-ne v13 v14 lb0c36)
  (label lb0b84)
  (line 366)
  (add-int/lit8 v19 v19 1)
  (line 368)
  (move/from16 v4 v19)
  (line 369)
  (move/from16 v0 v19)
  (move v1 v7)
  (if-gt v0 v1 lb0bc0)
  (aget-char v13 v18 v19)
  (const/16 v14 43)
  (if-ne v13 v14 lb0bc0)
  (line 370)
  (add-int/lit8 v19 v19 1)
  (line 371)
  (move/from16 v0 v19)
  (move v1 v7)
  (if-gt v0 v1 lb0bc0)
  (aget-char v13 v18 v19)
  (const/16 v14 45)
  (if-eq v13 v14 lb0bc0)
  (line 372)
  (add-int/lit8 v4 v4 1)
  (label lb0bc0)
  (line 376)
  (add-int/lit8 v13 v7 1)
  (sub-int/2addr v13 v4)
  (move-object/from16 v0 v18)
  (move v1 v4)
  (move v2 v13)
  (invoke-static {v0 v1 v2} java/lang/String/valueOf [array char] int int )
  (move-result-object v10)
  (line 378)
  (move-object/from16 v0 v17)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v13 v0)
  (int-to-long v13 v13)
  (invoke-static {v10} java/lang/Integer/parseInt [object java/lang/String] )
  (move-result v15)
  (int-to-long v15 v15)
  (sub-long v8 v13 v15)
  (label lb0bf0)
  (line 379)
  (long-to-int v13 v8)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.smallValue long)
  (line 380)
  (move-object/from16 v0 v17)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v13 v0)
  (int-to-long v13 v13)
  (cmp-long v13 v8 v13)
  (if-eqz v13 lb0c36)
  (line 382)
  (new-instance v13 java/lang/NumberFormatException)
  (const-string v14 "math.02")
  (invoke-static {v14} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v14)
  (invoke-direct {v13 v14} java/lang/NumberFormatException/<init> [object java/lang/String] )
  (throw v13)
  (label lb0c28)
  (line 362)
  (const/4 v13 0)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.smallValue long)
  (goto lb0b62)
  (label lb0c36)
  (line 386)
  (const/16 v13 19)
  (if-ge v5 v13 lb0cb4)
  (line 387)
  (invoke-virtual-quick {v11} java/lang/StringBuilder/toString )
  (move-result-object v13)
  (invoke-static {v13} java/lang/Long/parseLong [object java/lang/String] )
  (move-result-wide v13)
  (move-wide v0 v13)
  (move-object/from16 v2 v17)
  (iput-wide-quick v0 v2 java/math/BigDecimal.hashCode int)
  (line 388)
  (move-object/from16 v0 v17)
  (iget-wide-quick v0 v0 java/math/BigDecimal.hashCode int)
  (move-wide v13 v0)
  (invoke-static {v13 v14} java/math/BigDecimal/bitLength long )
  (move-result v13)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.null)
  (label lb0c74)
  (line 392)
  (invoke-virtual-quick {v11} java/lang/StringBuilder/length )
  (move-result v13)
  (sub-int/2addr v13 v6)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.scale int)
  (line 393)
  (const/4 v13 0)
  (invoke-virtual-quick {v11 v13} java/lang/StringBuilder/charAt int )
  (move-result v13)
  (const/16 v14 45)
  (if-ne v13 v14 lb0cb2)
  (line 394)
  (move-object/from16 v0 v17)
  (iget-quick v0 v0 java/math/BigDecimal.scale int)
  (move v13 v0)
  (const/4 v14 1)
  (sub-int/2addr v13 v14)
  (move v0 v13)
  (move-object/from16 v1 v17)
  (iput-quick v0 v1 java/math/BigDecimal.scale int)
  (label lb0cb2)
  (line 396)
  (return-void )
  (label lb0cb4)
  (line 390)
  (new-instance v13 java/math/BigInteger)
  (invoke-virtual-quick {v11} java/lang/StringBuilder/toString )
  (move-result-object v14)
  (invoke-direct {v13 v14} java/math/BigInteger/<init> [object java/lang/String] )
  (move-object/from16 v0 v17)
  (move-object v1 v13)
  (invoke-direct {v0 v1} java/math/BigDecimal/setUnscaledValue [object java/math/BigInteger] )
  (goto lb0c74)
 )

(method (attrs public ) <init>([array char] int int [object java/math/MathContext] )void
  (limit registers 5)
  ; this: v0 ([object java/math/BigDecimal])
  ; parameter[0] : v1 ([array char])
  ; parameter[1] : v2 (int)
  ; parameter[2] : v3 (int)
  ; parameter[3] : v4 ([object java/math/MathContext])
  (line 425)
  (invoke-direct {v0 v1 v2 v3} java/math/BigDecimal/<init> [array char] int int )
  (line 426)
  (invoke-direct {v0 v4} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 427)
  (return-void )
 )

(method (attrs public ) <init>([array char] [object java/math/MathContext] )void
  (limit registers 5)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([array char])
  ; parameter[1] : v4 ([object java/math/MathContext])
  (line 467)
  (const/4 v0 0)
  (array-length v1 v3)
  (invoke-direct {v2 v3 v0 v1} java/math/BigDecimal/<init> [array char] int int )
  (line 468)
  (invoke-direct {v2 v4} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 469)
  (return-void )
 )

(method (attrs private static ) addAndMult10([object java/math/BigDecimal] [object java/math/BigDecimal] int )[object java/math/BigDecimal]
  (limit registers 10)
  ; parameter[0] : v7 ([object java/math/BigDecimal])
  ; parameter[1] : v8 ([object java/math/BigDecimal])
  ; parameter[2] : v9 (int)
  (line 854)
  (sget-object v1 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v1 v1)
  (if-ge v9 v1 lb0d7a)
  (iget-quick v1 v7 java/math/BigDecimal.null)
  (iget-quick v2 v8 java/math/BigDecimal.null)
  (sget-object v3 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (aget v3 v3 v9)
  (add-int/2addr v2 v3)
  (execute-inline {v1 v2} Ljava/lang/Math/max int int )
  (move-result v1)
  (add-int/lit8 v1 v1 1)
  (const/16 v2 64)
  (if-ge v1 v2 lb0d7a)
  (line 856)
  (iget-wide-quick v1 v7 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v3 v8 java/math/BigDecimal.hashCode int)
  (sget-object v5 java/math/BigDecimal.LONG_TEN_POW [array long])
  (aget-wide v5 v5 v9)
  (mul-long/2addr v3 v5)
  (add-long/2addr v1 v3)
  (iget-quick v3 v7 java/math/BigDecimal.smallValue long)
  (invoke-static {v1 v2 v3} java/math/BigDecimal/valueOf long int )
  (move-result-object v1)
  (label lb0d78)
  (line 860)
  (return-object v1)
  (label lb0d7a)
  (line 858)
  (invoke-direct {v8} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (int-to-long v2 v9)
  (invoke-static {v1 v2 v3} java/math/Multiplication/multiplyByTenPow [object java/math/BigInteger] long )
  (move-result-object v1)
  (iget-object-quick v0 v1 java/math/BigInteger.bigInt [object java/math/BigInt])
  (line 859)
  (invoke-direct {v7} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (iget-object-quick v1 v1 java/math/BigInteger.bigInt [object java/math/BigInt])
  (invoke-virtual-quick {v0 v1} java/math/BigInt/add [object java/math/BigInt] )
  (line 860)
  (new-instance v1 java/math/BigDecimal)
  (new-instance v2 java/math/BigInteger)
  (invoke-direct {v2 v0} java/math/BigInteger/<init> [object java/math/BigInt] )
  (iget-quick v3 v7 java/math/BigDecimal.smallValue long)
  (invoke-direct {v1 v2 v3} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb0d78)
 )

(method (attrs private ) aproxPrecision()int
  (limit registers 5)
  ; this: v4 ([object java/math/BigDecimal])
  (line 2978)
  (iget-quick v0 v4 java/math/BigDecimal.scale int)
  (if-lez v0 lb0dda)
  (iget-quick v0 v4 java/math/BigDecimal.scale int)
  (label lb0dd8)
  (return v0)
  (label lb0dda)
  (iget-quick v0 v4 java/math/BigDecimal.null)
  (const/4 v1 1)
  (sub-int/2addr v0 v1)
  (int-to-double v0 v0)
  (const-wide v2 4599094494223104511) ; 0x3fd34413509f79ff)
  (mul-double/2addr v0 v2)
  (double-to-int v0 v0)
  (add-int/lit8 v0 v0 1)
  (goto lb0dd8)
 )

(method (attrs private static ) bitLength(int )int
  (limit registers 3)
  ; parameter[0] : v2 (int)
  (line 3078)
  (if-gez v2 lb0e10)
  (line 3079)
  (xor-int/lit8 v2 v2 255)
  (label lb0e10)
  (line 3081)
  (const/16 v0 32)
  (invoke-static {v2} java/lang/Integer/numberOfLeadingZeros int )
  (move-result v1)
  (sub-int/2addr v0 v1)
  (return v0)
 )

(method (attrs private static ) bitLength(long )int
  (limit registers 4)
  ; parameter[0] : v2 (long)
  (line 3071)
  (const-wide/16 v0 0)
  (cmp-long v0 v2 v0)
  (if-gez v0 lb0e42)
  (line 3072)
  (const-wide/16 v0 65535)
  (xor-long/2addr v2 v0)
  (label lb0e42)
  (line 3074)
  (const/16 v0 64)
  (invoke-static {v2 v3} java/lang/Long/numberOfLeadingZeros long )
  (move-result v1)
  (sub-int/2addr v0 v1)
  (return v0)
 )

(method (attrs private static ) divideBigIntegers([object java/math/BigInteger] [object java/math/BigInteger] int [object java/math/RoundingMode] )[object java/math/BigDecimal]
  (limit registers 9)
  ; parameter[0] : v5 ([object java/math/BigInteger])
  ; parameter[1] : v6 ([object java/math/BigInteger])
  ; parameter[2] : v7 (int)
  ; parameter[3] : v8 ([object java/math/RoundingMode])
  (line 1161)
  (invoke-virtual-quick {v5 v6} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v0)
  (line 1163)
  (const/4 v1 0)
  (aget-object v1 v0 v1)
  (label lb0e72)
  (line 1164)
  (const/4 v2 1)
  (aget-object v0 v0 v2)
  (label lb0e78)
  (line 1165)
  (invoke-virtual-quick {v0} java/math/BigInteger/signum )
  (move-result v2)
  (if-nez v2 lb0e94)
  (line 1166)
  (new-instance v5 java/math/BigDecimal)
  (invoke-direct {v5 v1 v7} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (move-object v6 v5)
  (move-object v5 v1)
  (label lb0e92)
  (line 1192)
  (return-object v6)
  (label lb0e94)
  (line 1168)
  (invoke-virtual-quick {v5} java/math/BigInteger/signum )
  (move-result v5)
  (label lb0e9c)
  (invoke-virtual-quick {v6} java/math/BigInteger/signum )
  (move-result v2)
  (mul-int v4 v5 v2)
  (line 1170)
  (invoke-virtual-quick {v6} java/math/BigInteger/bitLength )
  (move-result v5)
  (const/16 v2 63)
  (if-ge v5 v2 lb0f34)
  (line 1171)
  (invoke-virtual-quick {v0} java/math/BigInteger/longValue )
  (move-result-wide v2)
  (label lb0ec0)
  (line 1172)
  (invoke-virtual-quick {v6} java/math/BigInteger/longValue )
  (move-result-wide v5)
  (label lb0ec8)
  (line 1173)
  (execute-inline {v2 v3} Ljava/lang/Math/abs long )
  (move-result-wide v2)
  (label lb0ed0)
  (const/4 v0 1)
  (shl-long/2addr v2 v0)
  (execute-inline {v5 v6} Ljava/lang/Math/abs long )
  (label lb0eda)
  (move-result-wide v5)
  (label lb0edc)
  (invoke-static {v2 v3 v5 v6} java/math/BigDecimal/longCompareTo long long )
  (move-result v5)
  (label lb0ee4)
  (line 1175)
  (const/4 v6 0)
  (invoke-virtual-quick {v1 v6} java/math/BigInteger/testBit int )
  (move-result v6)
  (if-eqz v6 lb0f30)
  (const/4 v6 1)
  (label lb0ef4)
  (add-int/lit8 v5 v5 5)
  (mul-int/2addr v5 v4)
  (invoke-static {v6 v5 v8} java/math/BigDecimal/roundingBehavior int int [object java/math/RoundingMode] )
  (label lb0f00)
  (move-result v5)
  (label lb0f02)
  (line 1184)
  (if-eqz v5 lb0f98)
  (line 1185)
  (invoke-virtual-quick {v1} java/math/BigInteger/bitLength )
  (move-result v6)
  (const/16 v8 63)
  (if-ge v6 v8 lb0f78)
  (line 1186)
  (invoke-virtual-quick {v1} java/math/BigInteger/longValue )
  (move-result-wide v2)
  (int-to-long v5 v5)
  (add-long/2addr v5 v2)
  (invoke-static {v5 v6 v7} java/math/BigDecimal/valueOf long int )
  (label lb0f28)
  (move-result-object v5)
  (move-object v6 v5)
  (move-object v5 v1)
  (label lb0f2e)
  (goto lb0e92)
  (label lb0f30)
  (line 1175)
  (const/4 v6 0)
  (goto lb0ef4)
  (label lb0f34)
  (line 1180)
  (invoke-virtual-quick {v0} java/math/BigInteger/abs )
  (move-result-object v5)
  (invoke-virtual-quick {v5} java/math/BigInteger/shiftLeftOneBit )
  (move-result-object v5)
  (invoke-virtual-quick {v6} java/math/BigInteger/abs )
  (move-result-object v6)
  (invoke-virtual-quick {v5 v6} java/math/BigInteger/compareTo [object java/math/BigInteger] )
  (move-result v5)
  (label lb0f54)
  (line 1181)
  (const/4 v6 0)
  (invoke-virtual-quick {v1 v6} java/math/BigInteger/testBit int )
  (move-result v6)
  (if-eqz v6 lb0f74)
  (const/4 v6 1)
  (label lb0f64)
  (add-int/lit8 v5 v5 5)
  (mul-int/2addr v5 v4)
  (invoke-static {v6 v5 v8} java/math/BigDecimal/roundingBehavior int int [object java/math/RoundingMode] )
  (label lb0f70)
  (move-result v5)
  (label lb0f72)
  (goto lb0f02)
  (label lb0f74)
  (const/4 v6 0)
  (goto lb0f64)
  (label lb0f78)
  (line 1188)
  (int-to-long v5 v5)
  (invoke-static {v5 v6} java/math/BigInteger/valueOf long )
  (label lb0f80)
  (move-result-object v5)
  (invoke-virtual-quick {v1 v5} java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v5)
  (label lb0f8a)
  (line 1189)
  (new-instance v6 java/math/BigDecimal)
  (invoke-direct {v6 v5 v7} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto/16 lb0e92)
  (label lb0f98)
  (line 1192)
  (new-instance v5 java/math/BigDecimal)
  (label lb0f9c)
  (invoke-direct {v5 v1 v7} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (move-object v6 v5)
  (move-object v5 v1)
  (label lb0fa6)
  (goto/16 lb0e92)
 )

(method (attrs private static ) dividePrimitiveLongs(long long int [object java/math/RoundingMode] )[object java/math/BigDecimal]
  (limit registers 16)
  ; parameter[0] : v10 (long)
  ; parameter[1] : v12 (long)
  ; parameter[2] : v14 (int)
  ; parameter[3] : v15 ([object java/math/RoundingMode])
  (line 1196)
  (div-long v1 v10 v12)
  (line 1197)
  (rem-long v3 v10 v12)
  (line 1198)
  (invoke-static {v10 v11} java/lang/Long/signum long )
  (move-result v6)
  (invoke-static {v12 v13} java/lang/Long/signum long )
  (move-result v7)
  (mul-int v5 v6 v7)
  (line 1199)
  (const-wide/16 v6 0)
  (cmp-long v6 v3 v6)
  (if-eqz v6 lb1018)
  (line 1202)
  (execute-inline {v3 v4} Ljava/lang/Math/abs long )
  (move-result-wide v6)
  (const/4 v8 1)
  (shl-long/2addr v6 v8)
  (execute-inline {v12 v13} Ljava/lang/Math/abs long )
  (move-result-wide v8)
  (invoke-static {v6 v7 v8 v9} java/math/BigDecimal/longCompareTo long long )
  (move-result v0)
  (label lb1000)
  (line 1204)
  (long-to-int v6 v1)
  (and-int/lit8 v6 v6 1)
  (add-int/lit8 v7 v0 5)
  (mul-int/2addr v7 v5)
  (invoke-static {v6 v7 v15} java/math/BigDecimal/roundingBehavior int int [object java/math/RoundingMode] )
  (move-result v6)
  (int-to-long v6 v6)
  (add-long/2addr v1 v6)
  (label lb1018)
  (line 1209)
  (invoke-static {v1 v2 v14} java/math/BigDecimal/valueOf long int )
  (move-result-object v6)
  (return-object v6)
 )

(method (attrs private ) getUnscaledValue()[object java/math/BigInteger]
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 3056)
  (iget-object-quick v0 v2 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (if-nez v0 lb104c)
  (line 3057)
  (iget-wide-quick v0 v2 java/math/BigDecimal.hashCode int)
  (invoke-static {v0 v1} java/math/BigInteger/valueOf long )
  (move-result-object v0)
  (iput-object-quick v0 v2 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (label lb104c)
  (line 3059)
  (iget-object-quick v0 v2 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (return-object v0)
 )

(method (attrs private ) inplaceRound([object java/math/MathContext] )void
  (limit registers 16)
  ; this: v14 ([object java/math/BigDecimal])
  ; parameter[0] : v15 ([object java/math/MathContext])
  (const/4 v13 1)
  (const/4 v12 0)
  (line 2800)
  (invoke-virtual-quick {v15} java/math/MathContext/getPrecision )
  (move-result v3)
  (line 2802)
  (invoke-direct {v14} java/math/BigDecimal/aproxPrecision )
  (move-result v8)
  (if-lt v8 v3 lb1080)
  (if-nez v3 lb1082)
  (label lb1080)
  (line 2844)
  (return-void )
  (label lb1082)
  (line 2806)
  (invoke-virtual-quick {v14} java/math/BigDecimal/precision )
  (move-result v8)
  (sub-int v1 v8 v3)
  (line 2808)
  (if-lez v1 lb1080)
  (line 2812)
  (iget-quick v8 v14 java/math/BigDecimal.null)
  (const/16 v9 64)
  (if-ge v8 v9 lb10a6)
  (line 2813)
  (invoke-direct {v14 v15 v1} java/math/BigDecimal/smallRound [object java/math/MathContext] int )
  (goto lb1080)
  (label lb10a6)
  (line 2817)
  (int-to-long v8 v1)
  (invoke-static {v8 v9} java/math/Multiplication/powerOf10 long )
  (move-result-object v6)
  (line 2818)
  (invoke-direct {v14} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v8)
  (invoke-virtual-quick {v8 v6} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v2)
  (line 2819)
  (iget-quick v8 v14 java/math/BigDecimal.smallValue long)
  (int-to-long v8 v8)
  (int-to-long v10 v1)
  (sub-long v4 v8 v10)
  (line 2823)
  (aget-object v8 v2 v13)
  (invoke-virtual-quick {v8} java/math/BigInteger/signum )
  (move-result v8)
  (if-eqz v8 lb117e)
  (line 2825)
  (aget-object v8 v2 v13)
  (invoke-virtual-quick {v8} java/math/BigInteger/abs )
  (move-result-object v8)
  (invoke-virtual-quick {v8} java/math/BigInteger/shiftLeftOneBit )
  (move-result-object v8)
  (invoke-virtual-quick {v8 v6} java/math/BigInteger/compareTo [object java/math/BigInteger] )
  (move-result v0)
  (label lb10f8)
  (line 2827)
  (aget-object v8 v2 v12)
  (invoke-virtual-quick {v8 v12} java/math/BigInteger/testBit int )
  (move-result v8)
  (if-eqz v8 lb119c)
  (move v8 v13)
  (label lb110a)
  (aget-object v9 v2 v13)
  (invoke-virtual-quick {v9} java/math/BigInteger/signum )
  (move-result v9)
  (add-int/lit8 v10 v0 5)
  (mul-int/2addr v9 v10)
  (invoke-virtual-quick {v15} java/math/MathContext/getRoundingMode )
  (move-result-object v10)
  (invoke-static {v8 v9 v10} java/math/BigDecimal/roundingBehavior int int [object java/math/RoundingMode] )
  (move-result v0)
  (line 2830)
  (if-eqz v0 lb114a)
  (line 2831)
  (aget-object v8 v2 v12)
  (int-to-long v9 v0)
  (invoke-static {v9 v10} java/math/BigInteger/valueOf long )
  (move-result-object v9)
  (invoke-virtual-quick {v8 v9} java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v8)
  (aput-object v8 v2 v12)
  (label lb114a)
  (line 2833)
  (new-instance v7 java/math/BigDecimal)
  (aget-object v8 v2 v12)
  (invoke-direct {v7 v8} java/math/BigDecimal/<init> [object java/math/BigInteger] )
  (label lb1158)
  (line 2835)
  (invoke-virtual-quick {v7} java/math/BigDecimal/precision )
  (move-result v8)
  (if-le v8 v3 lb117e)
  (line 2836)
  (aget-object v8 v2 v12)
  (sget-object v9 java/math/BigInteger.TEN [object java/math/BigInteger])
  (invoke-virtual-quick {v8 v9} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v8)
  (aput-object v8 v2 v12)
  (line 2837)
  (const-wide/16 v8 1)
  (sub-long/2addr v4 v8)
  (label lb117e)
  (line 2841)
  (invoke-static {v4 v5} java/math/BigDecimal/toIntScale long )
  (move-result v8)
  (iput-quick v8 v14 java/math/BigDecimal.smallValue long)
  (line 2842)
  (iput-quick v3 v14 java/math/BigDecimal.scale int)
  (line 2843)
  (aget-object v8 v2 v12)
  (invoke-direct {v14 v8} java/math/BigDecimal/setUnscaledValue [object java/math/BigInteger] )
  (goto/16 lb1080)
  (label lb119c)
  (move v8 v12)
  (line 2827)
  (goto lb110a)
 )

(method (attrs private ) isZero()boolean
  (limit registers 5)
  ; this: v4 ([object java/math/BigDecimal])
  (line 1869)
  (iget-quick v0 v4 java/math/BigDecimal.null)
  (if-nez v0 lb11cc)
  (iget-wide-quick v0 v4 java/math/BigDecimal.hashCode int)
  (const-wide/16 v2 65535)
  (cmp-long v0 v0 v2)
  (if-eqz v0 lb11cc)
  (const/4 v0 1)
  (label lb11ca)
  (return v0)
  (label lb11cc)
  (const/4 v0 0)
  (goto lb11ca)
 )

(method (attrs private static ) longCompareTo(long long )int
  (limit registers 5)
  ; parameter[0] : v1 (long)
  ; parameter[1] : v3 (long)
  (line 2847)
  (cmp-long v0 v1 v3)
  (if-lez v0 lb11ec)
  (const/4 v0 1)
  (label lb11ea)
  (return v0)
  (label lb11ec)
  (cmp-long v0 v1 v3)
  (if-gez v0 lb11f8)
  (const/4 v0 15)
  (goto lb11ea)
  (label lb11f8)
  (const/4 v0 0)
  (goto lb11ea)
 )

(method (attrs private ) movePoint(long )[object java/math/BigDecimal]
  (limit registers 9)
  ; this: v6 ([object java/math/BigDecimal])
  ; parameter[0] : v7 (long)
  (const-wide/16 v1 0)
  (const/16 v4 64)
  (const/4 v5 0)
  (line 2072)
  (invoke-direct {v6} java/math/BigDecimal/isZero )
  (move-result v0)
  (if-eqz v0 lb1234)
  (line 2073)
  (invoke-static {v7 v8 v1 v2} java/lang/Math/max long long )
  (move-result-wide v0)
  (invoke-static {v0 v1} java/math/BigDecimal/zeroScaledBy long )
  (move-result-object v0)
  (label lb1232)
  (line 2089)
  (return-object v0)
  (label lb1234)
  (line 2079)
  (cmp-long v0 v7 v1)
  (if-ltz v0 lb1276)
  (line 2080)
  (iget-quick v0 v6 java/math/BigDecimal.null)
  (if-ge v0 v4 lb125a)
  (line 2081)
  (iget-wide-quick v0 v6 java/math/BigDecimal.hashCode int)
  (invoke-static {v7 v8} java/math/BigDecimal/toIntScale long )
  (move-result v2)
  (invoke-static {v0 v1 v2} java/math/BigDecimal/valueOf long int )
  (move-result-object v0)
  (goto lb1232)
  (label lb125a)
  (line 2083)
  (new-instance v0 java/math/BigDecimal)
  (invoke-direct {v6} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (invoke-static {v7 v8} java/math/BigDecimal/toIntScale long )
  (move-result v2)
  (invoke-direct {v0 v1 v2} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb1232)
  (label lb1276)
  (line 2085)
  (neg-long v0 v7)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v2 v2)
  (int-to-long v2 v2)
  (cmp-long v0 v0 v2)
  (if-gez v0 lb12ba)
  (iget-quick v0 v6 java/math/BigDecimal.null)
  (sget-object v1 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (neg-long v2 v7)
  (long-to-int v2 v2)
  (aget v1 v1 v2)
  (add-int/2addr v0 v1)
  (if-ge v0 v4 lb12ba)
  (line 2087)
  (iget-wide-quick v0 v6 java/math/BigDecimal.hashCode int)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (neg-long v3 v7)
  (long-to-int v3 v3)
  (aget-wide v2 v2 v3)
  (mul-long/2addr v0 v2)
  (invoke-static {v0 v1 v5} java/math/BigDecimal/valueOf long int )
  (move-result-object v0)
  (goto lb1232)
  (label lb12ba)
  (line 2089)
  (new-instance v0 java/math/BigDecimal)
  (invoke-direct {v6} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (neg-long v2 v7)
  (long-to-int v2 v2)
  (int-to-long v2 v2)
  (invoke-static {v1 v2 v3} java/math/Multiplication/multiplyByTenPow [object java/math/BigInteger] long )
  (move-result-object v1)
  (invoke-direct {v0 v1 v5} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb1232)
 )

(method (attrs private ) readObject([object java/io/ObjectInputStream] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException]  [object java/lang/ClassNotFoundException])
  )
  (limit registers 4)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([object java/io/ObjectInputStream])
  (line 3038)
  (invoke-virtual-quick {v3} java/io/ObjectInputStream/defaultReadObject )
  (line 3040)
  (iget-object-quick v0 v2 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (invoke-virtual-quick {v0} java/math/BigInteger/bitLength )
  (move-result v0)
  (iput-quick v0 v2 java/math/BigDecimal.null)
  (line 3041)
  (iget-quick v0 v2 java/math/BigDecimal.null)
  (const/16 v1 64)
  (if-ge v0 v1 lb131e)
  (line 3042)
  (iget-object-quick v0 v2 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (invoke-virtual-quick {v0} java/math/BigInteger/longValue )
  (move-result-wide v0)
  (iput-wide-quick v0 v2 java/math/BigDecimal.hashCode int)
  (label lb131e)
  (line 3044)
  (return-void )
 )

(method (attrs private static ) roundingBehavior(int int [object java/math/RoundingMode] )int
  (limit registers 8)
  ; parameter[0] : v5 (int)
  ; parameter[1] : v6 (int)
  ; parameter[2] : v7 ([object java/math/RoundingMode])
  (const/4 v4 0)
  (const/4 v3 5)
  (line 2903)
  (const/4 v0 0)
  (line 2905)
  (sget-object v1 java/math/BigDecimal$1.$SwitchMap$java$math$RoundingMode [array int])
  (invoke-virtual-quick {v7} java/math/RoundingMode/ordinal )
  (move-result v2)
  (aget v1 v1 v2)
  (packed-switch v1 1
    psb1346_b134e ; case 1
    psb1346_b136a ; case 2
    psb1346_b134c ; case 3
    psb1346_b1374 ; case 4
    psb1346_b1386 ; case 5
    psb1346_b1398 ; case 6
    psb1346_b13ae ; case 7
    psb1346_b13c4 ; case 8
    psb1346_default) ; default
  (label lb134c)
  (label psb1346_default)
  (label psb1346_b134c)
  (line 2939)
  (return v0)
  (label psb1346_b134e)
  (line 2907)
  (if-eqz v6 lb134c)
  (line 2909)
  (new-instance v1 java/lang/ArithmeticException)
  (const-string v2 "math.08")
  (invoke-static {v2} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v2)
  (invoke-direct {v1 v2} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v1)
  (label psb1346_b136a)
  (line 2913)
  (invoke-static {v6} java/lang/Integer/signum int )
  (move-result v0)
  (line 2914)
  (goto lb134c)
  (label psb1346_b1374)
  (line 2918)
  (invoke-static {v6} java/lang/Integer/signum int )
  (move-result v1)
  (execute-inline {v1 v4} Ljava/lang/Math/max int int )
  (move-result v0)
  (line 2919)
  (goto lb134c)
  (label psb1346_b1386)
  (line 2921)
  (invoke-static {v6} java/lang/Integer/signum int )
  (move-result v1)
  (execute-inline {v1 v4} Ljava/lang/Math/min int int )
  (move-result v0)
  (line 2922)
  (goto lb134c)
  (label psb1346_b1398)
  (line 2924)
  (execute-inline {v6} Ljava/lang/Math/abs int )
  (move-result v1)
  (if-lt v1 v3 lb134c)
  (line 2925)
  (invoke-static {v6} java/lang/Integer/signum int )
  (move-result v0)
  (goto lb134c)
  (label psb1346_b13ae)
  (line 2929)
  (execute-inline {v6} Ljava/lang/Math/abs int )
  (move-result v1)
  (if-le v1 v3 lb134c)
  (line 2930)
  (invoke-static {v6} java/lang/Integer/signum int )
  (move-result v0)
  (goto lb134c)
  (label psb1346_b13c4)
  (line 2934)
  (execute-inline {v6} Ljava/lang/Math/abs int )
  (move-result v1)
  (add-int/2addr v1 v5)
  (if-le v1 v3 lb134c)
  (line 2935)
  (invoke-static {v6} java/lang/Integer/signum int )
  (move-result v0)
  (goto lb134c)
  (line 2905)
 )

(method (attrs private ) setUnscaledValue([object java/math/BigInteger] )void
  (limit registers 4)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([object java/math/BigInteger])
  (line 3063)
  (iput-object-quick v3 v2 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (line 3064)
  (invoke-virtual-quick {v3} java/math/BigInteger/bitLength )
  (move-result v0)
  (iput-quick v0 v2 java/math/BigDecimal.null)
  (line 3065)
  (iget-quick v0 v2 java/math/BigDecimal.null)
  (const/16 v1 64)
  (if-ge v0 v1 lb143c)
  (line 3066)
  (invoke-virtual-quick {v3} java/math/BigInteger/longValue )
  (move-result-wide v0)
  (iput-wide-quick v0 v2 java/math/BigDecimal.hashCode int)
  (label lb143c)
  (line 3068)
  (return-void )
 )

(method (attrs private ) smallRound([object java/math/MathContext] int )void
  (limit registers 21)
  ; this: v18 ([object java/math/BigDecimal])
  ; parameter[0] : v19 ([object java/math/MathContext])
  ; parameter[1] : v20 (int)
  (line 2860)
  (sget-object v14 java/math/BigDecimal.LONG_TEN_POW [array long])
  (aget-wide v10 v14 v20)
  (line 2861)
  (move-object/from16 v0 v18)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v14 v0)
  (int-to-long v14 v14)
  (move/from16 v0 v20)
  (int-to-long v0 v0)
  (move-wide/from16 v16 v0)
  (sub-long v8 v14 v16)
  (line 2862)
  (move-object/from16 v0 v18)
  (iget-wide-quick v0 v0 java/math/BigDecimal.hashCode int)
  (move-wide v12 v0)
  (line 2864)
  (div-long v6 v12 v10)
  (line 2865)
  (rem-long v4 v12 v10)
  (line 2868)
  (const-wide/16 v14 0)
  (cmp-long v14 v4 v14)
  (if-eqz v14 lb150a)
  (line 2870)
  (execute-inline {v4 v5} Ljava/lang/Math/abs long )
  (move-result-wide v14)
  (const/16 v16 1)
  (shl-long v14 v14 v16)
  (invoke-static {v14 v15 v10 v11} java/math/BigDecimal/longCompareTo long long )
  (move-result v3)
  (label lb14a8)
  (line 2872)
  (long-to-int v14 v6)
  (and-int/lit8 v14 v14 1)
  (invoke-static {v4 v5} java/lang/Long/signum long )
  (move-result v15)
  (add-int/lit8 v16 v3 5)
  (mul-int v15 v15 v16)
  (invoke-virtual-quick/range {v19}java/math/MathContext/getRoundingMode )
  (move-result-object v16)
  (invoke-static/range {v14 .. v16} java/math/BigDecimal/roundingBehavior int int [object java/math/RoundingMode] )
  (move-result v14)
  (int-to-long v14 v14)
  (add-long/2addr v6 v14)
  (line 2876)
  (execute-inline {v6 v7} Ljava/lang/Math/abs long )
  (move-result-wide v14)
  (long-to-double v14 v14)
  (invoke-static {v14 v15} java/lang/Math/log10 double )
  (move-result-wide v14)
  (invoke-virtual-quick/range {v19}java/math/MathContext/getPrecision )
  (move-result v16)
  (move/from16 v0 v16)
  (int-to-double v0 v0)
  (move-wide/from16 v16 v0)
  (cmpl-double v14 v14 v16)
  (if-ltz v14 lb150a)
  (line 2877)
  (const-wide/16 v14 10)
  (div-long/2addr v6 v14)
  (line 2878)
  (const-wide/16 v14 1)
  (sub-long/2addr v8 v14)
  (label lb150a)
  (line 2882)
  (invoke-static {v8 v9} java/math/BigDecimal/toIntScale long )
  (move-result v14)
  (move v0 v14)
  (move-object/from16 v1 v18)
  (iput-quick v0 v1 java/math/BigDecimal.smallValue long)
  (line 2883)
  (invoke-virtual-quick/range {v19}java/math/MathContext/getPrecision )
  (move-result v14)
  (move v0 v14)
  (move-object/from16 v1 v18)
  (iput-quick v0 v1 java/math/BigDecimal.scale int)
  (line 2884)
  (move-wide v0 v6)
  (move-object/from16 v2 v18)
  (iput-wide-quick v0 v2 java/math/BigDecimal.hashCode int)
  (line 2885)
  (invoke-static {v6 v7} java/math/BigDecimal/bitLength long )
  (move-result v14)
  (move v0 v14)
  (move-object/from16 v1 v18)
  (iput-quick v0 v1 java/math/BigDecimal.null)
  (line 2886)
  (const/4 v14 0)
  (move-object v0 v14)
  (move-object/from16 v1 v18)
  (iput-object-quick v0 v1 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (line 2887)
  (return-void )
 )

(method (attrs private static ) toIntScale(long )int
  (limit registers 4)
  ; parameter[0] : v2 (long)
  (line 2997)
  (const-wide/32 v0 2147483648) ; 0x80000000)
  (cmp-long v0 v2 v0)
  (if-gez v0 lb158e)
  (line 2999)
  (new-instance v0 java/lang/ArithmeticException)
  (const-string v1 "math.09")
  (invoke-static {v1} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v1)
  (invoke-direct {v0 v1} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v0)
  (label lb158e)
  (line 3000)
  (const-wide/32 v0 2147483647) ; 0x7fffffff)
  (cmp-long v0 v2 v0)
  (if-lez v0 lb15b4)
  (line 3002)
  (new-instance v0 java/lang/ArithmeticException)
  (const-string v1 "math.0A")
  (invoke-static {v1} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v1)
  (invoke-direct {v0 v1} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v0)
  (label lb15b4)
  (line 3004)
  (long-to-int v0 v2)
  (return v0)
 )

(method (attrs private ) valueExact(int )long
  (limit registers 5)
  ; this: v3 ([object java/math/BigDecimal])
  ; parameter[0] : v4 (int)
  (line 2958)
  (invoke-virtual-quick {v3} java/math/BigDecimal/toBigIntegerExact )
  (move-result-object v0)
  (line 2960)
  (invoke-virtual-quick {v0} java/math/BigInteger/bitLength )
  (move-result v1)
  (if-ge v1 v4 lb15e6)
  (line 2962)
  (invoke-virtual-quick {v0} java/math/BigInteger/longValue )
  (move-result-wide v1)
  (return-wide v1)
  (label lb15e6)
  (line 2965)
  (new-instance v1 java/lang/ArithmeticException)
  (const-string v2 "math.08")
  (invoke-static {v2} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v2)
  (invoke-direct {v1 v2} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v1)
 )

(method (attrs public static ) valueOf(double )[object java/math/BigDecimal]
  (limit registers 4)
  ; parameter[0] : v2 (double)
  (line 804)
  (invoke-static {v2 v3} java/lang/Double/isInfinite double )
  (move-result v0)
  (if-nez v0 lb1628)
  (invoke-static {v2 v3} java/lang/Double/isNaN double )
  (move-result v0)
  (if-eqz v0 lb1640)
  (label lb1628)
  (line 806)
  (new-instance v0 java/lang/NumberFormatException)
  (const-string v1 "math.03")
  (invoke-static {v1} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v1)
  (invoke-direct {v0 v1} java/lang/NumberFormatException/<init> [object java/lang/String] )
  (throw v0)
  (label lb1640)
  (line 808)
  (new-instance v0 java/math/BigDecimal)
  (invoke-static {v2 v3} java/lang/Double/toString double )
  (move-result-object v1)
  (invoke-direct {v0 v1} java/math/BigDecimal/<init> [object java/lang/String] )
  (return-object v0)
 )

(method (attrs public static ) valueOf(long )[object java/math/BigDecimal]
  (limit registers 4)
  ; parameter[0] : v2 (long)
  (line 779)
  (const-wide/16 v0 0)
  (cmp-long v0 v2 v0)
  (if-ltz v0 lb1688)
  (const-wide/16 v0 11)
  (cmp-long v0 v2 v0)
  (if-gez v0 lb1688)
  (line 780)
  (sget-object v0 java/math/BigDecimal.BI_SCALED_BY_ZERO [array [object java/math/BigDecimal]])
  (long-to-int v1 v2)
  (aget-object v0 v0 v1)
  (label lb1686)
  (line 782)
  (return-object v0)
  (label lb1688)
  (new-instance v0 java/math/BigDecimal)
  (const/4 v1 0)
  (invoke-direct {v0 v2 v3 v1} java/math/BigDecimal/<init> long int )
  (goto lb1686)
 )

(method (attrs public static ) valueOf(long int )[object java/math/BigDecimal]
  (limit registers 5)
  ; parameter[0] : v2 (long)
  ; parameter[1] : v4 (int)
  (line 759)
  (if-nez v4 lb16b6)
  (line 760)
  (invoke-static {v2 v3} java/math/BigDecimal/valueOf long )
  (move-result-object v0)
  (label lb16b4)
  (line 766)
  (return-object v0)
  (label lb16b6)
  (line 762)
  (const-wide/16 v0 0)
  (cmp-long v0 v2 v0)
  (if-nez v0 lb16da)
  (if-ltz v4 lb16da)
  (sget-object v0 java/math/BigDecimal.ZERO_SCALED_BY [array [object java/math/BigDecimal]])
  (array-length v0 v0)
  (if-ge v4 v0 lb16da)
  (line 764)
  (sget-object v0 java/math/BigDecimal.ZERO_SCALED_BY [array [object java/math/BigDecimal]])
  (aget-object v0 v0 v4)
  (goto lb16b4)
  (label lb16da)
  (line 766)
  (new-instance v0 java/math/BigDecimal)
  (invoke-direct {v0 v2 v3 v4} java/math/BigDecimal/<init> long int )
  (goto lb16b4)
 )

(method (attrs private ) writeObject([object java/io/ObjectOutputStream] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 2)
  ; this: v0 ([object java/math/BigDecimal])
  ; parameter[0] : v1 ([object java/io/ObjectOutputStream])
  (line 3051)
  (invoke-direct {v0} java/math/BigDecimal/getUnscaledValue )
  (line 3052)
  (invoke-virtual-quick {v1} java/io/ObjectOutputStream/defaultWriteObject )
  (line 3053)
  (return-void )
 )

(method (attrs private static ) zeroScaledBy(long )[object java/math/BigDecimal]
  (limit registers 7)
  ; parameter[0] : v5 (long)
  (const-wide/16 v3 0)
  (const/4 v2 0)
  (line 3022)
  (long-to-int v0 v5)
  (int-to-long v0 v0)
  (cmp-long v0 v5 v0)
  (if-nez v0 lb1736)
  (line 3023)
  (long-to-int v0 v5)
  (invoke-static {v3 v4 v0} java/math/BigDecimal/valueOf long int )
  (move-result-object v0)
  (label lb1734)
  (line 3028)
  (return-object v0)
  (label lb1736)
  (line 3025)
  (cmp-long v0 v5 v3)
  (if-ltz v0 lb1750)
  (line 3026)
  (new-instance v0 java/math/BigDecimal)
  (const v1 2147483647) ; 0x7fffffff)
  (invoke-direct {v0 v2 v1} java/math/BigDecimal/<init> int int )
  (goto lb1734)
  (label lb1750)
  (line 3028)
  (new-instance v0 java/math/BigDecimal)
  (const/high16 v1 32768)
  (invoke-direct {v0 v2 v1} java/math/BigDecimal/<init> int int )
  (goto lb1734)
 )

(method (attrs public ) abs()[object java/math/BigDecimal]
  (limit registers 2)
  ; this: v1 ([object java/math/BigDecimal])
  (line 1783)
  (invoke-virtual-quick {v1} java/math/BigDecimal/signum )
  (move-result v0)
  (if-gez v0 lb1786)
  (invoke-virtual-quick {v1} java/math/BigDecimal/negate )
  (move-result-object v0)
  (label lb1784)
  (return-object v0)
  (label lb1786)
  (move-object v0 v1)
  (goto lb1784)
)

(method (attrs public ) abs([object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/MathContext])
  (line 1797)
  (invoke-virtual-quick {v1} java/math/BigDecimal/abs )
  (move-result-object v0)
  (line 1798)
  (invoke-direct {v0 v2} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 1799)
  (return-object v0)
)

(method (attrs public ) add([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 7)
  ; this: v5 ([object java/math/BigDecimal])
  ; parameter[0] : v6 ([object java/math/BigDecimal])
  (line 823)
  (iget-quick v1 v5 java/math/BigDecimal.smallValue long)
  (iget-quick v2 v6 java/math/BigDecimal.smallValue long)
  (sub-int v0 v1 v2)
  (line 825)
  (invoke-direct {v5} java/math/BigDecimal/isZero )
  (move-result v1)
  (if-eqz v1 lb17ec)
  (line 826)
  (if-gtz v0 lb17dc)
  (move-object v1 v6)
  (label lb17da)
  (line 848)
  (return-object v1)
  (label lb17dc)
  (line 829)
  (invoke-direct {v6} java/math/BigDecimal/isZero )
  (move-result v1)
  (if-eqz v1 lb1800)
  (move-object v1 v5)
  (line 830)
  (goto lb17da)
  (label lb17ec)
  (line 832)
  (invoke-direct {v6} java/math/BigDecimal/isZero )
  (move-result v1)
  (if-eqz v1 lb1800)
  (line 833)
  (if-ltz v0 lb1800)
  (move-object v1 v5)
  (line 834)
  (goto lb17da)
  (label lb1800)
  (line 838)
  (if-nez v0 lb1860)
  (line 840)
  (iget-quick v1 v5 java/math/BigDecimal.null)
  (iget-quick v2 v6 java/math/BigDecimal.null)
  (execute-inline {v1 v2} Ljava/lang/Math/max int int )
  (move-result v1)
  (add-int/lit8 v1 v1 1)
  (const/16 v2 64)
  (if-ge v1 v2 lb1838)
  (line 841)
  (iget-wide-quick v1 v5 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v3 v6 java/math/BigDecimal.hashCode int)
  (add-long/2addr v1 v3)
  (iget-quick v3 v5 java/math/BigDecimal.smallValue long)
  (invoke-static {v1 v2 v3} java/math/BigDecimal/valueOf long int )
  (move-result-object v1)
  (goto lb17da)
  (label lb1838)
  (line 843)
  (new-instance v1 java/math/BigDecimal)
  (invoke-direct {v5} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v2)
  (invoke-direct {v6} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v2)
  (iget-quick v3 v5 java/math/BigDecimal.smallValue long)
  (invoke-direct {v1 v2 v3} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb17da)
  (label lb1860)
  (line 844)
  (if-lez v0 lb186e)
  (line 846)
  (invoke-static {v5 v6 v0} java/math/BigDecimal/addAndMult10 [object java/math/BigDecimal] [object java/math/BigDecimal] int )
  (move-result-object v1)
  (goto lb17da)
  (label lb186e)
  (line 848)
  (neg-int v1 v0)
  (invoke-static {v6 v5 v1} java/math/BigDecimal/addAndMult10 [object java/math/BigDecimal] [object java/math/BigDecimal] int )
  (move-result-object v1)
  (goto lb17da)
)

(method (attrs public ) add([object java/math/BigDecimal] [object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 16)
  ; this: v13 ([object java/math/BigDecimal])
  ; parameter[0] : v14 ([object java/math/BigDecimal])
  ; parameter[1] : v15 ([object java/math/MathContext])
  (line 881)
  (iget-quick v7 v13 java/math/BigDecimal.smallValue long)
  (int-to-long v7 v7)
  (iget-quick v9 v14 java/math/BigDecimal.smallValue long)
  (int-to-long v9 v9)
  (sub-long v0 v7 v9)
  (line 884)
  (invoke-direct {v14} java/math/BigDecimal/isZero )
  (move-result v7)
  (if-nez v7 lb18c0)
  (invoke-direct {v13} java/math/BigDecimal/isZero )
  (move-result v7)
  (if-nez v7 lb18c0)
  (invoke-virtual-quick {v15} java/math/MathContext/getPrecision )
  (move-result v7)
  (if-nez v7 lb18d2)
  (label lb18c0)
  (line 886)
  (invoke-virtual-quick {v13 v14} java/math/BigDecimal/add [object java/math/BigDecimal] )
  (move-result-object v7)
  (invoke-virtual-quick {v7 v15} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v7)
  (label lb18d0)
  (line 915)
  (return-object v7)
  (label lb18d2)
  (line 889)
  (invoke-direct {v13} java/math/BigDecimal/aproxPrecision )
  (move-result v7)
  (int-to-long v7 v7)
  (const-wide/16 v9 1)
  (sub-long v9 v0 v9)
  (cmp-long v7 v7 v9)
  (if-gez v7 lb1916)
  (line 890)
  (move-object v2 v14)
  (label lb18ee)
  (line 891)
  (move-object v5 v13)
  (label lb18f0)
  (line 898)
  (invoke-virtual-quick {v15} java/math/MathContext/getPrecision )
  (move-result v7)
  (invoke-direct {v2} java/math/BigDecimal/aproxPrecision )
  (move-result v8)
  (if-lt v7 v8 lb1948)
  (line 900)
  (invoke-virtual-quick {v13 v14} java/math/BigDecimal/add [object java/math/BigDecimal] )
  (move-result-object v7)
  (invoke-virtual-quick {v7 v15} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v7)
  (goto lb18d0)
  (label lb1916)
  (line 892)
  (invoke-direct {v14} java/math/BigDecimal/aproxPrecision )
  (move-result v7)
  (int-to-long v7 v7)
  (neg-long v9 v0)
  (const-wide/16 v11 1)
  (sub-long/2addr v9 v11)
  (cmp-long v7 v7 v9)
  (if-gez v7 lb1936)
  (line 893)
  (move-object v2 v13)
  (label lb1932)
  (line 894)
  (move-object v5 v14)
  (label lb1934)
  (goto lb18f0)
  (label lb1936)
  (line 896)
  (invoke-virtual-quick {v13 v14} java/math/BigDecimal/add [object java/math/BigDecimal] )
  (move-result-object v7)
  (invoke-virtual-quick {v7 v15} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v7)
  (goto lb18d0)
  (label lb1948)
  (line 903)
  (invoke-virtual-quick {v2} java/math/BigDecimal/signum )
  (move-result v4)
  (line 904)
  (invoke-virtual-quick {v5} java/math/BigDecimal/signum )
  (move-result v7)
  (if-ne v4 v7 lb199e)
  (line 905)
  (invoke-direct {v2} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v7)
  (const/16 v8 10)
  (invoke-static {v7 v8} java/math/Multiplication/multiplyByPositiveInt [object java/math/BigInteger] int )
  (move-result-object v7)
  (int-to-long v8 v4)
  (invoke-static {v8 v9} java/math/BigInteger/valueOf long )
  (move-result-object v8)
  (invoke-virtual-quick {v7 v8} java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v6)
  (label lb1982)
  (line 914)
  (new-instance v3 java/math/BigDecimal)
  (iget-quick v7 v2 java/math/BigDecimal.smallValue long)
  (add-int/lit8 v7 v7 1)
  (invoke-direct {v3 v6 v7} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (label lb1994)
  (line 915)
  (invoke-virtual-quick {v3 v15} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v7)
  (goto lb18d0)
  (label lb199e)
  (line 908)
  (invoke-direct {v2} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v7)
  (int-to-long v8 v4)
  (invoke-static {v8 v9} java/math/BigInteger/valueOf long )
  (move-result-object v8)
  (invoke-virtual-quick {v7 v8} java/math/BigInteger/subtract [object java/math/BigInteger] )
  (move-result-object v6)
  (line 910)
  (const/16 v7 10)
  (invoke-static {v6 v7} java/math/Multiplication/multiplyByPositiveInt [object java/math/BigInteger] int )
  (move-result-object v7)
  (mul-int/lit8 v8 v4 9)
  (int-to-long v8 v8)
  (invoke-static {v8 v9} java/math/BigInteger/valueOf long )
  (move-result-object v8)
  (invoke-virtual-quick {v7 v8} java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v6)
  (goto lb1982)
)

(method (attrs public ) byteValueExact()byte
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 2610)
  (const/16 v0 8)
  (invoke-direct {v2 v0} java/math/BigDecimal/valueExact int )
  (move-result-wide v0)
  (long-to-int v0 v0)
  (int-to-byte v0 v0)
  (return v0)
)

(method (attrs public ) compareTo([object java/lang/Object] )int
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/lang/Object])
  (line 41)
  (check-cast v2 [object java/math/BigDecimal])
  (invoke-virtual-quick {v1 v2} java/math/BigDecimal/compareTo [object java/math/BigDecimal] )
  (move-result v0)
  (return v0)
)

(method (attrs public ) compareTo([object java/math/BigDecimal] )int
  (limit registers 13)
  ; this: v11 ([object java/math/BigDecimal])
  ; parameter[0] : v12 ([object java/math/BigDecimal])
  (line 2198)
  (invoke-virtual-quick {v11} java/math/BigDecimal/signum )
  (move-result v3)
  (line 2199)
  (invoke-virtual-quick {v12} java/math/BigDecimal/signum )
  (move-result v6)
  (line 2201)
  (if-ne v3 v6 lb1b38)
  (line 2202)
  (iget-quick v7 v11 java/math/BigDecimal.smallValue long)
  (iget-quick v8 v12 java/math/BigDecimal.smallValue long)
  (if-ne v7 v8 lb1a94)
  (iget-quick v7 v11 java/math/BigDecimal.null)
  (const/16 v8 64)
  (if-ge v7 v8 lb1a94)
  (iget-quick v7 v12 java/math/BigDecimal.null)
  (const/16 v8 64)
  (if-ge v7 v8 lb1a94)
  (line 2203)
  (iget-wide-quick v7 v11 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v9 v12 java/math/BigDecimal.hashCode int)
  (cmp-long v7 v7 v9)
  (if-gez v7 lb1a7c)
  (const/4 v7 15)
  (label lb1a7a)
  (line 2225)
  (return v7)
  (label lb1a7c)
  (line 2203)
  (iget-wide-quick v7 v11 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v9 v12 java/math/BigDecimal.hashCode int)
  (cmp-long v7 v7 v9)
  (if-lez v7 lb1a90)
  (const/4 v7 1)
  (goto lb1a7a)
  (label lb1a90)
  (const/4 v7 0)
  (goto lb1a7a)
  (label lb1a94)
  (line 2205)
  (iget-quick v7 v11 java/math/BigDecimal.smallValue long)
  (int-to-long v7 v7)
  (iget-quick v9 v12 java/math/BigDecimal.smallValue long)
  (int-to-long v9 v9)
  (sub-long v1 v7 v9)
  (label lb1aa4)
  (line 2206)
  (invoke-direct {v11} java/math/BigDecimal/aproxPrecision )
  (move-result v7)
  (invoke-direct {v12} java/math/BigDecimal/aproxPrecision )
  (move-result v8)
  (sub-int v0 v7 v8)
  (label lb1ab8)
  (line 2207)
  (int-to-long v7 v0)
  (const-wide/16 v9 1)
  (add-long/2addr v9 v1)
  (cmp-long v7 v7 v9)
  (if-lez v7 lb1acc)
  (move v7 v3)
  (line 2208)
  (goto lb1a7a)
  (label lb1acc)
  (line 2209)
  (int-to-long v7 v0)
  (const-wide/16 v9 1)
  (sub-long v9 v1 v9)
  (cmp-long v7 v7 v9)
  (if-gez v7 lb1ae2)
  (line 2210)
  (neg-int v7 v3)
  (goto lb1a7a)
  (label lb1ae2)
  (line 2212)
  (invoke-direct {v11} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v4)
  (label lb1aea)
  (line 2213)
  (invoke-direct {v12} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v5)
  (label lb1af2)
  (line 2215)
  (const-wide/16 v7 0)
  (cmp-long v7 v1 v7)
  (if-gez v7 lb1b1a)
  (line 2216)
  (neg-long v7 v1)
  (invoke-static {v7 v8} java/math/Multiplication/powerOf10 long )
  (move-result-object v7)
  (invoke-virtual-quick {v4 v7} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v4)
  (label lb1b10)
  (line 2220)
  (invoke-virtual-quick {v4 v5} java/math/BigInteger/compareTo [object java/math/BigInteger] )
  (move-result v7)
  (goto lb1a7a)
  (label lb1b1a)
  (line 2217)
  (const-wide/16 v7 0)
  (cmp-long v7 v1 v7)
  (if-lez v7 lb1b10)
  (line 2218)
  (invoke-static {v1 v2} java/math/Multiplication/powerOf10 long )
  (move-result-object v7)
  (invoke-virtual-quick {v5 v7} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v5)
  (goto lb1b10)
  (label lb1b38)
  (line 2222)
  (if-ge v3 v6 lb1b40)
  (line 2223)
  (const/4 v7 15)
  (goto lb1a7a)
  (label lb1b40)
  (line 2225)
  (const/4 v7 1)
  (goto lb1a7a)
)

(method (attrs public ) divide([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 18)
  ; this: v16 ([object java/math/BigDecimal])
  ; parameter[0] : v17 ([object java/math/BigDecimal])
  (line 1280)
  (invoke-direct/range {v16} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v9)
  (line 1281)
  (invoke-direct/range {v17} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v10)
  (line 1284)
  (move-object/from16 v0 v16)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v12 v0)
  (int-to-long v12 v12)
  (move-object/from16 v0 v17)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v14 v0)
  (int-to-long v14 v14)
  (sub-long v1 v12 v14)
  (line 1287)
  (const/4 v6 0)
  (line 1288)
  (const/4 v4 1)
  (line 1289)
  (sget-object v12 java/math/BigDecimal.FIVE_POW [array [object java/math/BigInteger]])
  (array-length v12 v12)
  (const/4 v13 1)
  (sub-int v7 v12 v13)
  (line 1291)
  (invoke-direct/range {v17} java/math/BigDecimal/isZero )
  (move-result v12)
  (if-eqz v12 lb1bb4)
  (line 1293)
  (new-instance v12 java/lang/ArithmeticException)
  (const-string v13 "math.04")
  (invoke-static {v13} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v13)
  (invoke-direct {v12 v13} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v12)
  (label lb1bb4)
  (line 1295)
  (invoke-virtual-quick {v9} java/math/BigInteger/signum )
  (move-result v12)
  (if-nez v12 lb1bca)
  (line 1296)
  (invoke-static {v1 v2} java/math/BigDecimal/zeroScaledBy long )
  (move-result-object v12)
  (label lb1bc8)
  (line 1337)
  (return-object v12)
  (label lb1bca)
  (line 1299)
  (invoke-virtual-quick {v9 v10} java/math/BigInteger/gcd [object java/math/BigInteger] )
  (move-result-object v3)
  (line 1300)
  (invoke-virtual-quick {v9 v3} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v9)
  (line 1301)
  (invoke-virtual-quick {v10 v3} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v10)
  (line 1303)
  (invoke-virtual-quick {v10} java/math/BigInteger/getLowestSetBit )
  (move-result v5)
  (line 1304)
  (invoke-virtual-quick {v10 v5} java/math/BigInteger/shiftRight int )
  (move-result-object v10)
  (label lb1bf2)
  (line 1307)
  (sget-object v12 java/math/BigDecimal.FIVE_POW [array [object java/math/BigInteger]])
  (aget-object v12 v12 v4)
  (invoke-virtual-quick {v10 v12} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v11)
  (line 1308)
  (const/4 v12 1)
  (aget-object v12 v11 v12)
  (invoke-virtual-quick {v12} java/math/BigInteger/signum )
  (move-result v12)
  (if-nez v12 lb1c26)
  (line 1309)
  (add-int/2addr v6 v4)
  (line 1310)
  (if-ge v4 v7 lb1c1e)
  (line 1311)
  (add-int/lit8 v4 v4 1)
  (label lb1c1e)
  (line 1313)
  (const/4 v12 0)
  (aget-object v10 v11 v12)
  (goto lb1bf2)
  (label lb1c26)
  (line 1315)
  (const/4 v12 1)
  (if-ne v4 v12 lb1c5c)
  (line 1322)
  (invoke-virtual-quick {v10} java/math/BigInteger/abs )
  (move-result-object v12)
  (sget-object v13 java/math/BigInteger.ONE [object java/math/BigInteger])
  (invoke-virtual-quick {v12 v13} java/math/BigInteger/equals [object java/lang/Object] )
  (move-result v12)
  (if-nez v12 lb1c60)
  (line 1324)
  (new-instance v12 java/lang/ArithmeticException)
  (const-string v13 "math.05")
  (invoke-static {v13} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v13)
  (invoke-direct {v12 v13} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v12)
  (label lb1c5c)
  (line 1318)
  (const/4 v4 1)
  (line 1320)
  (goto lb1bf2)
  (label lb1c60)
  (line 1327)
  (invoke-virtual-quick {v10} java/math/BigInteger/signum )
  (move-result v12)
  (if-gez v12 lb1c74)
  (line 1328)
  (invoke-virtual-quick {v9} java/math/BigInteger/negate )
  (move-result-object v9)
  (label lb1c74)
  (line 1331)
  (execute-inline {v5 v6} Ljava/lang/Math/max int int )
  (move-result v12)
  (int-to-long v12 v12)
  (add-long/2addr v12 v1)
  (invoke-static {v12 v13} java/math/BigDecimal/toIntScale long )
  (move-result v8)
  (line 1333)
  (sub-int v4 v5 v6)
  (line 1335)
  (if-lez v4 lb1ca6)
  (invoke-static {v9 v4} java/math/Multiplication/multiplyByFivePow [object java/math/BigInteger] int )
  (move-result-object v12)
  (move-object v9 v12)
  (label lb1c9a)
  (line 1337)
  (new-instance v12 java/math/BigDecimal)
  (invoke-direct {v12 v9 v8} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb1bc8)
  (label lb1ca6)
  (line 1335)
  (neg-int v12 v4)
  (invoke-virtual-quick {v9 v12} java/math/BigInteger/shiftLeft int )
  (move-result-object v12)
  (move-object v9 v12)
  (goto lb1c9a)
)

(method (attrs public ) divide([object java/math/BigDecimal] int )[object java/math/BigDecimal]
  (limit registers 5)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([object java/math/BigDecimal])
  ; parameter[1] : v4 (int)
  (line 1235)
  (iget-quick v0 v2 java/math/BigDecimal.smallValue long)
  (invoke-static {v4} java/math/RoundingMode/valueOf int )
  (move-result-object v1)
  (invoke-virtual-quick {v2 v3 v0 v1} java/math/BigDecimal/divide [object java/math/BigDecimal] int [object java/math/RoundingMode] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) divide([object java/math/BigDecimal] int int )[object java/math/BigDecimal]
  (limit registers 5)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/BigDecimal])
  ; parameter[1] : v3 (int)
  ; parameter[2] : v4 (int)
  (line 1084)
  (invoke-static {v4} java/math/RoundingMode/valueOf int )
  (move-result-object v0)
  (invoke-virtual-quick {v1 v2 v3 v0} java/math/BigDecimal/divide [object java/math/BigDecimal] int [object java/math/RoundingMode] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) divide([object java/math/BigDecimal] int [object java/math/RoundingMode] )[object java/math/BigDecimal]
  (limit registers 16)
  ; this: v12 ([object java/math/BigDecimal])
  ; parameter[0] : v13 ([object java/math/BigDecimal])
  ; parameter[1] : v14 (int)
  ; parameter[2] : v15 ([object java/math/RoundingMode])
  (const-wide/16 v10 0)
  (const/16 v4 64)
  (line 1112)
  (if-nez v15 lb1d28)
  (line 1113)
  (new-instance v0 java/lang/NullPointerException)
  (invoke-direct {v0} java/lang/NullPointerException/<init> )
  (throw v0)
  (label lb1d28)
  (line 1115)
  (invoke-direct {v13} java/math/BigDecimal/isZero )
  (move-result v0)
  (if-eqz v0 lb1d4c)
  (line 1117)
  (new-instance v0 java/lang/ArithmeticException)
  (const-string v1 "math.04")
  (invoke-static {v1} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v1)
  (invoke-direct {v0 v1} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v0)
  (label lb1d4c)
  (line 1120)
  (iget-quick v0 v12 java/math/BigDecimal.smallValue long)
  (int-to-long v0 v0)
  (iget-quick v2 v13 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v2)
  (sub-long/2addr v0 v2)
  (int-to-long v2 v14)
  (sub-long v6 v0 v2)
  (line 1121)
  (iget-quick v0 v12 java/math/BigDecimal.null)
  (if-ge v0 v4 lb1e28)
  (iget-quick v0 v13 java/math/BigDecimal.null)
  (if-ge v0 v4 lb1e28)
  (line 1122)
  (cmp-long v0 v6 v10)
  (if-nez v0 lb1d8e)
  (line 1123)
  (iget-wide-quick v0 v12 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v2 v13 java/math/BigDecimal.hashCode int)
  (move v4 v14)
  (move-object v5 v15)
  (invoke-static/range {v0 .. v5} java/math/BigDecimal/dividePrimitiveLongs long long int [object java/math/RoundingMode] )
  (move-result-object v0)
  (label lb1d8c)
  (line 1156)
  (return-object v0)
  (label lb1d8e)
  (line 1127)
  (cmp-long v0 v6 v10)
  (if-lez v0 lb1ddc)
  (line 1128)
  (sget-object v0 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v0 v0)
  (int-to-long v0 v0)
  (cmp-long v0 v6 v0)
  (if-gez v0 lb1e28)
  (iget-quick v0 v13 java/math/BigDecimal.null)
  (sget-object v1 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (long-to-int v2 v6)
  (aget v1 v1 v2)
  (add-int/2addr v0 v1)
  (if-ge v0 v4 lb1e28)
  (line 1130)
  (iget-wide-quick v0 v12 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v2 v13 java/math/BigDecimal.hashCode int)
  (sget-object v4 java/math/BigDecimal.LONG_TEN_POW [array long])
  (long-to-int v5 v6)
  (aget-wide v4 v4 v5)
  (mul-long/2addr v2 v4)
  (move v4 v14)
  (move-object v5 v15)
  (invoke-static/range {v0 .. v5} java/math/BigDecimal/dividePrimitiveLongs long long int [object java/math/RoundingMode] )
  (move-result-object v0)
  (goto lb1d8c)
  (label lb1ddc)
  (line 1136)
  (neg-long v0 v6)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v2 v2)
  (int-to-long v2 v2)
  (cmp-long v0 v0 v2)
  (if-gez v0 lb1e28)
  (iget-quick v0 v12 java/math/BigDecimal.null)
  (sget-object v1 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (neg-long v2 v6)
  (long-to-int v2 v2)
  (aget v1 v1 v2)
  (add-int/2addr v0 v1)
  (if-ge v0 v4 lb1e28)
  (line 1138)
  (iget-wide-quick v0 v12 java/math/BigDecimal.hashCode int)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (neg-long v3 v6)
  (long-to-int v3 v3)
  (aget-wide v2 v2 v3)
  (mul-long/2addr v0 v2)
  (iget-wide-quick v2 v13 java/math/BigDecimal.hashCode int)
  (move v4 v14)
  (move-object v5 v15)
  (invoke-static/range {v0 .. v5} java/math/BigDecimal/dividePrimitiveLongs long long int [object java/math/RoundingMode] )
  (move-result-object v0)
  (goto lb1d8c)
  (label lb1e28)
  (line 1146)
  (invoke-direct {v12} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v8)
  (line 1147)
  (invoke-direct {v13} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v9)
  (line 1149)
  (cmp-long v0 v6 v10)
  (if-lez v0 lb1e56)
  (line 1151)
  (long-to-int v0 v6)
  (int-to-long v0 v0)
  (invoke-static {v9 v0 v1} java/math/Multiplication/multiplyByTenPow [object java/math/BigInteger] long )
  (move-result-object v9)
  (label lb1e4c)
  (line 1156)
  (invoke-static {v8 v9 v14 v15} java/math/BigDecimal/divideBigIntegers [object java/math/BigInteger] [object java/math/BigInteger] int [object java/math/RoundingMode] )
  (move-result-object v0)
  (goto lb1d8c)
  (label lb1e56)
  (line 1152)
  (cmp-long v0 v6 v10)
  (if-gez v0 lb1e4c)
  (line 1154)
  (neg-long v0 v6)
  (long-to-int v0 v0)
  (int-to-long v0 v0)
  (invoke-static {v8 v0 v1} java/math/Multiplication/multiplyByTenPow [object java/math/BigInteger] long )
  (move-result-object v8)
  (goto lb1e4c)
)

(method (attrs public ) divide([object java/math/BigDecimal] [object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 22)
  ; this: v19 ([object java/math/BigDecimal])
  ; parameter[0] : v20 ([object java/math/BigDecimal])
  ; parameter[1] : v21 ([object java/math/MathContext])
  (line 1362)
  (invoke-virtual-quick/range {v21}java/math/MathContext/getPrecision )
  (move-result v15)
  (int-to-long v15 v15)
  (const-wide/16 v17 2)
  (add-long v15 v15 v17)
  (invoke-direct/range {v20} java/math/BigDecimal/aproxPrecision )
  (move-result v17)
  (move/from16 v0 v17)
  (int-to-long v0 v0)
  (move-wide/from16 v17 v0)
  (add-long v15 v15 v17)
  (invoke-direct/range {v19} java/math/BigDecimal/aproxPrecision )
  (move-result v17)
  (move/from16 v0 v17)
  (int-to-long v0 v0)
  (move-wide/from16 v17 v0)
  (sub-long v13 v15 v17)
  (line 1364)
  (move-object/from16 v0 v19)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v15 v0)
  (int-to-long v15 v15)
  (move-object/from16 v0 v20)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move/from16 v17 v0)
  (move/from16 v0 v17)
  (int-to-long v0 v0)
  (move-wide/from16 v17 v0)
  (sub-long v5 v15 v17)
  (line 1365)
  (move-wide v10 v5)
  (line 1367)
  (const/4 v7 1)
  (line 1368)
  (sget-object v15 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (array-length v15 v15)
  (const/16 v16 1)
  (sub-int v9 v15 v16)
  (line 1370)
  (const/4 v15 1)
  (new-array v12 v15 [array [object java/math/BigInteger]])
  (const/4 v15 0)
  (invoke-direct/range {v19} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v16)
  (aput-object v16 v12 v15)
  (line 1372)
  (invoke-virtual-quick/range {v21}java/math/MathContext/getPrecision )
  (move-result v15)
  (if-eqz v15 lb1f2e)
  (invoke-direct/range {v19} java/math/BigDecimal/isZero )
  (move-result v15)
  (if-nez v15 lb1f2e)
  (invoke-direct/range {v20} java/math/BigDecimal/isZero )
  (move-result v15)
  (if-eqz v15 lb1f38)
  (label lb1f2e)
  (line 1374)
  (invoke-virtual-quick/range {v19 .. v20}java/math/BigDecimal/divide [object java/math/BigDecimal] )
  (move-result-object v15)
  (label lb1f36)
  (line 1411)
  (return-object v15)
  (label lb1f38)
  (line 1376)
  (const-wide/16 v15 0)
  (cmp-long v15 v13 v15)
  (if-lez v15 lb1f64)
  (line 1378)
  (const/4 v15 0)
  (invoke-direct/range {v19} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v16)
  (invoke-static {v13 v14} java/math/Multiplication/powerOf10 long )
  (move-result-object v17)
  (invoke-virtual-quick/range {v16 .. v17}java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v16)
  (aput-object v16 v12 v15)
  (line 1379)
  (add-long/2addr v10 v13)
  (label lb1f64)
  (line 1381)
  (const/4 v15 0)
  (aget-object v15 v12 v15)
  (invoke-direct/range {v20} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v16)
  (invoke-virtual-quick/range {v15 .. v16}java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v12)
  (line 1382)
  (const/4 v15 0)
  (aget-object v8 v12 v15)
  (line 1384)
  (const/4 v15 1)
  (aget-object v15 v12 v15)
  (invoke-virtual-quick {v15} java/math/BigInteger/signum )
  (move-result v15)
  (if-eqz v15 lb2014)
  (line 1386)
  (const/4 v15 1)
  (aget-object v15 v12 v15)
  (invoke-virtual-quick {v15} java/math/BigInteger/shiftLeftOneBit )
  (move-result-object v15)
  (invoke-direct/range {v20} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v16)
  (invoke-virtual-quick/range {v15 .. v16}java/math/BigInteger/compareTo [object java/math/BigInteger] )
  (move-result v4)
  (label lb1fb0)
  (line 1388)
  (sget-object v15 java/math/BigInteger.TEN [object java/math/BigInteger])
  (invoke-virtual-quick {v8 v15} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v15)
  (const/16 v16 0)
  (aget-object v16 v12 v16)
  (invoke-virtual-quick/range {v16}java/math/BigInteger/signum )
  (move-result v16)
  (add-int/lit8 v17 v4 5)
  (mul-int v16 v16 v17)
  (move/from16 v0 v16)
  (int-to-long v0 v0)
  (move-wide/from16 v16 v0)
  (invoke-static/range {v16 .. v17} java/math/BigInteger/valueOf long )
  (move-result-object v16)
  (invoke-virtual-quick/range {v15 .. v16}java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v8)
  (line 1390)
  (const-wide/16 v15 1)
  (add-long/2addr v10 v15)
  (label lb1ff4)
  (line 1411)
  (new-instance v15 java/math/BigDecimal)
  (invoke-static {v10 v11} java/math/BigDecimal/toIntScale long )
  (move-result v16)
  (move-object v0 v15)
  (move-object v1 v8)
  (move/from16 v2 v16)
  (move-object/from16 v3 v21)
  (invoke-direct {v0 v1 v2 v3} java/math/BigDecimal/<init> [object java/math/BigInteger] int [object java/math/MathContext] )
  (goto lb1f36)
  (label lb2014)
  (line 1393)
  (const/4 v15 0)
  (invoke-virtual-quick {v8 v15} java/math/BigInteger/testBit int )
  (move-result v15)
  (if-nez v15 lb1ff4)
  (line 1394)
  (sget-object v15 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (aget-object v15 v15 v7)
  (invoke-virtual-quick {v8 v15} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v12)
  (line 1395)
  (const/4 v15 1)
  (aget-object v15 v12 v15)
  (invoke-virtual-quick {v15} java/math/BigInteger/signum )
  (move-result v15)
  (if-nez v15 lb2066)
  (int-to-long v15 v7)
  (sub-long v15 v10 v15)
  (cmp-long v15 v15 v5)
  (if-ltz v15 lb2066)
  (line 1397)
  (int-to-long v15 v7)
  (sub-long/2addr v10 v15)
  (line 1398)
  (if-ge v7 v9 lb205e)
  (line 1399)
  (add-int/lit8 v7 v7 1)
  (label lb205e)
  (line 1401)
  (const/4 v15 0)
  (aget-object v8 v12 v15)
  (goto lb2014)
  (label lb2066)
  (line 1403)
  (const/4 v15 1)
  (if-eq v7 v15 lb1ff4)
  (line 1406)
  (const/4 v7 1)
  (goto lb2014)
)

(method (attrs public ) divide([object java/math/BigDecimal] [object java/math/RoundingMode] )[object java/math/BigDecimal]
  (limit registers 4)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/BigDecimal])
  ; parameter[1] : v3 ([object java/math/RoundingMode])
  (line 1259)
  (iget-quick v0 v1 java/math/BigDecimal.smallValue long)
  (invoke-virtual-quick {v1 v2 v0 v3} java/math/BigDecimal/divide [object java/math/BigDecimal] int [object java/math/RoundingMode] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) divideAndRemainder([object java/math/BigDecimal] )[array [object java/math/BigDecimal]]
  (limit registers 5)
  ; this: v3 ([object java/math/BigDecimal])
  ; parameter[0] : v4 ([object java/math/BigDecimal])
  (const/4 v2 0)
  (line 1652)
  (const/4 v1 2)
  (new-array v0 v1 [array [object java/math/BigDecimal]])
  (line 1654)
  (invoke-virtual-quick {v3 v4} java/math/BigDecimal/divideToIntegralValue [object java/math/BigDecimal] )
  (move-result-object v1)
  (aput-object v1 v0 v2)
  (line 1655)
  (const/4 v1 1)
  (aget-object v2 v0 v2)
  (invoke-virtual-quick {v2 v4} java/math/BigDecimal/multiply [object java/math/BigDecimal] )
  (move-result-object v2)
  (invoke-virtual-quick {v3 v2} java/math/BigDecimal/subtract [object java/math/BigDecimal] )
  (move-result-object v2)
  (aput-object v2 v0 v1)
  (line 1656)
  (return-object v0)
)

(method (attrs public ) divideAndRemainder([object java/math/BigDecimal] [object java/math/MathContext] )[array [object java/math/BigDecimal]]
  (limit registers 6)
  ; this: v3 ([object java/math/BigDecimal])
  ; parameter[0] : v4 ([object java/math/BigDecimal])
  ; parameter[1] : v5 ([object java/math/MathContext])
  (const/4 v2 0)
  (line 1682)
  (const/4 v1 2)
  (new-array v0 v1 [array [object java/math/BigDecimal]])
  (line 1684)
  (invoke-virtual-quick {v3 v4 v5} java/math/BigDecimal/divideToIntegralValue [object java/math/BigDecimal] [object java/math/MathContext] )
  (move-result-object v1)
  (aput-object v1 v0 v2)
  (line 1685)
  (const/4 v1 1)
  (aget-object v2 v0 v2)
  (invoke-virtual-quick {v2 v4} java/math/BigDecimal/multiply [object java/math/BigDecimal] )
  (move-result-object v2)
  (invoke-virtual-quick {v3 v2} java/math/BigDecimal/subtract [object java/math/BigDecimal] )
  (move-result-object v2)
  (aput-object v2 v0 v1)
  (line 1686)
  (return-object v0)
)

(method (attrs public ) divideToIntegralValue([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 18)
  ; this: v16 ([object java/math/BigDecimal])
  ; parameter[0] : v17 ([object java/math/BigDecimal])
  (line 1430)
  (const/4 v10 1)
  (new-array v7 v10 [array [object java/math/BigInteger]])
  (const/4 v10 0)
  (invoke-direct/range {v16} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v11)
  (aput-object v11 v7 v10)
  (line 1431)
  (move-object/from16 v0 v16)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v10 v0)
  (int-to-long v10 v10)
  (move-object/from16 v0 v17)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move v12 v0)
  (int-to-long v12 v12)
  (sub-long v4 v10 v12)
  (line 1432)
  (const-wide/16 v8 0)
  (line 1433)
  (const/4 v1 1)
  (line 1434)
  (sget-object v10 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (array-length v10 v10)
  (const/4 v11 1)
  (sub-int v3 v10 v11)
  (line 1436)
  (invoke-direct/range {v17} java/math/BigDecimal/isZero )
  (move-result v10)
  (if-eqz v10 lb2186)
  (line 1438)
  (new-instance v10 java/lang/ArithmeticException)
  (const-string v11 "math.04")
  (invoke-static {v11} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v11)
  (invoke-direct {v10 v11} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v10)
  (label lb2186)
  (line 1440)
  (invoke-direct/range {v17} java/math/BigDecimal/aproxPrecision )
  (move-result v10)
  (int-to-long v10 v10)
  (add-long/2addr v10 v4)
  (invoke-direct/range {v16} java/math/BigDecimal/aproxPrecision )
  (move-result v12)
  (int-to-long v12 v12)
  (const-wide/16 v14 1)
  (add-long/2addr v12 v14)
  (cmp-long v10 v10 v12)
  (if-gtz v10 lb21b6)
  (invoke-direct/range {v16} java/math/BigDecimal/isZero )
  (move-result v10)
  (if-eqz v10 lb21d0)
  (label lb21b6)
  (line 1444)
  (sget-object v2 java/math/BigInteger.ZERO [object java/math/BigInteger])
  (label lb21ba)
  (line 1473)
  (invoke-virtual-quick {v2} java/math/BigInteger/signum )
  (move-result v10)
  (if-nez v10 lb22be)
  (invoke-static {v4 v5} java/math/BigDecimal/zeroScaledBy long )
  (move-result-object v10)
  (label lb21ce)
  (return-object v10)
  (label lb21d0)
  (line 1445)
  (const-wide/16 v10 0)
  (cmp-long v10 v4 v10)
  (if-nez v10 lb21f6)
  (line 1446)
  (invoke-direct/range {v16} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v10)
  (invoke-direct/range {v17} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v11)
  (invoke-virtual-quick {v10 v11} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v2)
  (label lb21f4)
  (goto lb21ba)
  (label lb21f6)
  (line 1447)
  (const-wide/16 v10 0)
  (cmp-long v10 v4 v10)
  (if-lez v10 lb2234)
  (line 1448)
  (invoke-static {v4 v5} java/math/Multiplication/powerOf10 long )
  (move-result-object v6)
  (label lb220a)
  (line 1449)
  (invoke-direct/range {v16} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v10)
  (invoke-direct/range {v17} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v11)
  (invoke-virtual-quick {v11 v6} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v11)
  (invoke-virtual-quick {v10 v11} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v2)
  (label lb222a)
  (line 1450)
  (invoke-virtual-quick {v2 v6} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v2)
  (goto lb21ba)
  (label lb2234)
  (line 1452)
  (neg-long v10 v4)
  (invoke-static {v10 v11} java/math/Multiplication/powerOf10 long )
  (move-result-object v6)
  (label lb223e)
  (line 1453)
  (invoke-direct/range {v16} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v10)
  (invoke-virtual-quick {v10 v6} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v10)
  (invoke-direct/range {v17} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v11)
  (invoke-virtual-quick {v10 v11} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v2)
  (label lb225e)
  (line 1455)
  (const/4 v10 0)
  (invoke-virtual-quick {v2 v10} java/math/BigInteger/testBit int )
  (move-result v10)
  (if-nez v10 lb22b6)
  (line 1456)
  (sget-object v10 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (aget-object v10 v10 v1)
  (invoke-virtual-quick {v2 v10} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v7)
  (line 1457)
  (const/4 v10 1)
  (aget-object v10 v7 v10)
  (invoke-virtual-quick {v10} java/math/BigInteger/signum )
  (move-result v10)
  (if-nez v10 lb22b0)
  (int-to-long v10 v1)
  (sub-long v10 v8 v10)
  (cmp-long v10 v10 v4)
  (if-ltz v10 lb22b0)
  (line 1459)
  (int-to-long v10 v1)
  (sub-long/2addr v8 v10)
  (line 1460)
  (if-ge v1 v3 lb22a8)
  (line 1461)
  (add-int/lit8 v1 v1 1)
  (label lb22a8)
  (line 1463)
  (const/4 v10 0)
  (aget-object v2 v7 v10)
  (goto lb225e)
  (label lb22b0)
  (line 1465)
  (const/4 v10 1)
  (if-ne v1 v10 lb22ba)
  (label lb22b6)
  (line 1471)
  (move-wide v4 v8)
  (goto lb21ba)
  (label lb22ba)
  (line 1468)
  (const/4 v1 1)
  (goto lb225e)
  (label lb22be)
  (line 1473)
  (new-instance v10 java/math/BigDecimal)
  (invoke-static {v4 v5} java/math/BigDecimal/toIntScale long )
  (move-result v11)
  (invoke-direct {v10 v2 v11} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto/16 lb21ce)
)

(method (attrs public ) divideToIntegralValue([object java/math/BigDecimal] [object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 32)
  ; this: v29 ([object java/math/BigDecimal])
  ; parameter[0] : v30 ([object java/math/BigDecimal])
  ; parameter[1] : v31 ([object java/math/MathContext])
  (line 1500)
  (invoke-virtual-quick/range {v31}java/math/MathContext/getPrecision )
  (move-result v14)
  (line 1501)
  (invoke-virtual-quick/range {v29}java/math/BigDecimal/precision )
  (move-result v23)
  (invoke-virtual-quick/range {v30}java/math/BigDecimal/precision )
  (move-result v24)
  (sub-int v6 v23 v24)
  (line 1502)
  (sget-object v23 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (move-object/from16 v0 v23)
  (array-length v0 v0)
  (move/from16 v23 v0)
  (const/16 v24 1)
  (sub-int v13 v23 v24)
  (line 1503)
  (move-object/from16 v0 v29)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move/from16 v23 v0)
  (move/from16 v0 v23)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (move-object/from16 v0 v30)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move/from16 v25 v0)
  (move/from16 v0 v25)
  (int-to-long v0 v0)
  (move-wide/from16 v25 v0)
  (sub-long v7 v23 v25)
  (line 1504)
  (move-wide v15 v7)
  (line 1505)
  (move v0 v6)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (sub-long v23 v23 v7)
  (const-wide/16 v25 1)
  (add-long v18 v23 v25)
  (line 1506)
  (const/16 v23 2)
  (move/from16 v0 v23)
  (new-array v0 v0 [array [object java/math/BigInteger]])
  (move-object/from16 v17 v0)
  (line 1508)
  (if-eqz v14 lb2388)
  (invoke-direct/range {v29} java/math/BigDecimal/isZero )
  (move-result v23)
  (if-nez v23 lb2388)
  (invoke-direct/range {v30} java/math/BigDecimal/isZero )
  (move-result v23)
  (if-eqz v23 lb2392)
  (label lb2388)
  (line 1509)
  (invoke-virtual-quick/range {v29 .. v30}java/math/BigDecimal/divideToIntegralValue [object java/math/BigDecimal] )
  (move-result-object v23)
  (label lb2390)
  (line 1587)
  (return-object v23)
  (label lb2392)
  (line 1512)
  (const-wide/16 v23 0)
  (cmp-long v23 v18 v23)
  (if-gtz v23 lb23c8)
  (line 1513)
  (const/16 v23 0)
  (sget-object v24 java/math/BigInteger.ZERO [object java/math/BigInteger])
  (aput-object v24 v17 v23)
  (label lb23aa)
  (line 1554)
  (const/16 v23 0)
  (aget-object v23 v17 v23)
  (invoke-virtual-quick/range {v23}java/math/BigInteger/signum )
  (move-result v23)
  (if-nez v23 lb25bc)
  (line 1555)
  (invoke-static {v7 v8} java/math/BigDecimal/zeroScaledBy long )
  (move-result-object v23)
  (goto lb2390)
  (label lb23c8)
  (line 1514)
  (const-wide/16 v23 0)
  (cmp-long v23 v7 v23)
  (if-nez v23 lb23f6)
  (line 1516)
  (const/16 v23 0)
  (invoke-direct/range {v29} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v24)
  (invoke-direct/range {v30} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v25)
  (invoke-virtual-quick/range {v24 .. v25}java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v24)
  (aput-object v24 v17 v23)
  (goto lb23aa)
  (label lb23f6)
  (line 1517)
  (const-wide/16 v23 0)
  (cmp-long v23 v7 v23)
  (if-lez v23 lb2482)
  (line 1519)
  (const/16 v23 0)
  (invoke-direct/range {v29} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v24)
  (invoke-direct/range {v30} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v25)
  (invoke-static {v7 v8} java/math/Multiplication/powerOf10 long )
  (move-result-object v26)
  (invoke-virtual-quick/range {v25 .. v26}java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v25)
  (invoke-virtual-quick/range {v24 .. v25}java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v24)
  (aput-object v24 v17 v23)
  (line 1522)
  (move v0 v14)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (sub-long v23 v23 v18)
  (const-wide/16 v25 1)
  (add-long v23 v23 v25)
  (const-wide/16 v25 0)
  (invoke-static/range {v23 .. v26} java/lang/Math/max long long )
  (move-result-wide v23)
  (move-wide v0 v7)
  (move-wide/from16 v2 v23)
  (invoke-static {v0 v1 v2 v3} java/lang/Math/min long long )
  (move-result-wide v15)
  (line 1524)
  (const/16 v23 0)
  (const/16 v24 0)
  (aget-object v24 v17 v24)
  (invoke-static/range {v15 .. v16} java/math/Multiplication/powerOf10 long )
  (move-result-object v25)
  (invoke-virtual-quick/range {v24 .. v25}java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v24)
  (aput-object v24 v17 v23)
  (goto lb23aa)
  (label lb2482)
  (line 1528)
  (move-wide v0 v7)
  (neg-long v0 v0)
  (move-wide/from16 v23 v0)
  (move v0 v14)
  (int-to-long v0 v0)
  (move-wide/from16 v25 v0)
  (move v0 v6)
  (int-to-long v0 v0)
  (move-wide/from16 v27 v0)
  (sub-long v25 v25 v27)
  (const-wide/16 v27 0)
  (invoke-static/range {v25 .. v28} java/lang/Math/max long long )
  (move-result-wide v25)
  (invoke-static/range {v23 .. v26} java/lang/Math/min long long )
  (move-result-wide v9)
  (label lb24b2)
  (line 1531)
  (invoke-direct/range {v29} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v23)
  (invoke-static {v9 v10} java/math/Multiplication/powerOf10 long )
  (move-result-object v24)
  (invoke-virtual-quick/range {v23 .. v24}java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v23)
  (invoke-direct/range {v30} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v24)
  (invoke-virtual-quick/range {v23 .. v24}java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v17)
  (line 1533)
  (add-long/2addr v15 v9)
  (line 1534)
  (neg-long v9 v15)
  (line 1536)
  (const/16 v23 1)
  (aget-object v23 v17 v23)
  (invoke-virtual-quick/range {v23}java/math/BigInteger/signum )
  (move-result v23)
  (if-eqz v23 lb23aa)
  (const-wide/16 v23 0)
  (cmp-long v23 v9 v23)
  (if-lez v23 lb23aa)
  (line 1538)
  (new-instance v23 java/math/BigDecimal)
  (const/16 v24 1)
  (aget-object v24 v17 v24)
  (invoke-direct/range {v23 .. v24} java/math/BigDecimal/<init> [object java/math/BigInteger] )
  (invoke-virtual-quick/range {v23}java/math/BigDecimal/precision )
  (move-result v23)
  (move/from16 v0 v23)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (add-long v23 v23 v9)
  (invoke-virtual-quick/range {v30}java/math/BigDecimal/precision )
  (move-result v25)
  (move/from16 v0 v25)
  (int-to-long v0 v0)
  (move-wide/from16 v25 v0)
  (sub-long v4 v23 v25)
  (label lb253c)
  (line 1540)
  (const-wide/16 v23 0)
  (cmp-long v23 v4 v23)
  (if-nez v23 lb2598)
  (line 1542)
  (const/16 v23 1)
  (const/16 v24 1)
  (aget-object v24 v17 v24)
  (invoke-static {v9 v10} java/math/Multiplication/powerOf10 long )
  (move-result-object v25)
  (invoke-virtual-quick/range {v24 .. v25}java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v24)
  (invoke-direct/range {v30} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v25)
  (invoke-virtual-quick/range {v24 .. v25}java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v24)
  (aput-object v24 v17 v23)
  (line 1544)
  (const/16 v23 1)
  (aget-object v23 v17 v23)
  (invoke-virtual-quick/range {v23}java/math/BigInteger/signum )
  (move-result v23)
  (invoke-static/range {v23} java/lang/Math/abs int )
  (move-result v23)
  (move/from16 v0 v23)
  (int-to-long v0 v0)
  (move-wide v4 v0)
  (label lb2598)
  (line 1546)
  (const-wide/16 v23 0)
  (cmp-long v23 v4 v23)
  (if-lez v23 lb23aa)
  (line 1549)
  (new-instance v23 java/lang/ArithmeticException)
  (const-string v24 "math.06")
  (invoke-static/range {v24} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v24)
  (invoke-direct/range {v23 .. v24} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v23)
  (label lb25bc)
  (line 1557)
  (const/16 v23 0)
  (aget-object v22 v17 v23)
  (line 1558)
  (new-instance v12 java/math/BigDecimal)
  (const/16 v23 0)
  (aget-object v23 v17 v23)
  (move-object v0 v12)
  (move-object/from16 v1 v23)
  (invoke-direct {v0 v1} java/math/BigDecimal/<init> [object java/math/BigInteger] )
  (line 1559)
  (invoke-virtual-quick {v12} java/math/BigDecimal/precision )
  (move-result v23)
  (move/from16 v0 v23)
  (int-to-long v0 v0)
  (move-wide/from16 v20 v0)
  (line 1560)
  (const/4 v11 1)
  (label lb25f0)
  (line 1562)
  (const/16 v23 0)
  (invoke-virtual-quick/range {v22 .. v23}java/math/BigInteger/testBit int )
  (move-result v23)
  (if-nez v23 lb268c)
  (line 1563)
  (sget-object v23 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (aget-object v23 v23 v11)
  (invoke-virtual-quick/range {v22 .. v23}java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v17)
  (line 1564)
  (const/16 v23 1)
  (aget-object v23 v17 v23)
  (invoke-virtual-quick/range {v23}java/math/BigInteger/signum )
  (move-result v23)
  (if-nez v23 lb267e)
  (move v0 v11)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (sub-long v23 v20 v23)
  (move v0 v14)
  (int-to-long v0 v0)
  (move-wide/from16 v25 v0)
  (cmp-long v23 v23 v25)
  (if-gez v23 lb2654)
  (move v0 v11)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (sub-long v23 v15 v23)
  (cmp-long v23 v23 v7)
  (if-ltz v23 lb267e)
  (label lb2654)
  (line 1567)
  (move v0 v11)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (sub-long v20 v20 v23)
  (line 1568)
  (move v0 v11)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (sub-long v15 v15 v23)
  (line 1569)
  (if-ge v11 v13 lb2674)
  (line 1570)
  (add-int/lit8 v11 v11 1)
  (label lb2674)
  (line 1572)
  (const/16 v23 0)
  (aget-object v22 v17 v23)
  (goto lb25f0)
  (label lb267e)
  (line 1574)
  (const/16 v23 1)
  (move v0 v11)
  (move/from16 v1 v23)
  (if-ne v0 v1 lb26b4)
  (label lb268c)
  (line 1581)
  (move v0 v14)
  (int-to-long v0 v0)
  (move-wide/from16 v23 v0)
  (cmp-long v23 v20 v23)
  (if-lez v23 lb26b8)
  (line 1583)
  (new-instance v23 java/lang/ArithmeticException)
  (const-string v24 "math.06")
  (invoke-static/range {v24} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v24)
  (invoke-direct/range {v23 .. v24} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v23)
  (label lb26b4)
  (line 1577)
  (const/4 v11 1)
  (goto lb25f0)
  (label lb26b8)
  (line 1585)
  (invoke-static/range {v15 .. v16} java/math/BigDecimal/toIntScale long )
  (move-result v23)
  (move/from16 v0 v23)
  (move-object v1 v12)
  (iput-quick v0 v1 java/math/BigDecimal.smallValue long)
  (line 1586)
  (move-object v0 v12)
  (move-object/from16 v1 v22)
  (invoke-direct {v0 v1} java/math/BigDecimal/setUnscaledValue [object java/math/BigInteger] )
  (move-object/from16 v23 v12)
  (line 1587)
  (goto/16 lb2390)
)

(method (attrs public ) doubleValue()double
  (limit registers 24)
  ; this: v23 ([object java/math/BigDecimal])
  (line 2670)
  (invoke-virtual-quick/range {v23}java/math/BigDecimal/signum )
  (move-result v14)
  (line 2671)
  (const/16 v6 1076)
  (line 2674)
  (move-object/from16 v0 v23)
  (iget-quick v0 v0 java/math/BigDecimal.null)
  (move/from16 v17 v0)
  (move/from16 v0 v17)
  (int-to-long v0 v0)
  (move-wide/from16 v17 v0)
  (move-object/from16 v0 v23)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move/from16 v19 v0)
  (move/from16 v0 v19)
  (int-to-double v0 v0)
  (move-wide/from16 v19 v0)
  (const-wide v21 4599094494223104511) ; 0x3fd34413509f79ff)
  (div-double v19 v19 v21)
  (move-wide/from16 v0 v19)
  (double-to-long v0 v0)
  (move-wide/from16 v19 v0)
  (sub-long v11 v17 v19)
  (line 2679)
  (const-wide/16 v17 64462)
  (cmp-long v17 v11 v17)
  (if-ltz v17 lb2754)
  (if-nez v14 lb2766)
  (label lb2754)
  (line 2681)
  (move v0 v14)
  (int-to-double v0 v0)
  (move-wide/from16 v17 v0)
  (const-wide/16 v19 0)
  (mul-double v17 v17 v19)
  (label lb2764)
  (line 2766)
  (return-wide v17)
  (label lb2766)
  (line 2682)
  (const-wide/16 v17 1025)
  (cmp-long v17 v11 v17)
  (if-lez v17 lb2784)
  (line 2684)
  (move v0 v14)
  (int-to-double v0 v0)
  (move-wide/from16 v17 v0)
  (const-wide/high16 v19 32752)
  (mul-double v17 v17 v19)
  (goto lb2764)
  (label lb2784)
  (line 2686)
  (invoke-direct/range {v23} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v17)
  (invoke-virtual-quick/range {v17}java/math/BigInteger/abs )
  (move-result-object v9)
  (line 2688)
  (move-object/from16 v0 v23)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move/from16 v17 v0)
  (if-gtz v17 lb287c)
  (line 2690)
  (move-object/from16 v0 v23)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move/from16 v17 v0)
  (move/from16 v0 v17)
  (neg-int v0 v0)
  (move/from16 v17 v0)
  (move/from16 v0 v17)
  (int-to-long v0 v0)
  (move-wide/from16 v17 v0)
  (invoke-static/range {v17 .. v18} java/math/Multiplication/powerOf10 long )
  (move-result-object v17)
  (move-object v0 v9)
  (move-object/from16 v1 v17)
  (invoke-virtual-quick {v0 v1} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v9)
  (label lb27da)
  (line 2712)
  (invoke-virtual-quick {v9} java/math/BigInteger/getLowestSetBit )
  (move-result v8)
  (label lb27e2)
  (line 2713)
  (invoke-virtual-quick {v9} java/math/BigInteger/bitLength )
  (move-result v17)
  (const/16 v18 54)
  (sub-int v5 v17 v18)
  (label lb27f2)
  (line 2714)
  (if-lez v5 lb2924)
  (line 2716)
  (invoke-virtual-quick {v9 v5} java/math/BigInteger/shiftRight int )
  (move-result-object v17)
  (invoke-virtual-quick/range {v17}java/math/BigInteger/longValue )
  (move-result-wide v2)
  (label lb2806)
  (line 2717)
  (move-wide v15 v2)
  (label lb2808)
  (line 2719)
  (const-wide/16 v17 1)
  (and-long v17 v17 v2)
  (const-wide/16 v19 1)
  (cmp-long v17 v17 v19)
  (if-nez v17 lb2820)
  (if-lt v8 v5 lb2834)
  (label lb2820)
  (const-wide/16 v17 3)
  (and-long v17 v17 v2)
  (const-wide/16 v19 3)
  (cmp-long v17 v17 v19)
  (if-nez v17 lb283c)
  (label lb2834)
  (line 2721)
  (const-wide/16 v17 2)
  (add-long v2 v2 v17)
  (label lb283c)
  (line 2733)
  (const-wide/high16 v17 64)
  (and-long v17 v17 v2)
  (const-wide/16 v19 0)
  (cmp-long v17 v17 v19)
  (if-nez v17 lb295a)
  (line 2735)
  (const/16 v17 1)
  (shr-long v2 v2 v17)
  (line 2737)
  (add-int/2addr v6 v5)
  (label lb285a)
  (line 2743)
  (const/16 v17 2046)
  (move v0 v6)
  (move/from16 v1 v17)
  (if-le v0 v1 lb296e)
  (line 2744)
  (move v0 v14)
  (int-to-double v0 v0)
  (move-wide/from16 v17 v0)
  (const-wide/high16 v19 32752)
  (mul-double v17 v17 v19)
  (goto/16 lb2764)
  (label lb287c)
  (line 2693)
  (move-object/from16 v0 v23)
  (iget-quick v0 v0 java/math/BigDecimal.smallValue long)
  (move/from16 v17 v0)
  (move/from16 v0 v17)
  (int-to-long v0 v0)
  (move-wide/from16 v17 v0)
  (invoke-static/range {v17 .. v18} java/math/Multiplication/powerOf10 long )
  (move-result-object v10)
  (label lb289a)
  (line 2694)
  (const/16 v17 100)
  (move-wide v0 v11)
  (long-to-int v0 v0)
  (move/from16 v18 v0)
  (sub-int v7 v17 v18)
  (label lb28aa)
  (line 2697)
  (if-lez v7 lb28b8)
  (line 2700)
  (invoke-virtual-quick {v9 v7} java/math/BigInteger/shiftLeft int )
  (move-result-object v9)
  (line 2701)
  (sub-int/2addr v6 v7)
  (label lb28b8)
  (line 2704)
  (invoke-virtual-quick {v9 v10} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v13)
  (label lb28c0)
  (line 2706)
  (const/16 v17 1)
  (aget-object v17 v13 v17)
  (invoke-virtual-quick/range {v17}java/math/BigInteger/shiftLeftOneBit )
  (move-result-object v17)
  (move-object/from16 v0 v17)
  (move-object v1 v10)
  (invoke-virtual-quick {v0 v1} java/math/BigInteger/compareTo [object java/math/BigInteger] )
  (move-result v4)
  (label lb28de)
  (line 2708)
  (const/16 v17 0)
  (aget-object v17 v13 v17)
  (const/16 v18 2)
  (invoke-virtual-quick/range {v17 .. v18}java/math/BigInteger/shiftLeft int )
  (move-result-object v17)
  (add-int/lit8 v18 v4 3)
  (mul-int v18 v18 v4)
  (div-int/lit8 v18 v18 2)
  (add-int/lit8 v18 v18 1)
  (move/from16 v0 v18)
  (int-to-long v0 v0)
  (move-wide/from16 v18 v0)
  (invoke-static/range {v18 .. v19} java/math/BigInteger/valueOf long )
  (move-result-object v18)
  (invoke-virtual-quick/range {v17 .. v18}java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v9)
  (line 2710)
  (add-int/lit8 v6 v6 254)
  (goto/16 lb27da)
  (label lb2924)
  (line 2725)
  (invoke-virtual-quick {v9} java/math/BigInteger/longValue )
  (move-result-wide v17)
  (move v0 v5)
  (neg-int v0 v0)
  (move/from16 v19 v0)
  (shl-long v2 v17 v19)
  (line 2726)
  (move-wide v15 v2)
  (line 2728)
  (const-wide/16 v17 3)
  (and-long v17 v17 v2)
  (const-wide/16 v19 3)
  (cmp-long v17 v17 v19)
  (if-nez v17 lb283c)
  (line 2729)
  (const-wide/16 v17 2)
  (add-long v2 v2 v17)
  (goto/16 lb283c)
  (label lb295a)
  (line 2739)
  (const/16 v17 2)
  (shr-long v2 v2 v17)
  (line 2740)
  (add-int/lit8 v17 v5 1)
  (add-int v6 v6 v17)
  (goto/16 lb285a)
  (label lb296e)
  (line 2745)
  (if-gtz v6 lb2a02)
  (line 2747)
  (const/16 v17 65483)
  (move v0 v6)
  (move/from16 v1 v17)
  (if-ge v0 v1 lb2994)
  (line 2748)
  (move v0 v14)
  (int-to-double v0 v0)
  (move-wide/from16 v17 v0)
  (const-wide/16 v19 0)
  (mul-double v17 v17 v19)
  (goto/16 lb2764)
  (label lb2994)
  (line 2752)
  (const/16 v17 1)
  (shr-long v2 v15 v17)
  (line 2753)
  (const-wide/16 v17 65535)
  (add-int/lit8 v19 v6 63)
  (ushr-long v17 v17 v19)
  (and-long v15 v2 v17)
  (line 2754)
  (move v0 v6)
  (neg-int v0 v0)
  (move/from16 v17 v0)
  (shr-long v2 v2 v17)
  (line 2756)
  (const-wide/16 v17 3)
  (and-long v17 v17 v2)
  (const-wide/16 v19 3)
  (cmp-long v17 v17 v19)
  (if-eqz v17 lb29f0)
  (const-wide/16 v17 1)
  (and-long v17 v17 v2)
  (const-wide/16 v19 1)
  (cmp-long v17 v17 v19)
  (if-nez v17 lb29f8)
  (const-wide/16 v17 0)
  (cmp-long v17 v15 v17)
  (if-eqz v17 lb29f8)
  (if-ge v8 v5 lb29f8)
  (label lb29f0)
  (line 2758)
  (const-wide/16 v17 1)
  (add-long v2 v2 v17)
  (label lb29f8)
  (line 2760)
  (const/4 v6 0)
  (line 2761)
  (const/16 v17 1)
  (shr-long v2 v2 v17)
  (label lb2a02)
  (line 2764)
  (move v0 v14)
  (int-to-long v0 v0)
  (move-wide/from16 v17 v0)
  (const-wide/high16 v19 32768)
  (and-long v17 v17 v19)
  (move v0 v6)
  (int-to-long v0 v0)
  (move-wide/from16 v19 v0)
  (const/16 v21 52)
  (shl-long v19 v19 v21)
  (or-long v17 v17 v19)
  (const-wide v19 4503599627370495) ; 0xfffffffffffff)
  (and-long v19 v19 v2)
  (or-long v2 v17 v19)
  (line 2766)
  (invoke-static {v2 v3} java/lang/Double/longBitsToDouble long )
  (move-result-wide v17)
  (goto/16 lb2764)
)

(method (attrs public ) equals([object java/lang/Object] )boolean
  (limit registers 10)
  ; this: v8 ([object java/math/BigDecimal])
  ; parameter[0] : v9 ([object java/lang/Object])
  (const/4 v7 1)
  (const/4 v6 0)
  (line 2242)
  (if-ne v8 v9 lb2a60)
  (move v2 v7)
  (label lb2a5e)
  (line 2253)
  (return v2)
  (label lb2a60)
  (line 2245)
  (instance-of v2 v9 java/math/BigDecimal)
  (if-eqz v2 lb2ab4)
  (line 2246)
  (move-object v0 v9)
  (check-cast v0 [object java/math/BigDecimal])
  (move-object v1 v0)
  (label lb2a70)
  (line 2247)
  (iget-quick v2 v1 java/math/BigDecimal.smallValue long)
  (iget-quick v3 v8 java/math/BigDecimal.smallValue long)
  (if-ne v2 v3 lb2ab0)
  (iget-quick v2 v8 java/math/BigDecimal.null)
  (const/16 v3 64)
  (if-ge v2 v3 lb2a9c)
  (iget-wide-quick v2 v1 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v4 v8 java/math/BigDecimal.hashCode int)
  (cmp-long v2 v2 v4)
  (if-nez v2 lb2ab0)
  (label lb2a98)
  (move v2 v7)
  (goto lb2a5e)
  (label lb2a9c)
  (iget-object-quick v2 v8 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (iget-object-quick v3 v1 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (invoke-virtual-quick {v2 v3} java/math/BigInteger/equals [object java/lang/Object] )
  (move-result v2)
  (if-nez v2 lb2a98)
  (label lb2ab0)
  (move v2 v6)
  (goto lb2a5e)
  (label lb2ab4)
  (move v2 v6)
  (line 2253)
  (goto lb2a5e)
)

(method (attrs public ) floatValue()float
  (limit registers 11)
  ; this: v10 ([object java/math/BigDecimal])
  (const/4 v9 0)
  (line 2635)
  (invoke-virtual-quick {v10} java/math/BigDecimal/signum )
  (move-result v3)
  (int-to-float v0 v3)
  (line 2636)
  (iget-quick v3 v10 java/math/BigDecimal.null)
  (int-to-long v3 v3)
  (iget-quick v5 v10 java/math/BigDecimal.smallValue long)
  (int-to-double v5 v5)
  (const-wide v7 4599094494223104511) ; 0x3fd34413509f79ff)
  (div-double/2addr v5 v7)
  (double-to-long v5 v5)
  (sub-long v1 v3 v5)
  (line 2637)
  (const-wide/16 v3 65387)
  (cmp-long v3 v1 v3)
  (if-ltz v3 lb2b06)
  (cmpl-float v3 v0 v9)
  (if-nez v3 lb2b0a)
  (label lb2b06)
  (line 2639)
  (mul-float/2addr v0 v9)
  (label lb2b08)
  (line 2646)
  (return v0)
  (label lb2b0a)
  (line 2640)
  (const-wide/16 v3 129)
  (cmp-long v3 v1 v3)
  (if-lez v3 lb2b1e)
  (line 2642)
  (const/high16 v3 32640)
  (mul-float/2addr v0 v3)
  (goto lb2b08)
  (label lb2b1e)
  (line 2644)
  (invoke-virtual-quick {v10} java/math/BigDecimal/doubleValue )
  (move-result-wide v3)
  (double-to-float v0 v3)
  (goto lb2b08)
)

(method (attrs public ) hashCode()int
  (limit registers 7)
  ; this: v6 ([object java/math/BigDecimal])
  (const-wide/16 v4 65535)
  (line 2289)
  (iget-quick v0 v6 java/math/BigDecimal.bitLength int)
  (if-eqz v0 lb2b4e)
  (line 2290)
  (iget-quick v0 v6 java/math/BigDecimal.bitLength int)
  (label lb2b4c)
  (line 2299)
  (return v0)
  (label lb2b4e)
  (line 2292)
  (iget-quick v0 v6 java/math/BigDecimal.null)
  (const/16 v1 64)
  (if-ge v0 v1 lb2b9a)
  (line 2293)
  (iget-wide-quick v0 v6 java/math/BigDecimal.hashCode int)
  (and-long/2addr v0 v4)
  (long-to-int v0 v0)
  (iput-quick v0 v6 java/math/BigDecimal.bitLength int)
  (line 2294)
  (iget-quick v0 v6 java/math/BigDecimal.bitLength int)
  (mul-int/lit8 v0 v0 33)
  (iget-wide-quick v1 v6 java/math/BigDecimal.hashCode int)
  (const/16 v3 32)
  (shr-long/2addr v1 v3)
  (and-long/2addr v1 v4)
  (long-to-int v1 v1)
  (add-int/2addr v0 v1)
  (iput-quick v0 v6 java/math/BigDecimal.bitLength int)
  (line 2295)
  (iget-quick v0 v6 java/math/BigDecimal.bitLength int)
  (mul-int/lit8 v0 v0 17)
  (iget-quick v1 v6 java/math/BigDecimal.smallValue long)
  (add-int/2addr v0 v1)
  (iput-quick v0 v6 java/math/BigDecimal.bitLength int)
  (line 2296)
  (iget-quick v0 v6 java/math/BigDecimal.bitLength int)
  (goto lb2b4c)
  (label lb2b9a)
  (line 2298)
  (iget-object-quick v0 v6 java/math/BigDecimal.intVal [object java/math/BigInteger])
  (invoke-virtual-quick {v0} java/math/BigInteger/hashCode )
  (move-result v0)
  (mul-int/lit8 v0 v0 17)
  (iget-quick v1 v6 java/math/BigDecimal.smallValue long)
  (add-int/2addr v0 v1)
  (iput-quick v0 v6 java/math/BigDecimal.bitLength int)
  (line 2299)
  (iget-quick v0 v6 java/math/BigDecimal.bitLength int)
  (goto lb2b4c)
)

(method (attrs public ) intValue()int
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 2568)
  (iget-quick v0 v2 java/math/BigDecimal.smallValue long)
  (const/16 v1 65504)
  (if-le v0 v1 lb2be8)
  (iget-quick v0 v2 java/math/BigDecimal.smallValue long)
  (invoke-direct {v2} java/math/BigDecimal/aproxPrecision )
  (move-result v1)
  (if-le v0 v1 lb2bec)
  (label lb2be8)
  (const/4 v0 0)
  (label lb2bea)
  (return v0)
  (label lb2bec)
  (invoke-virtual-quick {v2} java/math/BigDecimal/toBigInteger )
  (move-result-object v0)
  (invoke-virtual-quick {v0} java/math/BigInteger/intValue )
  (move-result v0)
  (goto lb2bea)
)

(method (attrs public ) intValueExact()int
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 2583)
  (const/16 v0 32)
  (invoke-direct {v2 v0} java/math/BigDecimal/valueExact int )
  (move-result-wide v0)
  (long-to-int v0 v0)
  (return v0)
)

(method (attrs public ) longValue()long
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 2537)
  (iget-quick v0 v2 java/math/BigDecimal.smallValue long)
  (const/16 v1 65472)
  (if-le v0 v1 lb2c4c)
  (iget-quick v0 v2 java/math/BigDecimal.smallValue long)
  (invoke-direct {v2} java/math/BigDecimal/aproxPrecision )
  (move-result v1)
  (if-le v0 v1 lb2c52)
  (label lb2c4c)
  (const-wide/16 v0 0)
  (label lb2c50)
  (return-wide v0)
  (label lb2c52)
  (invoke-virtual-quick {v2} java/math/BigDecimal/toBigInteger )
  (move-result-object v0)
  (invoke-virtual-quick {v0} java/math/BigInteger/longValue )
  (move-result-wide v0)
  (goto lb2c50)
)

(method (attrs public ) longValueExact()long
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 2551)
  (const/16 v0 64)
  (invoke-direct {v2 v0} java/math/BigDecimal/valueExact int )
  (move-result-wide v0)
  (return-wide v0)
)

(method (attrs public ) max([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/BigDecimal])
  (line 2279)
  (invoke-virtual-quick {v1 v2} java/math/BigDecimal/compareTo [object java/math/BigDecimal] )
  (move-result v0)
  (if-ltz v0 lb2ca4)
  (move-object v0 v1)
  (label lb2ca2)
  (return-object v0)
  (label lb2ca4)
  (move-object v0 v2)
  (goto lb2ca2)
)

(method (attrs public ) min([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/BigDecimal])
  (line 2266)
  (invoke-virtual-quick {v1 v2} java/math/BigDecimal/compareTo [object java/math/BigDecimal] )
  (move-result v0)
  (if-gtz v0 lb2cc8)
  (move-object v0 v1)
  (label lb2cc6)
  (return-object v0)
  (label lb2cc8)
  (move-object v0 v2)
  (goto lb2cc6)
)

(method (attrs public ) movePointLeft(int )[object java/math/BigDecimal]
  (limit registers 6)
  ; this: v4 ([object java/math/BigDecimal])
  ; parameter[0] : v5 (int)
  (line 2068)
  (iget-quick v0 v4 java/math/BigDecimal.smallValue long)
  (int-to-long v0 v0)
  (int-to-long v2 v5)
  (add-long/2addr v0 v2)
  (invoke-direct {v4 v0 v1} java/math/BigDecimal/movePoint long )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) movePointRight(int )[object java/math/BigDecimal]
  (limit registers 6)
  ; this: v4 ([object java/math/BigDecimal])
  ; parameter[0] : v5 (int)
  (line 2109)
  (iget-quick v0 v4 java/math/BigDecimal.smallValue long)
  (int-to-long v0 v0)
  (int-to-long v2 v5)
  (sub-long/2addr v0 v2)
  (invoke-direct {v4 v0 v1} java/math/BigDecimal/movePoint long )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) multiply([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 8)
  ; this: v6 ([object java/math/BigDecimal])
  ; parameter[0] : v7 ([object java/math/BigDecimal])
  (line 1025)
  (iget-quick v2 v6 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v2)
  (iget-quick v4 v7 java/math/BigDecimal.smallValue long)
  (int-to-long v4 v4)
  (add-long v0 v2 v4)
  (line 1027)
  (invoke-direct {v6} java/math/BigDecimal/isZero )
  (move-result v2)
  (if-nez v2 lb2d4c)
  (invoke-direct {v7} java/math/BigDecimal/isZero )
  (move-result v2)
  (if-eqz v2 lb2d56)
  (label lb2d4c)
  (line 1028)
  (invoke-static {v0 v1} java/math/BigDecimal/zeroScaledBy long )
  (move-result-object v2)
  (label lb2d54)
  (line 1035)
  (return-object v2)
  (label lb2d56)
  (line 1032)
  (iget-quick v2 v6 java/math/BigDecimal.null)
  (iget-quick v3 v7 java/math/BigDecimal.null)
  (add-int/2addr v2 v3)
  (const/16 v3 64)
  (if-ge v2 v3 lb2d84)
  (line 1033)
  (iget-wide-quick v2 v6 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v4 v7 java/math/BigDecimal.hashCode int)
  (mul-long/2addr v2 v4)
  (invoke-static {v0 v1} java/math/BigDecimal/toIntScale long )
  (move-result v4)
  (invoke-static {v2 v3 v4} java/math/BigDecimal/valueOf long int )
  (move-result-object v2)
  (goto lb2d54)
  (label lb2d84)
  (line 1035)
  (new-instance v2 java/math/BigDecimal)
  (invoke-direct {v6} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v3)
  (invoke-direct {v7} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v4)
  (invoke-virtual-quick {v3 v4} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v3)
  (invoke-static {v0 v1} java/math/BigDecimal/toIntScale long )
  (move-result v4)
  (invoke-direct {v2 v3 v4} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb2d54)
)

(method (attrs public ) multiply([object java/math/BigDecimal] [object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 4)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/BigDecimal])
  ; parameter[1] : v3 ([object java/math/MathContext])
  (line 1053)
  (invoke-virtual-quick {v1 v2} java/math/BigDecimal/multiply [object java/math/BigDecimal] )
  (move-result-object v0)
  (line 1055)
  (invoke-direct {v0 v3} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 1056)
  (return-object v0)
)

(method (attrs public ) negate()[object java/math/BigDecimal]
  (limit registers 5)
  ; this: v4 ([object java/math/BigDecimal])
  (const/16 v1 63)
  (line 1810)
  (iget-quick v0 v4 java/math/BigDecimal.null)
  (if-lt v0 v1 lb2e04)
  (iget-quick v0 v4 java/math/BigDecimal.null)
  (if-ne v0 v1 lb2e18)
  (iget-wide-quick v0 v4 java/math/BigDecimal.hashCode int)
  (const-wide/high16 v2 32768)
  (cmp-long v0 v0 v2)
  (if-eqz v0 lb2e18)
  (label lb2e04)
  (line 1811)
  (iget-wide-quick v0 v4 java/math/BigDecimal.hashCode int)
  (neg-long v0 v0)
  (iget-quick v2 v4 java/math/BigDecimal.smallValue long)
  (invoke-static {v0 v1 v2} java/math/BigDecimal/valueOf long int )
  (move-result-object v0)
  (label lb2e16)
  (line 1813)
  (return-object v0)
  (label lb2e18)
  (new-instance v0 java/math/BigDecimal)
  (invoke-direct {v4} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (invoke-virtual-quick {v1} java/math/BigInteger/negate )
  (move-result-object v1)
  (iget-quick v2 v4 java/math/BigDecimal.smallValue long)
  (invoke-direct {v0 v1 v2} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb2e16)
)

(method (attrs public ) negate([object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/MathContext])
  (line 1826)
  (invoke-virtual-quick {v1} java/math/BigDecimal/negate )
  (move-result-object v0)
  (line 1827)
  (invoke-direct {v0 v2} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 1828)
  (return-object v0)
)

(method (attrs public ) plus()[object java/math/BigDecimal]
  (limit registers 1)
  ; this: v0 ([object java/math/BigDecimal])
  (line 1839)
  (return-object v0)
)

(method (attrs public ) plus([object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 ([object java/math/MathContext])
  (line 1851)
  (invoke-virtual-quick {v1 v2} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) pow(int )[object java/math/BigDecimal]
  (limit registers 8)
  ; this: v6 ([object java/math/BigDecimal])
  ; parameter[0] : v7 (int)
  (line 1705)
  (if-nez v7 lb2ea2)
  (line 1706)
  (sget-object v2 java/math/BigDecimal.ONE [object java/math/BigDecimal])
  (label lb2ea0)
  (line 1714)
  (return-object v2)
  (label lb2ea2)
  (line 1708)
  (if-ltz v7 lb2eb0)
  (const v2 999999999) ; 0x3b9ac9ff)
  (if-le v7 v2 lb2ec8)
  (label lb2eb0)
  (line 1710)
  (new-instance v2 java/lang/ArithmeticException)
  (const-string v3 "math.07")
  (invoke-static {v3} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v3)
  (invoke-direct {v2 v3} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v2)
  (label lb2ec8)
  (line 1712)
  (iget-quick v2 v6 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v2)
  (int-to-long v4 v7)
  (mul-long v0 v2 v4)
  (line 1714)
  (invoke-direct {v6} java/math/BigDecimal/isZero )
  (move-result v2)
  (if-eqz v2 lb2eea)
  (invoke-static {v0 v1} java/math/BigDecimal/zeroScaledBy long )
  (move-result-object v2)
  (goto lb2ea0)
  (label lb2eea)
  (new-instance v2 java/math/BigDecimal)
  (invoke-direct {v6} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v3)
  (invoke-virtual-quick {v3 v7} java/math/BigInteger/pow int )
  (move-result-object v3)
  (invoke-static {v0 v1} java/math/BigDecimal/toIntScale long )
  (move-result v4)
  (invoke-direct {v2 v3 v4} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb2ea0)
)

(method (attrs public ) pow(int [object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 11)
  ; this: v8 ([object java/math/BigDecimal])
  ; parameter[0] : v9 (int)
  ; parameter[1] : v10 ([object java/math/MathContext])
  (line 1736)
  (execute-inline {v9} Ljava/lang/Math/abs int )
  (move-result v2)
  (line 1737)
  (invoke-virtual-quick {v10} java/math/MathContext/getPrecision )
  (move-result v3)
  (line 1738)
  (int-to-double v6 v2)
  (invoke-static {v6 v7} java/lang/Math/log10 double )
  (move-result-wide v6)
  (double-to-int v6 v6)
  (add-int/lit8 v1 v6 1)
  (line 1741)
  (move-object v4 v10)
  (label lb2f42)
  (line 1744)
  (if-eqz v9 lb2f56)
  (invoke-direct {v8} java/math/BigDecimal/isZero )
  (move-result v6)
  (if-eqz v6 lb2f60)
  (if-lez v9 lb2f60)
  (label lb2f56)
  (line 1745)
  (invoke-virtual-quick {v8 v9} java/math/BigDecimal/pow int )
  (move-result-object v6)
  (label lb2f5e)
  (line 1773)
  (return-object v6)
  (label lb2f60)
  (line 1747)
  (const v6 999999999) ; 0x3b9ac9ff)
  (if-gt v2 v6 lb2f7a)
  (if-nez v3 lb2f72)
  (if-ltz v9 lb2f7a)
  (label lb2f72)
  (if-lez v3 lb2f92)
  (if-le v1 v3 lb2f92)
  (label lb2f7a)
  (line 1750)
  (new-instance v6 java/lang/ArithmeticException)
  (const-string v7 "math.07")
  (invoke-static {v7} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v7)
  (invoke-direct {v6 v7} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v6)
  (label lb2f92)
  (line 1752)
  (if-lez v3 lb2fb0)
  (line 1753)
  (new-instance v4 java/math/MathContext)
  (label lb2f9a)
  (add-int v6 v3 v1)
  (add-int/lit8 v6 v6 1)
  (invoke-virtual-quick {v10} java/math/MathContext/getRoundingMode )
  (move-result-object v7)
  (invoke-direct {v4 v6 v7} java/math/MathContext/<init> int [object java/math/RoundingMode] )
  (label lb2fb0)
  (line 1757)
  (invoke-virtual-quick {v8 v4} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v0)
  (line 1758)
  (invoke-static {v2} java/lang/Integer/highestOneBit int )
  (move-result v6)
  (shr-int/lit8 v5 v6 1)
  (label lb2fc4)
  (line 1760)
  (if-lez v5 lb2fe6)
  (line 1761)
  (invoke-virtual-quick {v0 v0 v4} java/math/BigDecimal/multiply [object java/math/BigDecimal] [object java/math/MathContext] )
  (move-result-object v0)
  (line 1762)
  (and-int v6 v2 v5)
  (if-ne v6 v5 lb2fe0)
  (line 1763)
  (invoke-virtual-quick {v0 v8 v4} java/math/BigDecimal/multiply [object java/math/BigDecimal] [object java/math/MathContext] )
  (move-result-object v0)
  (label lb2fe0)
  (line 1765)
  (shr-int/lit8 v5 v5 1)
  (goto lb2fc4)
  (label lb2fe6)
  (line 1768)
  (if-gez v9 lb2ff6)
  (line 1769)
  (sget-object v6 java/math/BigDecimal.ONE [object java/math/BigDecimal])
  (invoke-virtual-quick {v6 v0 v4} java/math/BigDecimal/divide [object java/math/BigDecimal] [object java/math/MathContext] )
  (move-result-object v0)
  (label lb2ff6)
  (line 1772)
  (invoke-direct {v0 v10} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (move-object v6 v0)
  (line 1773)
  (goto lb2f5e)
)

(method (attrs public ) precision()int
  (limit registers 11)
  ; this: v10 ([object java/math/BigDecimal])
  (const/4 v6 1)
  (line 1894)
  (iget-quick v4 v10 java/math/BigDecimal.scale int)
  (if-lez v4 lb3020)
  (line 1895)
  (iget-quick v4 v10 java/math/BigDecimal.scale int)
  (label lb301e)
  (line 1919)
  (return v4)
  (label lb3020)
  (line 1897)
  (iget-quick v0 v10 java/math/BigDecimal.null)
  (line 1898)
  (const/4 v1 1)
  (line 1899)
  (const-wide/high16 v2 16368)
  (line 1901)
  (const/16 v4 1024)
  (if-ge v0 v4 lb3076)
  (line 1903)
  (const/16 v4 64)
  (if-lt v0 v4 lb306a)
  (line 1904)
  (invoke-direct {v10} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v4)
  (invoke-virtual-quick {v4} java/math/BigInteger/doubleValue )
  (move-result-wide v2)
  (label lb304a)
  (line 1908)
  (int-to-double v4 v1)
  (execute-inline {v2 v3} Ljava/lang/Math/abs double )
  (move-result-wide v6)
  (invoke-static {v6 v7} java/lang/Math/log10 double )
  (move-result-wide v6)
  (add-double/2addr v4 v6)
  (double-to-int v1 v4)
  (label lb3060)
  (line 1918)
  (iput-quick v1 v10 java/math/BigDecimal.scale int)
  (line 1919)
  (iget-quick v4 v10 java/math/BigDecimal.scale int)
  (goto lb301e)
  (label lb306a)
  (line 1905)
  (if-lt v0 v6 lb304a)
  (line 1906)
  (iget-wide-quick v4 v10 java/math/BigDecimal.hashCode int)
  (long-to-double v2 v4)
  (goto lb304a)
  (label lb3076)
  (line 1912)
  (int-to-double v4 v1)
  (sub-int v6 v0 v6)
  (int-to-double v6 v6)
  (const-wide v8 4599094494223104511) ; 0x3fd34413509f79ff)
  (mul-double/2addr v6 v8)
  (add-double/2addr v4 v6)
  (double-to-int v1 v4)
  (line 1914)
  (invoke-direct {v10} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v4)
  (int-to-long v5 v1)
  (invoke-static {v5 v6} java/math/Multiplication/powerOf10 long )
  (move-result-object v5)
  (invoke-virtual-quick {v4 v5} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v4)
  (invoke-virtual-quick {v4} java/math/BigInteger/signum )
  (move-result v4)
  (if-eqz v4 lb3060)
  (line 1915)
  (add-int/lit8 v1 v1 1)
  (goto lb3060)
)

(method (attrs public ) remainder([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 4)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([object java/math/BigDecimal])
  (line 1605)
  (invoke-virtual-quick {v2 v3} java/math/BigDecimal/divideAndRemainder [object java/math/BigDecimal] )
  (move-result-object v0)
  (const/4 v1 1)
  (aget-object v0 v0 v1)
  (return-object v0)
)

(method (attrs public ) remainder([object java/math/BigDecimal] [object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 5)
  ; this: v2 ([object java/math/BigDecimal])
  ; parameter[0] : v3 ([object java/math/BigDecimal])
  ; parameter[1] : v4 ([object java/math/MathContext])
  (line 1631)
  (invoke-virtual-quick {v2 v3 v4} java/math/BigDecimal/divideAndRemainder [object java/math/BigDecimal] [object java/math/MathContext] )
  (move-result-object v0)
  (const/4 v1 1)
  (aget-object v0 v0 v1)
  (return-object v0)
)

(method (attrs public ) round([object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 5)
  ; this: v3 ([object java/math/BigDecimal])
  ; parameter[0] : v4 ([object java/math/MathContext])
  (line 1952)
  (new-instance v0 java/math/BigDecimal)
  (invoke-direct {v3} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (iget-quick v2 v3 java/math/BigDecimal.smallValue long)
  (invoke-direct {v0 v1 v2} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (line 1954)
  (invoke-direct {v0 v4} java/math/BigDecimal/inplaceRound [object java/math/MathContext] )
  (line 1955)
  (return-object v0)
)

(method (attrs public ) scale()int
  (limit registers 2)
  ; this: v1 ([object java/math/BigDecimal])
  (line 1881)
  (iget-quick v0 v1 java/math/BigDecimal.smallValue long)
  (return v0)
)

(method (attrs public ) scaleByPowerOfTen(int )[object java/math/BigDecimal]
  (limit registers 8)
  ; this: v6 ([object java/math/BigDecimal])
  ; parameter[0] : v7 (int)
  (line 2125)
  (iget-quick v2 v6 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v2)
  (int-to-long v4 v7)
  (sub-long v0 v2 v4)
  (line 2126)
  (iget-quick v2 v6 java/math/BigDecimal.null)
  (const/16 v3 64)
  (if-ge v2 v3 lb319c)
  (line 2128)
  (iget-wide-quick v2 v6 java/math/BigDecimal.hashCode int)
  (const-wide/16 v4 0)
  (cmp-long v2 v2 v4)
  (if-nez v2 lb3186)
  (line 2129)
  (invoke-static {v0 v1} java/math/BigDecimal/zeroScaledBy long )
  (move-result-object v2)
  (label lb3184)
  (line 2133)
  (return-object v2)
  (label lb3186)
  (line 2131)
  (iget-wide-quick v2 v6 java/math/BigDecimal.hashCode int)
  (invoke-static {v0 v1} java/math/BigDecimal/toIntScale long )
  (move-result v4)
  (invoke-static {v2 v3 v4} java/math/BigDecimal/valueOf long int )
  (move-result-object v2)
  (goto lb3184)
  (label lb319c)
  (line 2133)
  (new-instance v2 java/math/BigDecimal)
  (invoke-direct {v6} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v3)
  (invoke-static {v0 v1} java/math/BigDecimal/toIntScale long )
  (move-result v4)
  (invoke-direct {v2 v3 v4} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb3184)
)

(method (attrs public ) setScale(int )[object java/math/BigDecimal]
  (limit registers 3)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 (int)
  (line 2048)
  (sget-object v0 java/math/RoundingMode.UNNECESSARY [object java/math/RoundingMode])
  (invoke-virtual-quick {v1 v2 v0} java/math/BigDecimal/setScale int [object java/math/RoundingMode] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) setScale(int int )[object java/math/BigDecimal]
  (limit registers 4)
  ; this: v1 ([object java/math/BigDecimal])
  ; parameter[0] : v2 (int)
  ; parameter[1] : v3 (int)
  (line 2028)
  (invoke-static {v3} java/math/RoundingMode/valueOf int )
  (move-result-object v0)
  (invoke-virtual-quick {v1 v2 v0} java/math/BigDecimal/setScale int [object java/math/RoundingMode] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) setScale(int [object java/math/RoundingMode] )[object java/math/BigDecimal]
  (limit registers 13)
  ; this: v10 ([object java/math/BigDecimal])
  ; parameter[0] : v11 (int)
  ; parameter[1] : v12 ([object java/math/RoundingMode])
  (const-wide/16 v8 0)
  (const/16 v4 64)
  (line 1981)
  (if-nez v12 lb3224)
  (line 1982)
  (new-instance v0 java/lang/NullPointerException)
  (invoke-direct {v0} java/lang/NullPointerException/<init> )
  (throw v0)
  (label lb3224)
  (line 1984)
  (int-to-long v0 v11)
  (iget-quick v2 v10 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v2)
  (sub-long v6 v0 v2)
  (line 1986)
  (cmp-long v0 v6 v8)
  (if-nez v0 lb323c)
  (move-object v0 v10)
  (label lb323a)
  (line 2002)
  (return-object v0)
  (label lb323c)
  (line 1989)
  (cmp-long v0 v6 v8)
  (if-lez v0 lb32a2)
  (line 1991)
  (sget-object v0 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v0 v0)
  (int-to-long v0 v0)
  (cmp-long v0 v6 v0)
  (if-gez v0 lb3282)
  (iget-quick v0 v10 java/math/BigDecimal.null)
  (sget-object v1 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (long-to-int v2 v6)
  (aget v1 v1 v2)
  (add-int/2addr v0 v1)
  (if-ge v0 v4 lb3282)
  (line 1993)
  (iget-wide-quick v0 v10 java/math/BigDecimal.hashCode int)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (long-to-int v3 v6)
  (aget-wide v2 v2 v3)
  (mul-long/2addr v0 v2)
  (invoke-static {v0 v1 v11} java/math/BigDecimal/valueOf long int )
  (move-result-object v0)
  (goto lb323a)
  (label lb3282)
  (line 1995)
  (new-instance v0 java/math/BigDecimal)
  (invoke-direct {v10} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (long-to-int v2 v6)
  (int-to-long v2 v2)
  (invoke-static {v1 v2 v3} java/math/Multiplication/multiplyByTenPow [object java/math/BigInteger] long )
  (move-result-object v1)
  (invoke-direct {v0 v1 v11} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb323a)
  (label lb32a2)
  (line 1999)
  (iget-quick v0 v10 java/math/BigDecimal.null)
  (if-ge v0 v4 lb32da)
  (neg-long v0 v6)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v2 v2)
  (int-to-long v2 v2)
  (cmp-long v0 v0 v2)
  (if-gez v0 lb32da)
  (line 2000)
  (iget-wide-quick v0 v10 java/math/BigDecimal.hashCode int)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW [array long])
  (neg-long v3 v6)
  (long-to-int v3 v3)
  (aget-wide v2 v2 v3)
  (move v4 v11)
  (move-object v5 v12)
  (invoke-static/range {v0 .. v5} java/math/BigDecimal/dividePrimitiveLongs long long int [object java/math/RoundingMode] )
  (move-result-object v0)
  (goto lb323a)
  (label lb32da)
  (line 2002)
  (invoke-direct {v10} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v0)
  (neg-long v1 v6)
  (invoke-static {v1 v2} java/math/Multiplication/powerOf10 long )
  (move-result-object v1)
  (invoke-static {v0 v1 v11 v12} java/math/BigDecimal/divideBigIntegers [object java/math/BigInteger] [object java/math/BigInteger] int [object java/math/RoundingMode] )
  (move-result-object v0)
  (goto lb323a)
)

(method (attrs public ) shortValueExact()short
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 2597)
  (const/16 v0 16)
  (invoke-direct {v2 v0} java/math/BigDecimal/valueExact int )
  (move-result-wide v0)
  (long-to-int v0 v0)
  (int-to-short v0 v0)
  (return v0)
)

(method (attrs public ) signum()int
  (limit registers 3)
  ; this: v2 ([object java/math/BigDecimal])
  (line 1861)
  (iget-quick v0 v2 java/math/BigDecimal.null)
  (const/16 v1 64)
  (if-ge v0 v1 lb3346)
  (line 1862)
  (iget-wide-quick v0 v2 java/math/BigDecimal.hashCode int)
  (invoke-static {v0 v1} java/lang/Long/signum long )
  (move-result v0)
  (label lb3344)
  (line 1864)
  (return v0)
  (label lb3346)
  (invoke-direct {v2} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v0)
  (invoke-virtual-quick {v0} java/math/BigInteger/signum )
  (move-result v0)
  (goto lb3344)
)

(method (attrs public ) stripTrailingZeros()[object java/math/BigDecimal]
  (limit registers 11)
  ; this: v10 ([object java/math/BigDecimal])
  (const/4 v9 0)
  (const/4 v8 1)
  (line 2146)
  (const/4 v0 1)
  (line 2147)
  (sget-object v6 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (array-length v6 v6)
  (sub-int v1 v6 v8)
  (line 2148)
  (iget-quick v6 v10 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v6)
  (line 2150)
  (invoke-direct {v10} java/math/BigDecimal/isZero )
  (move-result v6)
  (if-eqz v6 lb339a)
  (line 2151)
  (new-instance v6 java/math/BigDecimal)
  (const-string v7 "0")
  (invoke-direct {v6 v7} java/math/BigDecimal/<init> [object java/lang/String] )
  (label lb3398)
  (line 2178)
  (return-object v6)
  (label lb339a)
  (line 2153)
  (invoke-direct {v10} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v5)
  (label lb33a2)
  (line 2157)
  (invoke-virtual-quick {v5 v9} java/math/BigInteger/testBit int )
  (move-result v6)
  (if-nez v6 lb33e4)
  (line 2159)
  (sget-object v6 java/math/BigDecimal.TEN_POW [array [object java/math/BigInteger]])
  (aget-object v6 v6 v0)
  (invoke-virtual-quick {v5 v6} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v4)
  (label lb33be)
  (line 2161)
  (aget-object v6 v4 v8)
  (invoke-virtual-quick {v6} java/math/BigInteger/signum )
  (move-result v6)
  (if-nez v6 lb33e0)
  (line 2163)
  (int-to-long v6 v0)
  (sub-long/2addr v2 v6)
  (line 2164)
  (if-ge v0 v1 lb33da)
  (line 2166)
  (add-int/lit8 v0 v0 1)
  (label lb33da)
  (line 2168)
  (aget-object v5 v4 v9)
  (goto lb33a2)
  (label lb33e0)
  (line 2170)
  (if-ne v0 v8 lb33f8)
  (label lb33e4)
  (line 2178)
  (new-instance v6 java/math/BigDecimal)
  (invoke-static {v2 v3} java/math/BigDecimal/toIntScale long )
  (move-result v7)
  (invoke-direct {v6 v5 v7} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb3398)
  (label lb33f8)
  (line 2175)
  (const/4 v0 1)
  (goto lb33a2)
)

(method (attrs public ) subtract([object java/math/BigDecimal] )[object java/math/BigDecimal]
  (limit registers 9)
  ; this: v7 ([object java/math/BigDecimal])
  ; parameter[0] : v8 ([object java/math/BigDecimal])
  (const/16 v4 64)
  (line 929)
  (iget-quick v1 v7 java/math/BigDecimal.smallValue long)
  (iget-quick v2 v8 java/math/BigDecimal.smallValue long)
  (sub-int v0 v1 v2)
  (line 931)
  (invoke-direct {v7} java/math/BigDecimal/isZero )
  (move-result v1)
  (if-eqz v1 lb3446)
  (line 932)
  (if-gtz v0 lb3436)
  (line 933)
  (invoke-virtual-quick {v8} java/math/BigDecimal/negate )
  (move-result-object v1)
  (label lb3434)
  (line 964)
  (return-object v1)
  (label lb3436)
  (line 935)
  (invoke-direct {v8} java/math/BigDecimal/isZero )
  (move-result v1)
  (if-eqz v1 lb345a)
  (move-object v1 v7)
  (line 936)
  (goto lb3434)
  (label lb3446)
  (line 938)
  (invoke-direct {v8} java/math/BigDecimal/isZero )
  (move-result v1)
  (if-eqz v1 lb345a)
  (line 939)
  (if-ltz v0 lb345a)
  (move-object v1 v7)
  (line 940)
  (goto lb3434)
  (label lb345a)
  (line 944)
  (if-nez v0 lb34b6)
  (line 946)
  (iget-quick v1 v7 java/math/BigDecimal.null)
  (iget-quick v2 v8 java/math/BigDecimal.null)
  (execute-inline {v1 v2} Ljava/lang/Math/max int int )
  (move-result v1)
  (add-int/lit8 v1 v1 1)
  (if-ge v1 v4 lb348e)
  (line 947)
  (iget-wide-quick v1 v7 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v3 v8 java/math/BigDecimal.hashCode int)
  (sub-long/2addr v1 v3)
  (iget-quick v3 v7 java/math/BigDecimal.smallValue long)
  (invoke-static {v1 v2 v3} java/math/BigDecimal/valueOf long int )
  (move-result-object v1)
  (goto lb3434)
  (label lb348e)
  (line 949)
  (new-instance v1 java/math/BigDecimal)
  (invoke-direct {v7} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v2)
  (invoke-direct {v8} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} java/math/BigInteger/subtract [object java/math/BigInteger] )
  (move-result-object v2)
  (iget-quick v3 v7 java/math/BigDecimal.smallValue long)
  (invoke-direct {v1 v2 v3} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto lb3434)
  (label lb34b6)
  (line 950)
  (if-lez v0 lb353c)
  (line 952)
  (sget-object v1 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v1 v1)
  (if-ge v0 v1 lb3508)
  (iget-quick v1 v7 java/math/BigDecimal.null)
  (iget-quick v2 v8 java/math/BigDecimal.null)
  (sget-object v3 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (aget v3 v3 v0)
  (add-int/2addr v2 v3)
  (execute-inline {v1 v2} Ljava/lang/Math/max int int )
  (move-result v1)
  (add-int/lit8 v1 v1 1)
  (if-ge v1 v4 lb3508)
  (line 954)
  (iget-wide-quick v1 v7 java/math/BigDecimal.hashCode int)
  (iget-wide-quick v3 v8 java/math/BigDecimal.hashCode int)
  (sget-object v5 java/math/BigDecimal.LONG_TEN_POW [array long])
  (aget-wide v5 v5 v0)
  (mul-long/2addr v3 v5)
  (sub-long/2addr v1 v3)
  (iget-quick v3 v7 java/math/BigDecimal.smallValue long)
  (invoke-static {v1 v2 v3} java/math/BigDecimal/valueOf long int )
  (move-result-object v1)
  (goto lb3434)
  (label lb3508)
  (line 956)
  (new-instance v1 java/math/BigDecimal)
  (invoke-direct {v7} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v2)
  (invoke-direct {v8} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v3)
  (int-to-long v4 v0)
  (invoke-static {v3 v4 v5} java/math/Multiplication/multiplyByTenPow [object java/math/BigInteger] long )
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} java/math/BigInteger/subtract [object java/math/BigInteger] )
  (move-result-object v2)
  (iget-quick v3 v7 java/math/BigDecimal.smallValue long)
  (invoke-direct {v1 v2 v3} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto/16 lb3434)
  (label lb353c)
  (line 959)
  (neg-int v0 v0)
  (line 960)
  (sget-object v1 java/math/BigDecimal.LONG_TEN_POW [array long])
  (array-length v1 v1)
  (if-ge v0 v1 lb358e)
  (iget-quick v1 v7 java/math/BigDecimal.null)
  (sget-object v2 java/math/BigDecimal.LONG_TEN_POW_BIT_LENGTH [array int])
  (aget v2 v2 v0)
  (add-int/2addr v1 v2)
  (iget-quick v2 v8 java/math/BigDecimal.null)
  (execute-inline {v1 v2} Ljava/lang/Math/max int int )
  (move-result v1)
  (add-int/lit8 v1 v1 1)
  (if-ge v1 v4 lb358e)
  (line 962)
  (iget-wide-quick v1 v7 java/math/BigDecimal.hashCode int)
  (sget-object v3 java/math/BigDecimal.LONG_TEN_POW [array long])
  (aget-wide v3 v3 v0)
  (mul-long/2addr v1 v3)
  (iget-wide-quick v3 v8 java/math/BigDecimal.hashCode int)
  (sub-long/2addr v1 v3)
  (iget-quick v3 v8 java/math/BigDecimal.smallValue long)
  (invoke-static {v1 v2 v3} java/math/BigDecimal/valueOf long int )
  (move-result-object v1)
  (goto/16 lb3434)
  (label lb358e)
  (line 964)
  (new-instance v1 java/math/BigDecimal)
  (invoke-direct {v7} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v2)
  (int-to-long v3 v0)
  (invoke-static {v2 v3 v4} java/math/Multiplication/multiplyByTenPow [object java/math/BigInteger] long )
  (move-result-object v2)
  (invoke-direct {v8} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v3)
  (invoke-virtual-quick {v2 v3} java/math/BigInteger/subtract [object java/math/BigInteger] )
  (move-result-object v2)
  (iget-quick v3 v8 java/math/BigDecimal.smallValue long)
  (invoke-direct {v1 v2 v3} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (goto/16 lb3434)
)

(method (attrs public ) subtract([object java/math/BigDecimal] [object java/math/MathContext] )[object java/math/BigDecimal]
  (limit registers 13)
  ; this: v10 ([object java/math/BigDecimal])
  ; parameter[0] : v11 ([object java/math/BigDecimal])
  ; parameter[1] : v12 ([object java/math/MathContext])
  (const/16 v9 10)
  (line 982)
  (iget-quick v5 v11 java/math/BigDecimal.smallValue long)
  (int-to-long v5 v5)
  (iget-quick v7 v10 java/math/BigDecimal.smallValue long)
  (int-to-long v7 v7)
  (sub-long v0 v5 v7)
  (line 987)
  (invoke-direct {v11} java/math/BigDecimal/isZero )
  (move-result v5)
  (if-nez v5 lb360c)
  (invoke-direct {v10} java/math/BigDecimal/isZero )
  (move-result v5)
  (if-nez v5 lb360c)
  (invoke-virtual-quick {v12} java/math/MathContext/getPrecision )
  (move-result v5)
  (if-nez v5 lb361e)
  (label lb360c)
  (line 989)
  (invoke-virtual-quick {v10 v11} java/math/BigDecimal/subtract [object java/math/BigDecimal] )
  (move-result-object v5)
  (invoke-virtual-quick {v5 v12} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v5)
  (label lb361c)
  (line 1010)
  (return-object v5)
  (label lb361e)
  (line 992)
  (invoke-direct {v11} java/math/BigDecimal/aproxPrecision )
  (move-result v5)
  (int-to-long v5 v5)
  (const-wide/16 v7 1)
  (sub-long v7 v0 v7)
  (cmp-long v5 v5 v7)
  (if-gez v5 lb36d8)
  (line 994)
  (invoke-virtual-quick {v12} java/math/MathContext/getPrecision )
  (move-result v5)
  (invoke-direct {v10} java/math/BigDecimal/aproxPrecision )
  (move-result v6)
  (if-ge v5 v6 lb36d8)
  (line 995)
  (invoke-virtual-quick {v10} java/math/BigDecimal/signum )
  (move-result v4)
  (label lb3654)
  (line 996)
  (invoke-virtual-quick {v11} java/math/BigDecimal/signum )
  (move-result v5)
  (if-eq v4 v5 lb369e)
  (line 997)
  (invoke-direct {v10} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v5)
  (invoke-static {v5 v9} java/math/Multiplication/multiplyByPositiveInt [object java/math/BigInteger] int )
  (move-result-object v5)
  (int-to-long v6 v4)
  (invoke-static {v6 v7} java/math/BigInteger/valueOf long )
  (move-result-object v6)
  (invoke-virtual-quick {v5 v6} java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v3)
  (label lb3682)
  (line 1005)
  (new-instance v2 java/math/BigDecimal)
  (iget-quick v5 v10 java/math/BigDecimal.smallValue long)
  (add-int/lit8 v5 v5 1)
  (invoke-direct {v2 v3 v5} java/math/BigDecimal/<init> [object java/math/BigInteger] int )
  (label lb3694)
  (line 1006)
  (invoke-virtual-quick {v2 v12} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v5)
  (goto lb361c)
  (label lb369e)
  (line 1000)
  (invoke-direct {v10} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v5)
  (int-to-long v6 v4)
  (invoke-static {v6 v7} java/math/BigInteger/valueOf long )
  (move-result-object v6)
  (invoke-virtual-quick {v5 v6} java/math/BigInteger/subtract [object java/math/BigInteger] )
  (move-result-object v3)
  (label lb36b8)
  (line 1001)
  (invoke-static {v3 v9} java/math/Multiplication/multiplyByPositiveInt [object java/math/BigInteger] int )
  (move-result-object v5)
  (mul-int/lit8 v6 v4 9)
  (int-to-long v6 v6)
  (invoke-static {v6 v7} java/math/BigInteger/valueOf long )
  (move-result-object v6)
  (invoke-virtual-quick {v5 v6} java/math/BigInteger/add [object java/math/BigInteger] )
  (move-result-object v3)
  (goto lb3682)
  (label lb36d8)
  (line 1010)
  (invoke-virtual-quick {v10 v11} java/math/BigDecimal/subtract [object java/math/BigDecimal] )
  (move-result-object v5)
  (invoke-virtual-quick {v5 v12} java/math/BigDecimal/round [object java/math/MathContext] )
  (move-result-object v5)
  (goto lb361c)
)

(method (attrs public ) toBigInteger()[object java/math/BigInteger]
  (limit registers 4)
  ; this: v3 ([object java/math/BigDecimal])
  (line 2483)
  (iget-quick v0 v3 java/math/BigDecimal.smallValue long)
  (if-eqz v0 lb3710)
  (invoke-direct {v3} java/math/BigDecimal/isZero )
  (move-result v0)
  (if-eqz v0 lb371a)
  (label lb3710)
  (line 2484)
  (invoke-direct {v3} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v0)
  (label lb3718)
  (line 2488)
  (return-object v0)
  (label lb371a)
  (line 2485)
  (iget-quick v0 v3 java/math/BigDecimal.smallValue long)
  (if-gez v0 lb3744)
  (line 2486)
  (invoke-direct {v3} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v0)
  (iget-quick v1 v3 java/math/BigDecimal.smallValue long)
  (int-to-long v1 v1)
  (neg-long v1 v1)
  (invoke-static {v1 v2} java/math/Multiplication/powerOf10 long )
  (move-result-object v1)
  (invoke-virtual-quick {v0 v1} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v0)
  (goto lb3718)
  (label lb3744)
  (line 2488)
  (invoke-direct {v3} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v0)
  (iget-quick v1 v3 java/math/BigDecimal.smallValue long)
  (int-to-long v1 v1)
  (invoke-static {v1 v2} java/math/Multiplication/powerOf10 long )
  (move-result-object v1)
  (invoke-virtual-quick {v0 v1} java/math/BigInteger/divide [object java/math/BigInteger] )
  (move-result-object v0)
  (goto lb3718)
)

(method (attrs public ) toBigIntegerExact()[object java/math/BigInteger]
  (limit registers 6)
  ; this: v5 ([object java/math/BigDecimal])
  (const-string v4 "math.08")
  (line 2502)
  (iget-quick v1 v5 java/math/BigDecimal.smallValue long)
  (if-eqz v1 lb378c)
  (invoke-direct {v5} java/math/BigDecimal/isZero )
  (move-result v1)
  (if-eqz v1 lb3796)
  (label lb378c)
  (line 2503)
  (invoke-direct {v5} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (label lb3794)
  (line 2519)
  (return-object v1)
  (label lb3796)
  (line 2504)
  (iget-quick v1 v5 java/math/BigDecimal.smallValue long)
  (if-gez v1 lb37c0)
  (line 2505)
  (invoke-direct {v5} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (iget-quick v2 v5 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v2)
  (neg-long v2 v2)
  (invoke-static {v2 v3} java/math/Multiplication/powerOf10 long )
  (move-result-object v2)
  (invoke-virtual-quick {v1 v2} java/math/BigInteger/multiply [object java/math/BigInteger] )
  (move-result-object v1)
  (goto lb3794)
  (label lb37c0)
  (line 2509)
  (iget-quick v1 v5 java/math/BigDecimal.smallValue long)
  (invoke-direct {v5} java/math/BigDecimal/aproxPrecision )
  (move-result v2)
  (if-gt v1 v2 lb37e8)
  (iget-quick v1 v5 java/math/BigDecimal.smallValue long)
  (invoke-direct {v5} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v2)
  (invoke-virtual-quick {v2} java/math/BigInteger/getLowestSetBit )
  (move-result v2)
  (if-le v1 v2 lb3800)
  (label lb37e8)
  (line 2511)
  (new-instance v1 java/lang/ArithmeticException)
  (const-string v2 "math.08")
  (invoke-static {v4} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v2)
  (invoke-direct {v1 v2} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v1)
  (label lb3800)
  (line 2513)
  (invoke-direct {v5} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v1)
  (iget-quick v2 v5 java/math/BigDecimal.smallValue long)
  (int-to-long v2 v2)
  (invoke-static {v2 v3} java/math/Multiplication/powerOf10 long )
  (move-result-object v2)
  (invoke-virtual-quick {v1 v2} java/math/BigInteger/divideAndRemainder [object java/math/BigInteger] )
  (move-result-object v0)
  (line 2514)
  (const/4 v1 1)
  (aget-object v1 v0 v1)
  (invoke-virtual-quick {v1} java/math/BigInteger/signum )
  (move-result v1)
  (if-eqz v1 lb3848)
  (line 2517)
  (new-instance v1 java/lang/ArithmeticException)
  (const-string v2 "math.08")
  (invoke-static {v4} org/apache/harmony/math/internal/nls/Messages/getString [object java/lang/String] )
  (move-result-object v2)
  (invoke-direct {v1 v2} java/lang/ArithmeticException/<init> [object java/lang/String] )
  (throw v1)
  (label lb3848)
  (line 2519)
  (const/4 v1 0)
  (aget-object v1 v0 v1)
  (goto lb3794)
)

(method (attrs public ) toEngineeringString()[object java/lang/String]
  (limit registers 16)
  ; this: v15 ([object java/math/BigDecimal])
  (line 2367)
  (invoke-direct {v15} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v10)
  (invoke-virtual-quick {v10} java/math/BigInteger/toString )
  (move-result-object v7)
  (line 2368)
  (iget-quick v10 v15 java/math/BigDecimal.smallValue long)
  (if-nez v10 lb387c)
  (move-object v10 v7)
  (label lb387a)
  (line 2417)
  (return-object v10)
  (label lb387c)
  (line 2371)
  (invoke-direct {v15} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v10)
  (invoke-virtual-quick {v10} java/math/BigInteger/signum )
  (move-result v10)
  (if-gez v10 lb38f4)
  (const/4 v10 2)
  (move v0 v10)
  (label lb3894)
  (line 2372)
  (execute-inline {v7} Ljava/lang/String/length )
  (move-result v2)
  (label lb389c)
  (line 2373)
  (iget-quick v10 v15 java/math/BigDecimal.smallValue long)
  (int-to-long v10 v10)
  (neg-long v10 v10)
  (int-to-long v12 v2)
  (add-long/2addr v10 v12)
  (int-to-long v12 v0)
  (sub-long v4 v10 v12)
  (label lb38ae)
  (line 2374)
  (new-instance v9 java/lang/StringBuffer)
  (invoke-direct {v9 v7} java/lang/StringBuffer/<init> [object java/lang/String] )
  (label lb38b8)
  (line 2376)
  (iget-quick v10 v15 java/math/BigDecimal.smallValue long)
  (if-lez v10 lb3924)
  (const-wide/16 v10 65530)
  (cmp-long v10 v4 v10)
  (if-ltz v10 lb3924)
  (line 2377)
  (const-wide/16 v10 0)
  (cmp-long v10 v4 v10)
  (if-ltz v10 lb38fa)
  (line 2378)
  (iget-quick v10 v15 java/math/BigDecimal.smallValue long)
  (sub-int v10 v2 v10)
  (const/16 v11 46)
  (invoke-virtual-quick {v9 v10 v11} java/lang/StringBuffer/insert int char )
  (label lb38ea)
  (line 2417)
  (invoke-virtual-quick {v9} java/lang/StringBuffer/toString )
  (move-result-object v10)
  (goto lb387a)
  (label lb38f4)
  (line 2371)
  (const/4 v10 1)
  (move v0 v10)
  (goto lb3894)
  (label lb38fa)
  (line 2380)
  (const/4 v10 1)
  (sub-int v10 v0 v10)
  (const-string v11 "0.")
  (invoke-virtual-quick {v9 v10 v11} java/lang/StringBuffer/insert int [object java/lang/String] )
  (line 2381)
  (add-int/lit8 v10 v0 1)
  (sget-object v11 java/math/BigDecimal.CH_ZEROS [array char])
  (const/4 v12 0)
  (long-to-int v13 v4)
  (neg-int v13 v13)
  (const/4 v14 1)
  (sub-int/2addr v13 v14)
  (invoke-virtual-quick {v9 v10 v11 v12v13} java/lang/StringBuffer/insert int [array char] int int )
  (goto lb38ea)
  (label lb3924)
  (line 2384)
  (sub-int v1 v2 v0)
  (line 2385)
  (const-wide/16 v10 3)
  (rem-long v10 v4 v10)
  (long-to-int v8 v10)
  (line 2387)
  (if-eqz v8 lb3998)
  (line 2389)
  (invoke-direct {v15} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v10)
  (invoke-virtual-quick {v10} java/math/BigInteger/signum )
  (move-result v10)
  (if-nez v10 lb3984)
  (line 2391)
  (if-gez v8 lb397c)
  (neg-int v10 v8)
  (move v8 v10)
  (label lb3952)
  (line 2392)
  (int-to-long v10 v8)
  (add-long/2addr v4 v10)
  (label lb3956)
  (line 2399)
  (const/4 v10 3)
  (if-ge v1 v10 lb3998)
  (line 2400)
  (sub-int v6 v8 v1)
  (label lb3960)
  (move v3 v2)
  (label lb3962)
  (if-lez v6 lb3996)
  (line 2401)
  (add-int/lit8 v2 v3 1)
  (label lb396a)
  (const/16 v10 48)
  (invoke-virtual-quick {v9 v3 v10} java/lang/StringBuffer/insert int char )
  (line 2400)
  (add-int/lit8 v6 v6 255)
  (move v3 v2)
  (label lb397a)
  (goto lb3962)
  (label lb397c)
  (line 2391)
  (const/4 v10 3)
  (sub-int/2addr v10 v8)
  (move v8 v10)
  (goto lb3952)
  (label lb3984)
  (line 2395)
  (if-gez v8 lb398e)
  (add-int/lit8 v10 v8 3)
  (move v8 v10)
  (label lb398e)
  (line 2396)
  (int-to-long v10 v8)
  (sub-long/2addr v4 v10)
  (line 2397)
  (add-int/2addr v0 v8)
  (goto lb3956)
  (label lb3996)
  (move v2 v3)
  (label lb3998)
  (line 2405)
  (sub-int v10 v2 v0)
  (const/4 v11 1)
  (if-lt v10 v11 lb39b0)
  (line 2406)
  (const/16 v10 46)
  (invoke-virtual-quick {v9 v0 v10} java/lang/StringBuffer/insert int char )
  (line 2407)
  (add-int/lit8 v2 v2 1)
  (label lb39b0)
  (line 2409)
  (const-wide/16 v10 0)
  (cmp-long v10 v4 v10)
  (if-eqz v10 lb38ea)
  (line 2410)
  (const/16 v10 69)
  (invoke-virtual-quick {v9 v2 v10} java/lang/StringBuffer/insert int char )
  (line 2411)
  (const-wide/16 v10 0)
  (cmp-long v10 v4 v10)
  (if-lez v10 lb39e0)
  (line 2412)
  (add-int/lit8 v2 v2 1)
  (const/16 v10 43)
  (invoke-virtual-quick {v9 v2 v10} java/lang/StringBuffer/insert int char )
  (label lb39e0)
  (line 2414)
  (add-int/lit8 v2 v2 1)
  (invoke-static {v4 v5} java/lang/Long/toString long )
  (move-result-object v10)
  (invoke-virtual-quick {v9 v2 v10} java/lang/StringBuffer/insert int [object java/lang/String] )
  (goto/16 lb38ea)
)

(method (attrs public ) toPlainString()[object java/lang/String]
  (limit registers 9)
  ; this: v8 ([object java/math/BigDecimal])
  (const/4 v7 1)
  (const/4 v6 0)
  (line 2436)
  (invoke-direct {v8} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v4)
  (invoke-virtual-quick {v4} java/math/BigInteger/toString )
  (move-result-object v2)
  (line 2437)
  (iget-quick v4 v8 java/math/BigDecimal.smallValue long)
  (if-eqz v4 lb3a38)
  (invoke-direct {v8} java/math/BigDecimal/isZero )
  (move-result v4)
  (if-eqz v4 lb3a3c)
  (iget-quick v4 v8 java/math/BigDecimal.smallValue long)
  (if-gez v4 lb3a3c)
  (label lb3a38)
  (move-object v4 v2)
  (label lb3a3a)
  (line 2473)
  (return-object v4)
  (label lb3a3c)
  (line 2440)
  (invoke-virtual-quick {v8} java/math/BigDecimal/signum )
  (move-result v4)
  (if-gez v4 lb3ac0)
  (move v0 v7)
  (label lb3a4a)
  (line 2441)
  (iget-quick v1 v8 java/math/BigDecimal.smallValue long)
  (label lb3a4e)
  (line 2443)
  (new-instance v3 java/lang/StringBuffer)
  (execute-inline {v2} Ljava/lang/String/length )
  (move-result v4)
  (add-int/lit8 v4 v4 1)
  (iget-quick v5 v8 java/math/BigDecimal.smallValue long)
  (execute-inline {v5} Ljava/lang/Math/abs int )
  (move-result v5)
  (add-int/2addr v4 v5)
  (invoke-direct {v3 v4} java/lang/StringBuffer/<init> int )
  (label lb3a72)
  (line 2445)
  (if-ne v0 v7 lb3a80)
  (line 2447)
  (const/16 v4 45)
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append char )
  (label lb3a80)
  (line 2449)
  (iget-quick v4 v8 java/math/BigDecimal.smallValue long)
  (if-lez v4 lb3b12)
  (line 2450)
  (execute-inline {v2} Ljava/lang/String/length )
  (move-result v4)
  (sub-int/2addr v4 v0)
  (sub-int/2addr v1 v4)
  (line 2451)
  (if-ltz v1 lb3ae6)
  (line 2452)
  (const-string v4 "0.")
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append [object java/lang/String] )
  (label lb3aa2)
  (line 2454)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (array-length v4 v4)
  (if-le v1 v4 lb3ac4)
  (line 2455)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append [array char] )
  (line 2454)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (array-length v4 v4)
  (sub-int/2addr v1 v4)
  (goto lb3aa2)
  (label lb3ac0)
  (move v0 v6)
  (line 2440)
  (goto lb3a4a)
  (label lb3ac4)
  (line 2457)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (invoke-virtual-quick {v3 v4 v6 v1} java/lang/StringBuffer/append [array char] int int )
  (line 2458)
  (invoke-virtual-quick {v2 v0} java/lang/String/substring int )
  (move-result-object v4)
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append [object java/lang/String] )
  (label lb3adc)
  (line 2473)
  (invoke-virtual-quick {v3} java/lang/StringBuffer/toString )
  (move-result-object v4)
  (goto lb3a3a)
  (label lb3ae6)
  (line 2460)
  (sub-int v1 v0 v1)
  (line 2461)
  (invoke-virtual-quick {v2 v0 v1} java/lang/String/substring int int )
  (move-result-object v4)
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append [object java/lang/String] )
  (line 2462)
  (const/16 v4 46)
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append char )
  (line 2463)
  (invoke-virtual-quick {v2 v1} java/lang/String/substring int )
  (move-result-object v4)
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append [object java/lang/String] )
  (goto lb3adc)
  (label lb3b12)
  (line 2466)
  (invoke-virtual-quick {v2 v0} java/lang/String/substring int )
  (move-result-object v4)
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append [object java/lang/String] )
  (label lb3b20)
  (line 2468)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (array-length v4 v4)
  (neg-int v4 v4)
  (if-ge v1 v4 lb3b40)
  (line 2469)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (invoke-virtual-quick {v3 v4} java/lang/StringBuffer/append [array char] )
  (line 2468)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (array-length v4 v4)
  (add-int/2addr v1 v4)
  (goto lb3b20)
  (label lb3b40)
  (line 2471)
  (sget-object v4 java/math/BigDecimal.CH_ZEROS [array char])
  (neg-int v5 v1)
  (invoke-virtual-quick {v3 v4 v6 v5} java/lang/StringBuffer/append [array char] int int )
  (goto lb3adc)
)

(method (attrs public ) toString()[object java/lang/String]
  (limit registers 15)
  ; this: v14 ([object java/math/BigDecimal])
  (const-wide/16 v12 0)
  (const/16 v11 46)
  (const/4 v10 1)
  (line 2315)
  (iget-object-quick v6 v14 java/math/BigDecimal.toStringImage [object java/lang/String])
  (if-eqz v6 lb3b78)
  (line 2316)
  (iget-object-quick v6 v14 java/math/BigDecimal.toStringImage [object java/lang/String])
  (label lb3b76)
  (line 2351)
  (return-object v6)
  (label lb3b78)
  (line 2318)
  (iget-quick v6 v14 java/math/BigDecimal.null)
  (const/16 v7 32)
  (if-ge v6 v7 lb3b9e)
  (line 2319)
  (iget-wide-quick v6 v14 java/math/BigDecimal.hashCode int)
  (iget-quick v8 v14 java/math/BigDecimal.smallValue long)
  (invoke-static {v6 v7 v8} java/math/Conversion/toDecimalScaledString long int )
  (move-result-object v6)
  (iput-object-quick v6 v14 java/math/BigDecimal.toStringImage [object java/lang/String])
  (line 2320)
  (iget-object-quick v6 v14 java/math/BigDecimal.toStringImage [object java/lang/String])
  (goto lb3b76)
  (label lb3b9e)
  (line 2322)
  (invoke-direct {v14} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v6)
  (invoke-virtual-quick {v6} java/math/BigInteger/toString )
  (move-result-object v4)
  (line 2323)
  (iget-quick v6 v14 java/math/BigDecimal.smallValue long)
  (if-nez v6 lb3bba)
  (move-object v6 v4)
  (line 2324)
  (goto lb3b76)
  (label lb3bba)
  (line 2326)
  (invoke-direct {v14} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v6)
  (invoke-virtual-quick {v6} java/math/BigInteger/signum )
  (move-result v6)
  (if-gez v6 lb3c38)
  (const/4 v6 2)
  (move v0 v6)
  (label lb3bd2)
  (line 2327)
  (execute-inline {v4} Ljava/lang/String/length )
  (move-result v1)
  (label lb3bda)
  (line 2328)
  (iget-quick v6 v14 java/math/BigDecimal.smallValue long)
  (int-to-long v6 v6)
  (neg-long v6 v6)
  (int-to-long v8 v1)
  (add-long/2addr v6 v8)
  (int-to-long v8 v0)
  (sub-long v2 v6 v8)
  (label lb3bec)
  (line 2329)
  (new-instance v5 java/lang/StringBuffer)
  (invoke-direct {v5} java/lang/StringBuffer/<init> )
  (label lb3bf6)
  (line 2331)
  (invoke-virtual-quick {v5 v4} java/lang/StringBuffer/append [object java/lang/String] )
  (line 2332)
  (iget-quick v6 v14 java/math/BigDecimal.smallValue long)
  (if-lez v6 lb3c62)
  (const-wide/16 v6 65530)
  (cmp-long v6 v2 v6)
  (if-ltz v6 lb3c62)
  (line 2333)
  (cmp-long v6 v2 v12)
  (if-ltz v6 lb3c3c)
  (line 2334)
  (iget-quick v6 v14 java/math/BigDecimal.smallValue long)
  (sub-int v6 v1 v6)
  (invoke-virtual-quick {v5 v6 v11} java/lang/StringBuffer/insert int char )
  (label lb3c26)
  (line 2350)
  (invoke-virtual-quick {v5} java/lang/StringBuffer/toString )
  (move-result-object v6)
  (iput-object-quick v6 v14 java/math/BigDecimal.toStringImage [object java/lang/String])
  (line 2351)
  (iget-object-quick v6 v14 java/math/BigDecimal.toStringImage [object java/lang/String])
  (goto lb3b76)
  (label lb3c38)
  (move v0 v10)
  (line 2326)
  (goto lb3bd2)
  (label lb3c3c)
  (line 2336)
  (sub-int v6 v0 v10)
  (const-string v7 "0.")
  (invoke-virtual-quick {v5 v6 v7} java/lang/StringBuffer/insert int [object java/lang/String] )
  (line 2337)
  (add-int/lit8 v6 v0 1)
  (sget-object v7 java/math/BigDecimal.CH_ZEROS [array char])
  (const/4 v8 0)
  (long-to-int v9 v2)
  (neg-int v9 v9)
  (sub-int/2addr v9 v10)
  (invoke-virtual-quick {v5 v6 v7 v8v9} java/lang/StringBuffer/insert int [array char] int int )
  (goto lb3c26)
  (label lb3c62)
  (line 2340)
  (sub-int v6 v1 v0)
  (if-lt v6 v10 lb3c74)
  (line 2341)
  (invoke-virtual-quick {v5 v0 v11} java/lang/StringBuffer/insert int char )
  (line 2342)
  (add-int/lit8 v1 v1 1)
  (label lb3c74)
  (line 2344)
  (const/16 v6 69)
  (invoke-virtual-quick {v5 v1 v6} java/lang/StringBuffer/insert int char )
  (line 2345)
  (cmp-long v6 v2 v12)
  (if-lez v6 lb3c94)
  (line 2346)
  (add-int/lit8 v1 v1 1)
  (const/16 v6 43)
  (invoke-virtual-quick {v5 v1 v6} java/lang/StringBuffer/insert int char )
  (label lb3c94)
  (line 2348)
  (add-int/lit8 v1 v1 1)
  (invoke-static {v2 v3} java/lang/Long/toString long )
  (move-result-object v6)
  (invoke-virtual-quick {v5 v1 v6} java/lang/StringBuffer/insert int [object java/lang/String] )
  (goto lb3c26)
)

(method (attrs public ) ulp()[object java/math/BigDecimal]
  (limit registers 4)
  ; this: v3 ([object java/math/BigDecimal])
  (line 2785)
  (const-wide/16 v0 1)
  (iget-quick v2 v3 java/math/BigDecimal.smallValue long)
  (invoke-static {v0 v1 v2} java/math/BigDecimal/valueOf long int )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) unscaledValue()[object java/math/BigInteger]
  (limit registers 2)
  ; this: v1 ([object java/math/BigDecimal])
  (line 1930)
  (invoke-direct {v1} java/math/BigDecimal/getUnscaledValue )
  (move-result-object v0)
  (return-object v0)
)

)
