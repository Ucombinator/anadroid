(class (attrs public final ) com/google/zxing/qrcode/encoder/MaskUtil
 (super java/lang/Object)


(method (attrs private ) <init>()void
  (limit registers 1)
  ; this: v0 ([object com/google/zxing/qrcode/encoder/MaskUtil])
  (invoke-direct {v0} java/lang/Object/<init> )
  (return-void )
 )

(method (attrs public static ) applyMaskPenaltyRule1([object com/google/zxing/common/ByteMatrix] )int
  (limit registers 3)
  ; parameter[0] : v2 ([object com/google/zxing/common/ByteMatrix])
  (const/4 v0 1)
  (invoke-static {v2 v0} com/google/zxing/qrcode/encoder/MaskUtil/applyMaskPenaltyRule1Internal [object com/google/zxing/common/ByteMatrix] boolean )
  (move-result v0)
  (const/4 v1 0)
  (invoke-static {v2 v1} com/google/zxing/qrcode/encoder/MaskUtil/applyMaskPenaltyRule1Internal [object com/google/zxing/common/ByteMatrix] boolean )
  (move-result v1)
  (add-int/2addr v0 v1)
  (return v0)
 )

(method (attrs private static ) applyMaskPenaltyRule1Internal([object com/google/zxing/common/ByteMatrix] boolean )int
  (limit registers 13)
  ; parameter[0] : v11 ([object com/google/zxing/common/ByteMatrix])
  ; parameter[1] : v12 (boolean)
  (const/4 v10 5)
  (const/4 v9 0)
  (const/4 v0 15)
  (if-eqz v12 l3a328)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/height )
  (move-result v1)
  (label l3a2da)
  (if-eqz v12 l3a332)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/width )
  (move-result v2)
  (label l3a2e6)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/getArray )
  (move-result-object v3)
  (move v4 v0)
  (move v5 v9)
  (move v6 v9)
  (move v0 v9)
  (label l3a2f6)
  (if-ge v0 v1 l3a364)
  (move v7 v6)
  (move v6 v5)
  (move v5 v4)
  (move v4 v9)
  (label l3a302)
  (if-ge v4 v2 l3a358)
  (if-eqz v12 l3a33c)
  (aget-object v8 v3 v0)
  (aget-byte v8 v8 v4)
  (label l3a312)
  (if-ne v8 v5 l3a350)
  (add-int/lit8 v6 v6 1)
  (if-ne v6 v10 l3a346)
  (add-int/lit8 v7 v7 3)
  (label l3a322)
  (add-int/lit8 v4 v4 1)
  (goto l3a302)
  (label l3a328)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/width )
  (move-result v1)
  (goto l3a2da)
  (label l3a332)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/height )
  (move-result v2)
  (goto l3a2e6)
  (label l3a33c)
  (aget-object v8 v3 v4)
  (aget-byte v8 v8 v0)
  (goto l3a312)
  (label l3a346)
  (if-le v6 v10 l3a322)
  (add-int/lit8 v7 v7 1)
  (goto l3a322)
  (label l3a350)
  (const/4 v5 1)
  (move v6 v5)
  (move v5 v8)
  (goto l3a322)
  (label l3a358)
  (add-int/lit8 v0 v0 1)
  (move v4 v5)
  (move v6 v7)
  (move v5 v9)
  (goto l3a2f6)
  (label l3a364)
  (return v6)
 )

(method (attrs public static ) applyMaskPenaltyRule2([object com/google/zxing/common/ByteMatrix] )int
  (limit registers 12)
  ; parameter[0] : v11 ([object com/google/zxing/common/ByteMatrix])
  (const/4 v10 1)
  (const/4 v9 0)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/getArray )
  (move-result-object v0)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/width )
  (move-result v1)
  (invoke-virtual {v11} com/google/zxing/common/ByteMatrix/height )
  (move-result v2)
  (move v3 v9)
  (move v4 v9)
  (label l3a398)
  (sub-int v5 v2 v10)
  (if-ge v3 v5 l3a3fa)
  (move v5 v4)
  (move v4 v9)
  (label l3a3a4)
  (sub-int v6 v1 v10)
  (if-ge v4 v6 l3a3f2)
  (aget-object v6 v0 v3)
  (aget-byte v6 v6 v4)
  (aget-object v7 v0 v3)
  (add-int/lit8 v8 v4 1)
  (aget-byte v7 v7 v8)
  (if-ne v6 v7 l3a3ec)
  (add-int/lit8 v7 v3 1)
  (aget-object v7 v0 v7)
  (aget-byte v7 v7 v4)
  (if-ne v6 v7 l3a3ec)
  (add-int/lit8 v7 v3 1)
  (aget-object v7 v0 v7)
  (add-int/lit8 v8 v4 1)
  (aget-byte v7 v7 v8)
  (if-ne v6 v7 l3a3ec)
  (add-int/lit8 v5 v5 3)
  (label l3a3ec)
  (add-int/lit8 v4 v4 1)
  (goto l3a3a4)
  (label l3a3f2)
  (add-int/lit8 v3 v3 1)
  (move v4 v5)
  (goto l3a398)
  (label l3a3fa)
  (return v4)
 )

(method (attrs public static ) applyMaskPenaltyRule3([object com/google/zxing/common/ByteMatrix] )int
  (limit registers 14)
  ; parameter[0] : v13 ([object com/google/zxing/common/ByteMatrix])
  (const/4 v12 3)
  (const/4 v11 2)
  (const/4 v10 0)
  (const/4 v9 4)
  (const/4 v8 1)
  (invoke-virtual {v13} com/google/zxing/common/ByteMatrix/getArray )
  (move-result-object v0)
  (invoke-virtual {v13} com/google/zxing/common/ByteMatrix/width )
  (move-result v1)
  (invoke-virtual {v13} com/google/zxing/common/ByteMatrix/height )
  (move-result v2)
  (move v3 v10)
  (move v4 v10)
  (label l3a432)
  (if-ge v3 v2 l3a660)
  (move v5 v4)
  (move v4 v10)
  (label l3a43a)
  (if-ge v4 v1 l3a656)
  (add-int/lit8 v6 v4 6)
  (if-ge v6 v1 l3a546)
  (aget-object v6 v0 v3)
  (aget-byte v6 v6 v4)
  (if-ne v6 v8 l3a546)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 1)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a546)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 2)
  (aget-byte v6 v6 v7)
  (if-ne v6 v8 l3a546)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 3)
  (aget-byte v6 v6 v7)
  (if-ne v6 v8 l3a546)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 4)
  (aget-byte v6 v6 v7)
  (if-ne v6 v8 l3a546)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 5)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a546)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 6)
  (aget-byte v6 v6 v7)
  (if-ne v6 v8 l3a546)
  (add-int/lit8 v6 v4 10)
  (if-ge v6 v1 l3a4fa)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 7)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a4fa)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 8)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a4fa)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 9)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a4fa)
  (aget-object v6 v0 v3)
  (add-int/lit8 v7 v4 10)
  (aget-byte v6 v6 v7)
  (if-eqz v6 l3a542)
  (label l3a4fa)
  (sub-int v6 v4 v9)
  (if-ltz v6 l3a546)
  (aget-object v6 v0 v3)
  (sub-int v7 v4 v8)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a546)
  (aget-object v6 v0 v3)
  (sub-int v7 v4 v11)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a546)
  (aget-object v6 v0 v3)
  (sub-int v7 v4 v12)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a546)
  (aget-object v6 v0 v3)
  (sub-int v7 v4 v9)
  (aget-byte v6 v6 v7)
  (if-nez v6 l3a546)
  (label l3a542)
  (add-int/lit8 v5 v5 40)
  (label l3a546)
  (add-int/lit8 v6 v3 6)
  (if-ge v6 v2 l3a64e)
  (aget-object v6 v0 v3)
  (aget-byte v6 v6 v4)
  (if-ne v6 v8 l3a64e)
  (add-int/lit8 v6 v3 1)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a64e)
  (add-int/lit8 v6 v3 2)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-ne v6 v8 l3a64e)
  (add-int/lit8 v6 v3 3)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-ne v6 v8 l3a64e)
  (add-int/lit8 v6 v3 4)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-ne v6 v8 l3a64e)
  (add-int/lit8 v6 v3 5)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a64e)
  (add-int/lit8 v6 v3 6)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-ne v6 v8 l3a64e)
  (add-int/lit8 v6 v3 10)
  (if-ge v6 v2 l3a602)
  (add-int/lit8 v6 v3 7)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a602)
  (add-int/lit8 v6 v3 8)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a602)
  (add-int/lit8 v6 v3 9)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a602)
  (add-int/lit8 v6 v3 10)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-eqz v6 l3a64a)
  (label l3a602)
  (sub-int v6 v3 v9)
  (if-ltz v6 l3a64e)
  (sub-int v6 v3 v8)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a64e)
  (sub-int v6 v3 v11)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a64e)
  (sub-int v6 v3 v12)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a64e)
  (sub-int v6 v3 v9)
  (aget-object v6 v0 v6)
  (aget-byte v6 v6 v4)
  (if-nez v6 l3a64e)
  (label l3a64a)
  (add-int/lit8 v5 v5 40)
  (label l3a64e)
  (add-int/lit8 v4 v4 1)
  (goto/16 l3a43a)
  (label l3a656)
  (add-int/lit8 v3 v3 1)
  (move v4 v5)
  (goto/16 l3a432)
  (label l3a660)
  (return v4)
 )

(method (attrs public static ) applyMaskPenaltyRule4([object com/google/zxing/common/ByteMatrix] )int
  (limit registers 10)
  ; parameter[0] : v9 ([object com/google/zxing/common/ByteMatrix])
  (const/4 v8 0)
  (invoke-virtual {v9} com/google/zxing/common/ByteMatrix/getArray )
  (move-result-object v0)
  (invoke-virtual {v9} com/google/zxing/common/ByteMatrix/width )
  (move-result v1)
  (invoke-virtual {v9} com/google/zxing/common/ByteMatrix/height )
  (move-result v2)
  (move v3 v8)
  (move v4 v8)
  (label l3a692)
  (if-ge v3 v2 l3a6be)
  (move v5 v4)
  (move v4 v8)
  (label l3a69a)
  (if-ge v4 v1 l3a6b6)
  (aget-object v6 v0 v3)
  (aget-byte v6 v6 v4)
  (const/4 v7 1)
  (if-ne v6 v7 l3a6b0)
  (add-int/lit8 v5 v5 1)
  (label l3a6b0)
  (add-int/lit8 v4 v4 1)
  (goto l3a69a)
  (label l3a6b6)
  (add-int/lit8 v3 v3 1)
  (move v4 v5)
  (goto l3a692)
  (label l3a6be)
  (invoke-virtual {v9} com/google/zxing/common/ByteMatrix/height )
  (move-result v0)
  (invoke-virtual {v9} com/google/zxing/common/ByteMatrix/width )
  (move-result v1)
  (mul-int/2addr v0 v1)
  (int-to-double v1 v4)
  (int-to-double v3 v0)
  (div-double v0 v1 v3)
  (const-wide/high16 v2 16473)
  (mul-double/2addr v0 v2)
  (const-wide/high16 v2 16457)
  (sub-double/2addr v0 v2)
  (double-to-int v0 v0)
  (invoke-static {v0} java/lang/Math/abs int )
  (move-result v0)
  (div-int/lit8 v0 v0 5)
  (mul-int/lit8 v0 v0 10)
  (return v0)
 )

(method (attrs public static ) getDataMaskBit(int int int )boolean
  (limit registers 7)
  ; parameter[0] : v4 (int)
  ; parameter[1] : v5 (int)
  ; parameter[2] : v6 (int)
  (const/4 v3 1)
  (const/4 v2 0)
  (if-ltz v4 l3a72e)
  (const/16 v0 8)
  (if-ge v4 v0 l3a72e)
  (move v0 v3)
  (label l3a71a)
  (if-nez v0 l3a732)
  (new-instance v0 java/lang/IllegalArgumentException)
  (const-string v1 "Invalid mask pattern")
  (invoke-direct {v0 v1} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v0)
  (label l3a72e)
  (move v0 v2)
  (goto l3a71a)
  (label l3a732)
  (packed-switch v4 0
    ps3a732_3a76a ; case 0
    ps3a732_3a77a ; case 1
    ps3a732_3a780 ; case 2
    ps3a732_3a786 ; case 3
    ps3a732_3a790 ; case 4
    ps3a732_3a7a0 ; case 5
    ps3a732_3a7b0 ; case 6
    ps3a732_3a7c4 ; case 7
    ps3a732_default) ; default
  (label ps3a732_default)
  (new-instance v0 java/lang/IllegalArgumentException)
  (new-instance v1 java/lang/StringBuffer)
  (invoke-direct {v1} java/lang/StringBuffer/<init> )
  (const-string v2 "Invalid mask pattern: ")
  (invoke-virtual {v1 v2} java/lang/StringBuffer/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1 v4} java/lang/StringBuffer/append int )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuffer/toString )
  (move-result-object v1)
  (invoke-direct {v0 v1} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v0)
  (label ps3a732_3a76a)
  (add-int v0 v6 v5)
  (and-int/lit8 v0 v0 1)
  (label l3a772)
  (if-nez v0 l3a7dc)
  (move v0 v3)
  (label l3a778)
  (return v0)
  (label ps3a732_3a77a)
  (and-int/lit8 v0 v6 1)
  (goto l3a772)
  (label ps3a732_3a780)
  (rem-int/lit8 v0 v5 3)
  (goto l3a772)
  (label ps3a732_3a786)
  (add-int v0 v6 v5)
  (rem-int/lit8 v0 v0 3)
  (goto l3a772)
  (label ps3a732_3a790)
  (ushr-int/lit8 v0 v6 1)
  (div-int/lit8 v1 v5 3)
  (add-int/2addr v0 v1)
  (and-int/lit8 v0 v0 1)
  (goto l3a772)
  (label ps3a732_3a7a0)
  (mul-int v0 v6 v5)
  (and-int/lit8 v1 v0 1)
  (rem-int/lit8 v0 v0 3)
  (add-int/2addr v0 v1)
  (goto l3a772)
  (label ps3a732_3a7b0)
  (mul-int v0 v6 v5)
  (and-int/lit8 v1 v0 1)
  (rem-int/lit8 v0 v0 3)
  (add-int/2addr v0 v1)
  (and-int/lit8 v0 v0 1)
  (goto l3a772)
  (label ps3a732_3a7c4)
  (mul-int v0 v6 v5)
  (rem-int/lit8 v0 v0 3)
  (add-int v1 v6 v5)
  (and-int/lit8 v1 v1 1)
  (add-int/2addr v0 v1)
  (and-int/lit8 v0 v0 1)
  (goto l3a772)
  (label l3a7dc)
  (move v0 v2)
  (goto l3a778)
 )

)
