(class (attrs final synchronized ) java/util/concurrent/SynchronousQueue$TransferQueue
 (super java/util/concurrent/SynchronousQueue$Transferer)
 (source "SynchronousQueue.java")

 (field (attrs static final ) cleanMeUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater] )
 (field (attrs static final ) headUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater] )
 (field (attrs static final ) tailUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater] )
 (field (attrs volatile transient ) cleanMe [object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] )
 (field (attrs volatile transient ) head [object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] )
 (field (attrs volatile transient ) tail [object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] )

(method (attrs static ) <clinit>()void
  (limit registers 3)
  (const-class v2 java/util/concurrent/SynchronousQueue$TransferQueue)
  (const-class v1 java/util/concurrent/SynchronousQueue$TransferQueue$QNode)
  (line 555)
  (const-class v0 java/util/concurrent/SynchronousQueue$TransferQueue)
  (const-class v0 java/util/concurrent/SynchronousQueue$TransferQueue$QNode)
  (const-string v0 "head")
  (invoke-static {v2 v1 v0} java/util/concurrent/atomic/AtomicReferenceFieldUpdater/newUpdater [object java/lang/Class] [object java/lang/Class] [object java/lang/String] )
  (move-result-object v0)
  (sput-object v0 java/util/concurrent/SynchronousQueue$TransferQueue.headUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater])
  (line 568)
  (const-class v0 java/util/concurrent/SynchronousQueue$TransferQueue)
  (const-class v0 java/util/concurrent/SynchronousQueue$TransferQueue$QNode)
  (const-string v0 "tail")
  (invoke-static {v2 v1 v0} java/util/concurrent/atomic/AtomicReferenceFieldUpdater/newUpdater [object java/lang/Class] [object java/lang/Class] [object java/lang/String] )
  (move-result-object v0)
  (sput-object v0 java/util/concurrent/SynchronousQueue$TransferQueue.tailUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater])
  (line 580)
  (const-class v0 java/util/concurrent/SynchronousQueue$TransferQueue)
  (const-class v0 java/util/concurrent/SynchronousQueue$TransferQueue$QNode)
  (const-string v0 "cleanMe")
  (invoke-static {v2 v1 v0} java/util/concurrent/atomic/AtomicReferenceFieldUpdater/newUpdater [object java/lang/Class] [object java/lang/Class] [object java/lang/String] )
  (move-result-object v0)
  (sput-object v0 java/util/concurrent/SynchronousQueue$TransferQueue.cleanMeUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater])
  (return-void )
 )

(method (attrs ) <init>()void
  (limit registers 4)
  ; this: v3 ([object java/util/concurrent/SynchronousQueue$TransferQueue])
  (line 548)
  (invoke-direct {v3} java/util/concurrent/SynchronousQueue$Transferer/<init> )
  (line 549)
  (new-instance v0 java/util/concurrent/SynchronousQueue$TransferQueue$QNode)
  (const/4 v1 0)
  (const/4 v2 0)
  (invoke-direct {v0 v1 v2} java/util/concurrent/SynchronousQueue$TransferQueue$QNode/<init> [object java/lang/Object] boolean )
  (line 550)
  (iput-object-quick v0 v3 )
  (line 551)
  (iput-object-quick v0 v3 )
  (line 552)
  (return-void )
 )

(method (attrs ) advanceHead([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] [object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] )void
  (limit registers 4)
  ; this: v1 ([object java/util/concurrent/SynchronousQueue$TransferQueue])
  ; parameter[0] : v2 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  ; parameter[1] : v3 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  (line 563)
  (iget-object-quick v0 v1 )
  (if-ne v2 v0 lf72f8)
  (sget-object v0 java/util/concurrent/SynchronousQueue$TransferQueue.headUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater])
  (invoke-virtual-quick {v0 v1 v2 v3} vtable #0xb)
  (move-result v0)
  (if-eqz v0 lf72f8)
  (line 564)
  (iput-object-quick v2 v2 )
  (label lf72f8)
  (line 565)
  (return-void )
)

(method (attrs ) advanceTail([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] [object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] )void
  (limit registers 4)
  ; this: v1 ([object java/util/concurrent/SynchronousQueue$TransferQueue])
  ; parameter[0] : v2 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  ; parameter[1] : v3 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  (line 575)
  (iget-object-quick v0 v1 )
  (if-ne v0 v2 lf731e)
  (line 576)
  (sget-object v0 java/util/concurrent/SynchronousQueue$TransferQueue.tailUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater])
  (invoke-virtual-quick {v0 v1 v2 v3} vtable #0xb)
  (label lf731e)
  (line 577)
  (return-void )
)

(method (attrs ) awaitFulfill([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] [object java/lang/Object] boolean long )[object java/lang/Object]
  (limit registers 15)
  ; this: v9 ([object java/util/concurrent/SynchronousQueue$TransferQueue])
  ; parameter[0] : v10 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  ; parameter[1] : v11 ([object java/lang/Object])
  ; parameter[2] : v12 (boolean)
  ; parameter[3] : v13 (long)
  (line 690)
  (if-eqz v12 lf7378)
  (invoke-static {} java/lang/System/nanoTime )
  (nop )
  (move-result-wide v7)
  (move-wide v0 v7)
  (label lf733e)
  (line 691)
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v5)
  (label lf7346)
  (line 692)
  (iget-object-quick v7 v9 )
  (iget-object-quick v7 v7 )
  (if-ne v7 v10 lf7388)
  (if-eqz v12 lf7380)
  (sget v7 java/util/concurrent/SynchronousQueue.maxTimedSpins int)
  (move v4 v7)
  (label lf735c)
  (line 695)
  (invoke-virtual-quick {v5} vtable #0x19)
  (move-result v7)
  (if-eqz v7 lf736e)
  (line 696)
  (invoke-virtual-quick {v10 v11} vtable #0xf)
  (label lf736e)
  (line 697)
  (iget-object-quick v6 v10 )
  (label lf7372)
  (line 698)
  (if-eq v6 v11 lf738e)
  (line 699)
  (return-object v6)
  (label lf7378)
  (line 690)
  (const-wide/16 v7 0)
  (move-wide v0 v7)
  (goto lf733e)
  (label lf7380)
  (line 692)
  (sget v7 java/util/concurrent/SynchronousQueue.maxUntimedSpins int)
  (move v4 v7)
  (goto lf735c)
  (label lf7388)
  (const/4 v7 0)
  (move v4 v7)
  (goto lf735c)
  (label lf738e)
  (line 700)
  (if-eqz v12 lf73b6)
  (line 701)
  (invoke-static {} java/lang/System/nanoTime )
  (nop )
  (move-result-wide v2)
  (label lf739a)
  (line 702)
  (sub-long v7 v2 v0)
  (sub-long/2addr v13 v7)
  (line 703)
  (move-wide v0 v2)
  (line 704)
  (const-wide/16 v7 0)
  (cmp-long v7 v13 v7)
  (if-gtz v7 lf73b6)
  (line 705)
  (invoke-virtual-quick {v10 v11} vtable #0xf)
  (goto lf735c)
  (label lf73b6)
  (line 709)
  (if-lez v4 lf73c0)
  (line 710)
  (add-int/lit8 v4 v4 255)
  (goto lf735c)
  (label lf73c0)
  (line 711)
  (iget-object-quick v7 v10 )
  (if-nez v7 lf73ce)
  (line 712)
  (iput-object-quick v5 v10 )
  (goto lf735c)
  (label lf73ce)
  (line 713)
  (if-nez v12 lf73da)
  (line 714)
  (invoke-static {} java/util/concurrent/locks/LockSupport/park )
  (nop )
  (goto lf735c)
  (label lf73da)
  (line 715)
  (const-wide/16 v7 1000)
  (cmp-long v7 v13 v7)
  (if-lez v7 lf735c)
  (line 716)
  (invoke-static {v13 v14} java/util/concurrent/locks/LockSupport/parkNanos long )
  (goto lf735c)
)

(method (attrs ) casCleanMe([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] [object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] )boolean
  (limit registers 4)
  ; this: v1 ([object java/util/concurrent/SynchronousQueue$TransferQueue])
  ; parameter[0] : v2 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  ; parameter[1] : v3 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  (line 587)
  (iget-object-quick v0 v1 )
  (if-ne v0 v2 lf741c)
  (sget-object v0 java/util/concurrent/SynchronousQueue$TransferQueue.cleanMeUpdater [object java/util/concurrent/atomic/AtomicReferenceFieldUpdater])
  (invoke-virtual-quick {v0 v1 v2 v3} vtable #0xb)
  (move-result v0)
  (if-eqz v0 lf741c)
  (const/4 v0 1)
  (label lf741a)
  (return v0)
  (label lf741c)
  (const/4 v0 0)
  (goto lf741a)
)

(method (attrs ) clean([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] [object java/util/concurrent/SynchronousQueue$TransferQueue$QNode] )void
  (limit registers 13)
  ; this: v10 ([object java/util/concurrent/SynchronousQueue$TransferQueue])
  ; parameter[0] : v11 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  ; parameter[1] : v12 ([object java/util/concurrent/SynchronousQueue$TransferQueue$QNode])
  (const/4 v9 0)
  (line 724)
  (iput-object-quick v9 v12 )
  (label lf7436)
  (line 733)
  (iget-object-quick v8 v11 )
  (if-ne v8 v12 lf7466)
  (line 734)
  (iget-object-quick v3 v10 )
  (label lf7442)
  (line 735)
  (iget-object-quick v4 v3 )
  (label lf7446)
  (line 736)
  (if-eqz v4 lf745e)
  (invoke-virtual-quick {v4} vtable #0xd)
  (move-result v8)
  (if-eqz v8 lf745e)
  (line 737)
  (invoke-virtual-quick {v10 v3 v4} vtable #0xc)
  (goto lf7436)
  (label lf745e)
  (line 740)
  (iget-object-quick v6 v10 )
  (label lf7462)
  (line 741)
  (if-ne v6 v3 lf7468)
  (label lf7466)
  (line 772)
  (return-void )
  (label lf7468)
  (line 743)
  (iget-object-quick v7 v6 )
  (line 744)
  (iget-object-quick v8 v10 )
  (if-ne v6 v8 lf7436)
  (line 746)
  (if-eqz v7 lf7480)
  (line 747)
  (invoke-virtual-quick {v10 v6 v7} vtable #0xd)
  (goto lf7436)
  (label lf7480)
  (line 750)
  (if-eq v12 v6 lf7498)
  (line 751)
  (iget-object-quick v5 v12 )
  (label lf7488)
  (line 752)
  (if-eq v5 v12 lf7466)
  (invoke-virtual-quick {v11 v12 v5} vtable #0xc)
  (move-result v8)
  (if-nez v8 lf7466)
  (label lf7498)
  (line 755)
  (iget-object-quick v2 v10 )
  (line 756)
  (if-eqz v2 lf74e0)
  (line 757)
  (iget-object-quick v0 v2 )
  (label lf74a4)
  (line 759)
  (if-eqz v0 lf74d4)
  (if-eq v0 v2 lf74d4)
  (invoke-virtual-quick {v0} vtable #0xd)
  (move-result v8)
  (if-eqz v8 lf74d4)
  (if-eq v0 v6 lf74da)
  (iget-object-quick v1 v0 )
  (label lf74c0)
  (if-eqz v1 lf74da)
  (if-eq v1 v0 lf74da)
  (invoke-virtual-quick {v2 v0 v1} vtable #0xc)
  (move-result v8)
  (if-eqz v8 lf74da)
  (label lf74d4)
  (line 766)
  (invoke-virtual-quick {v10 v2 v9} vtable #0xf)
  (label lf74da)
  (line 767)
  (if-ne v2 v11 lf7436)
  (goto lf7466)
  (label lf74e0)
  (line 769)
  (invoke-virtual-quick {v10 v9 v11} vtable #0xf)
  (move-result v8)
  (if-eqz v8 lf7436)
  (goto lf7466)
)

(method (attrs ) transfer([object java/lang/Object] boolean long )[object java/lang/Object]
  (limit registers 17)
  ; this: v12 ([object java/util/concurrent/SynchronousQueue$TransferQueue])
  ; parameter[0] : v13 ([object java/lang/Object])
  ; parameter[1] : v14 (boolean)
  ; parameter[2] : v15 (long)
  (line 620)
  (const/4 v1 0)
  (label lf7502)
  (line 621)
  (if-eqz v13 lf753e)
  (const/4 v0 1)
  (move v7 v0)
  (label lf750a)
  (line 624)
  (iget-object-quick v9 v12 )
  (label lf750e)
  (line 625)
  (iget-object-quick v6 v12 )
  (label lf7512)
  (line 626)
  (if-eqz v9 lf750a)
  (if-eqz v6 lf750a)
  (line 629)
  (if-eq v6 v9 lf7526)
  (iget-quick v0 v9 )
  (if-ne v0 v7 lf75c4)
  (label lf7526)
  (line 630)
  (iget-object-quick v10 v9 )
  (label lf752a)
  (line 631)
  (iget-object-quick v0 v12 )
  (if-ne v9 v0 lf750a)
  (line 633)
  (if-eqz v10 lf7544)
  (line 634)
  (invoke-virtual-quick {v12 v9 v10} vtable #0xd)
  (goto lf750a)
  (label lf753e)
  (line 621)
  (const/4 v0 0)
  (move v7 v0)
  (goto lf750a)
  (label lf7544)
  (line 637)
  (if-eqz v14 lf7558)
  (const-wide/16 v2 0)
  (cmp-long v0 v15 v2)
  (if-gtz v0 lf7558)
  (line 638)
  (const/4 v0 0)
  (label lf7556)
  (line 674)
  (return-object v0)
  (label lf7558)
  (line 639)
  (if-nez v1 lf7566)
  (line 640)
  (new-instance v1 java/util/concurrent/SynchronousQueue$TransferQueue$QNode)
  (label lf7560)
  (invoke-direct {v1 v13 v7} java/util/concurrent/SynchronousQueue$TransferQueue$QNode/<init> [object java/lang/Object] boolean )
  (label lf7566)
  (line 641)
  (const/4 v0 0)
  (invoke-virtual-quick {v9 v0 v1} vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf750a)
  (line 644)
  (invoke-virtual-quick {v12 v9 v1} vtable #0xd)
  (move-object v0 v12)
  (move-object v2 v13)
  (move v3 v14)
  (move-wide v4 v15)
  (line 645)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xe)
  (move-result-object v11)
  (label lf758a)
  (line 646)
  (if-ne v11 v1 lf7598)
  (line 647)
  (invoke-virtual-quick {v12 v9 v1} vtable #0x10)
  (line 648)
  (const/4 v0 0)
  (goto lf7556)
  (label lf7598)
  (line 651)
  (invoke-virtual-quick {v1} vtable #0xe)
  (move-result v0)
  (if-nez v0 lf75b8)
  (line 652)
  (invoke-virtual-quick {v12 v9 v1} vtable #0xc)
  (line 653)
  (if-eqz v11 lf75b2)
  (line 654)
  (iput-object-quick v1 v1 )
  (label lf75b2)
  (line 655)
  (const/4 v0 0)
  (iput-object-quick v0 v1 )
  (label lf75b8)
  (line 657)
  (if-eqz v11 lf75c0)
  (move-object v0 v11)
  (goto lf7556)
  (label lf75c0)
  (move-object v0 v13)
  (goto lf7556)
  (label lf75c4)
  (line 660)
  (iget-object-quick v8 v6 )
  (line 661)
  (iget-object-quick v0 v12 )
  (if-ne v9 v0 lf750a)
  (if-eqz v8 lf750a)
  (iget-object-quick v0 v12 )
  (if-ne v6 v0 lf750a)
  (line 664)
  (iget-object-quick v11 v8 )
  (line 665)
  (if-eqz v11 lf7602)
  (const/4 v0 1)
  (label lf75e6)
  (if-eq v7 v0 lf75fa)
  (if-eq v11 v8 lf75fa)
  (invoke-virtual-quick {v8 v11 v13} vtable #0xb)
  (move-result v0)
  (if-nez v0 lf7606)
  (label lf75fa)
  (line 668)
  (invoke-virtual-quick {v12 v6 v8} vtable #0xc)
  (goto lf750a)
  (label lf7602)
  (line 665)
  (const/4 v0 0)
  (goto lf75e6)
  (label lf7606)
  (line 672)
  (invoke-virtual-quick {v12 v6 v8} vtable #0xc)
  (line 673)
  (iget-object-quick v0 v8 )
  (invoke-static {v0} java/util/concurrent/locks/LockSupport/unpark [object java/lang/Thread] )
  (line 674)
  (if-eqz v11 lf761e)
  (move-object v0 v11)
  (goto lf7556)
  (label lf761e)
  (move-object v0 v13)
  (goto lf7556)
)

)
