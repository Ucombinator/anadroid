(interface (attrs public abstract ) javax/microedition/khronos/egl/EGL10
 (super java/lang/Object)
 (source "EGL10.java")
 (implements javax/microedition/khronos/egl/EGL)

 (field (attrs public static final ) EGL_ALPHA_FORMAT int 12424); 0x3088 )
 (field (attrs public static final ) EGL_ALPHA_MASK_SIZE int 12350); 0x303e )
 (field (attrs public static final ) EGL_ALPHA_SIZE int 12321); 0x3021 )
 (field (attrs public static final ) EGL_BAD_ACCESS int 12290); 0x3002 )
 (field (attrs public static final ) EGL_BAD_ALLOC int 12291); 0x3003 )
 (field (attrs public static final ) EGL_BAD_ATTRIBUTE int 12292); 0x3004 )
 (field (attrs public static final ) EGL_BAD_CONFIG int 12293); 0x3005 )
 (field (attrs public static final ) EGL_BAD_CONTEXT int 12294); 0x3006 )
 (field (attrs public static final ) EGL_BAD_CURRENT_SURFACE int 12295); 0x3007 )
 (field (attrs public static final ) EGL_BAD_DISPLAY int 12296); 0x3008 )
 (field (attrs public static final ) EGL_BAD_MATCH int 12297); 0x3009 )
 (field (attrs public static final ) EGL_BAD_NATIVE_PIXMAP int 12298); 0x300a )
 (field (attrs public static final ) EGL_BAD_NATIVE_WINDOW int 12299); 0x300b )
 (field (attrs public static final ) EGL_BAD_PARAMETER int 12300); 0x300c )
 (field (attrs public static final ) EGL_BAD_SURFACE int 12301); 0x300d )
 (field (attrs public static final ) EGL_BLUE_SIZE int 12322); 0x3022 )
 (field (attrs public static final ) EGL_BUFFER_SIZE int 12320); 0x3020 )
 (field (attrs public static final ) EGL_COLORSPACE int 12423); 0x3087 )
 (field (attrs public static final ) EGL_COLOR_BUFFER_TYPE int 12351); 0x303f )
 (field (attrs public static final ) EGL_CONFIG_CAVEAT int 12327); 0x3027 )
 (field (attrs public static final ) EGL_CONFIG_ID int 12328); 0x3028 )
 (field (attrs public static final ) EGL_CORE_NATIVE_ENGINE int 12379); 0x305b )
 (field (attrs public static final ) EGL_DEFAULT_DISPLAY [object java/lang/Object] null )
 (field (attrs public static final ) EGL_DEPTH_SIZE int 12325); 0x3025 )
 (field (attrs public static final ) EGL_DONT_CARE int -1); 0xffffffff )
 (field (attrs public static final ) EGL_DRAW int 12377); 0x3059 )
 (field (attrs public static final ) EGL_EXTENSIONS int 12373); 0x3055 )
 (field (attrs public static final ) EGL_GREEN_SIZE int 12323); 0x3023 )
 (field (attrs public static final ) EGL_HEIGHT int 12374); 0x3056 )
 (field (attrs public static final ) EGL_HORIZONTAL_RESOLUTION int 12432); 0x3090 )
 (field (attrs public static final ) EGL_LARGEST_PBUFFER int 12376); 0x3058 )
 (field (attrs public static final ) EGL_LEVEL int 12329); 0x3029 )
 (field (attrs public static final ) EGL_LUMINANCE_BUFFER int 12431); 0x308f )
 (field (attrs public static final ) EGL_LUMINANCE_SIZE int 12349); 0x303d )
 (field (attrs public static final ) EGL_MAX_PBUFFER_HEIGHT int 12330); 0x302a )
 (field (attrs public static final ) EGL_MAX_PBUFFER_PIXELS int 12331); 0x302b )
 (field (attrs public static final ) EGL_MAX_PBUFFER_WIDTH int 12332); 0x302c )
 (field (attrs public static final ) EGL_NATIVE_RENDERABLE int 12333); 0x302d )
 (field (attrs public static final ) EGL_NATIVE_VISUAL_ID int 12334); 0x302e )
 (field (attrs public static final ) EGL_NATIVE_VISUAL_TYPE int 12335); 0x302f )
 (field (attrs public static final ) EGL_NONE int 12344); 0x3038 )
 (field (attrs public static final ) EGL_NON_CONFORMANT_CONFIG int 12369); 0x3051 )
 (field (attrs public static final ) EGL_NOT_INITIALIZED int 12289); 0x3001 )
 (field (attrs public static final ) EGL_NO_CONTEXT [object javax/microedition/khronos/egl/EGLContext] null )
 (field (attrs public static final ) EGL_NO_DISPLAY [object javax/microedition/khronos/egl/EGLDisplay] null )
 (field (attrs public static final ) EGL_NO_SURFACE [object javax/microedition/khronos/egl/EGLSurface] null )
 (field (attrs public static final ) EGL_PBUFFER_BIT int 1); 0x1 )
 (field (attrs public static final ) EGL_PIXEL_ASPECT_RATIO int 12434); 0x3092 )
 (field (attrs public static final ) EGL_PIXMAP_BIT int 2); 0x2 )
 (field (attrs public static final ) EGL_READ int 12378); 0x305a )
 (field (attrs public static final ) EGL_RED_SIZE int 12324); 0x3024 )
 (field (attrs public static final ) EGL_RENDERABLE_TYPE int 12352); 0x3040 )
 (field (attrs public static final ) EGL_RENDER_BUFFER int 12422); 0x3086 )
 (field (attrs public static final ) EGL_RGB_BUFFER int 12430); 0x308e )
 (field (attrs public static final ) EGL_SAMPLES int 12337); 0x3031 )
 (field (attrs public static final ) EGL_SAMPLE_BUFFERS int 12338); 0x3032 )
 (field (attrs public static final ) EGL_SINGLE_BUFFER int 12421); 0x3085 )
 (field (attrs public static final ) EGL_SLOW_CONFIG int 12368); 0x3050 )
 (field (attrs public static final ) EGL_STENCIL_SIZE int 12326); 0x3026 )
 (field (attrs public static final ) EGL_SUCCESS int 12288); 0x3000 )
 (field (attrs public static final ) EGL_SURFACE_TYPE int 12339); 0x3033 )
 (field (attrs public static final ) EGL_TRANSPARENT_BLUE_VALUE int 12341); 0x3035 )
 (field (attrs public static final ) EGL_TRANSPARENT_GREEN_VALUE int 12342); 0x3036 )
 (field (attrs public static final ) EGL_TRANSPARENT_RED_VALUE int 12343); 0x3037 )
 (field (attrs public static final ) EGL_TRANSPARENT_RGB int 12370); 0x3052 )
 (field (attrs public static final ) EGL_TRANSPARENT_TYPE int 12340); 0x3034 )
 (field (attrs public static final ) EGL_VENDOR int 12371); 0x3053 )
 (field (attrs public static final ) EGL_VERSION int 12372); 0x3054 )
 (field (attrs public static final ) EGL_VERTICAL_RESOLUTION int 12433); 0x3091 )
 (field (attrs public static final ) EGL_WIDTH int 12375); 0x3057 )
 (field (attrs public static final ) EGL_WINDOW_BIT int 4); 0x4 )

(method (attrs static ) <clinit>()void
  (limit registers 1)
  (const/4 v0 0)
  (line 96)
  (sput-object v0 javax/microedition/khronos/egl/EGL10.EGL_DEFAULT_DISPLAY [object java/lang/Object])
  (line 97)
  (sput-object v0 javax/microedition/khronos/egl/EGL10.EGL_NO_DISPLAY [object javax/microedition/khronos/egl/EGLDisplay])
  (line 98)
  (sput-object v0 javax/microedition/khronos/egl/EGL10.EGL_NO_CONTEXT [object javax/microedition/khronos/egl/EGLContext])
  (line 99)
  (sput-object v0 javax/microedition/khronos/egl/EGL10.EGL_NO_SURFACE [object javax/microedition/khronos/egl/EGLSurface])
  (return-void )
 )

(method (attrs public abstract ) eglChooseConfig([object javax/microedition/khronos/egl/EGLDisplay] [array int] [array [object javax/microedition/khronos/egl/EGLConfig]] int [array int] )boolean
)

(method (attrs public abstract ) eglCopyBuffers([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLSurface] [object java/lang/Object] )boolean
)

(method (attrs public abstract ) eglCreateContext([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLConfig] [object javax/microedition/khronos/egl/EGLContext] [array int] )[object javax/microedition/khronos/egl/EGLContext]
)

(method (attrs public abstract ) eglCreatePbufferSurface([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLConfig] [array int] )[object javax/microedition/khronos/egl/EGLSurface]
)

(method (attrs public abstract ) eglCreatePixmapSurface([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLConfig] [object java/lang/Object] [array int] )[object javax/microedition/khronos/egl/EGLSurface]
)

(method (attrs public abstract ) eglCreateWindowSurface([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLConfig] [object java/lang/Object] [array int] )[object javax/microedition/khronos/egl/EGLSurface]
)

(method (attrs public abstract ) eglDestroyContext([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLContext] )boolean
)

(method (attrs public abstract ) eglDestroySurface([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLSurface] )boolean
)

(method (attrs public abstract ) eglGetConfigAttrib([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLConfig] int [array int] )boolean
)

(method (attrs public abstract ) eglGetConfigs([object javax/microedition/khronos/egl/EGLDisplay] [array [object javax/microedition/khronos/egl/EGLConfig]] int [array int] )boolean
)

(method (attrs public abstract ) eglGetCurrentContext()[object javax/microedition/khronos/egl/EGLContext]
)

(method (attrs public abstract ) eglGetCurrentDisplay()[object javax/microedition/khronos/egl/EGLDisplay]
)

(method (attrs public abstract ) eglGetCurrentSurface(int )[object javax/microedition/khronos/egl/EGLSurface]
)

(method (attrs public abstract ) eglGetDisplay([object java/lang/Object] )[object javax/microedition/khronos/egl/EGLDisplay]
)

(method (attrs public abstract ) eglGetError()int
)

(method (attrs public abstract ) eglInitialize([object javax/microedition/khronos/egl/EGLDisplay] [array int] )boolean
)

(method (attrs public abstract ) eglMakeCurrent([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLSurface] [object javax/microedition/khronos/egl/EGLSurface] [object javax/microedition/khronos/egl/EGLContext] )boolean
)

(method (attrs public abstract ) eglQueryContext([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLContext] int [array int] )boolean
)

(method (attrs public abstract ) eglQueryString([object javax/microedition/khronos/egl/EGLDisplay] int )[object java/lang/String]
)

(method (attrs public abstract ) eglQuerySurface([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLSurface] int [array int] )boolean
)

(method (attrs public abstract ) eglSwapBuffers([object javax/microedition/khronos/egl/EGLDisplay] [object javax/microedition/khronos/egl/EGLSurface] )boolean
)

(method (attrs public abstract ) eglTerminate([object javax/microedition/khronos/egl/EGLDisplay] )boolean
)

(method (attrs public abstract ) eglWaitGL()boolean
)

(method (attrs public abstract ) eglWaitNative(int [object java/lang/Object] )boolean
)

)
