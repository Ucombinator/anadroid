(class (attrs public synchronized ) java/util/concurrent/atomic/AtomicIntegerArray
 (super java/lang/Object)
 (source "AtomicIntegerArray.java")
 (implements java/io/Serializable)

 (field (attrs private static final ) base int 0); 0x0 )
 (field (attrs private static final ) scale int 0); 0x0 )
 (field (attrs private static final ) serialVersionUID long 934871003); 0x37b8ffdb )
 (field (attrs private static final ) unsafe [object sun/misc/Unsafe] )
 (field (attrs private final ) array [array int] )

(method (attrs static ) <clinit>()void
  (limit registers 3)
  (const-class v2 [array int])
  (line 24)
  (sget-object v0 java/util/concurrent/atomic/UnsafeAccess.THE_ONE [object sun/misc/Unsafe])
  (sput-object v0 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (line 26)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (const-class v1 [array int])
  (invoke-virtual-quick {v0 v2} vtable #0xb)
  (move-result v0)
  (sput v0 java/util/concurrent/atomic/AtomicIntegerArray.base int)
  (line 27)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (const-class v1 [array int])
  (invoke-virtual-quick {v0 v2} vtable #0xc)
  (move-result v0)
  (sput v0 java/util/concurrent/atomic/AtomicIntegerArray.scale int)
  (return-void )
 )

(method (attrs public ) <init>(int )void
  (limit registers 7)
  ; this: v5 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v6 (int)
  (const/4 v4 0)
  (line 41)
  (invoke-direct-empty {v5} java/lang/Object/<init> )
  (line 42)
  (new-array v0 v6 [array int])
  (iput-object-quick v0 v5 )
  (line 44)
  (if-lez v6 lf234a)
  (line 45)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v5 )
  (invoke-direct {v5 v4} java/util/concurrent/atomic/AtomicIntegerArray/rawIndex int )
  (move-result-wide v2)
  (invoke-virtual-quick {v0 v1 v2 v3v4} vtable #0x19)
  (label lf234a)
  (line 46)
  (return-void )
 )

(method (attrs public ) <init>([array int] )void
  (limit registers 10)
  ; this: v8 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v9 ([array int])
  (line 55)
  (invoke-direct-empty {v8} java/lang/Object/<init> )
  (line 56)
  (if-nez v9 lf2372)
  (line 57)
  (new-instance v3 java/lang/NullPointerException)
  (invoke-direct {v3} java/lang/NullPointerException/<init> )
  (throw v3)
  (label lf2372)
  (line 58)
  (array-length v2 v9)
  (line 59)
  (new-array v3 v2 [array int])
  (iput-object-quick v3 v8 )
  (line 60)
  (if-lez v2 lf23b8)
  (line 61)
  (const/4 v3 1)
  (sub-int v1 v2 v3)
  (label lf2386)
  (line 62)
  (const/4 v0 0)
  (label lf2388)
  (if-ge v0 v1 lf239e)
  (line 63)
  (iget-object-quick v3 v8 )
  (aget v4 v9 v0)
  (aput v4 v3 v0)
  (line 62)
  (add-int/lit8 v0 v0 1)
  (goto lf2388)
  (label lf239e)
  (line 65)
  (sget-object v3 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v4 v8 )
  (invoke-direct {v8 v1} java/util/concurrent/atomic/AtomicIntegerArray/rawIndex int )
  (move-result-wide v5)
  (aget v7 v9 v1)
  (invoke-virtual-quick {v3 v4 v5 v6v7} vtable #0x19)
  (label lf23b8)
  (line 67)
  (return-void )
 )

(method (attrs private ) rawIndex(int )long
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v4 (int)
  (line 31)
  (if-ltz v4 lf23da)
  (iget-object-quick v0 v3 )
  (array-length v0 v0)
  (if-lt v4 v0 lf240c)
  (label lf23da)
  (line 32)
  (new-instance v0 java/lang/IndexOutOfBoundsException)
  (new-instance v1 java/lang/StringBuilder)
  (invoke-direct {v1} java/lang/StringBuilder/<init> )
  (const-string v2 "index ")
  (invoke-virtual-quick {v1 v2} vtable #0x3b)
  (move-result-object v1)
  (invoke-virtual-quick {v1 v4} vtable #0x36)
  (move-result-object v1)
  (invoke-virtual-quick {v1} vtable #0x7)
  (move-result-object v1)
  (invoke-direct {v0 v1} java/lang/IndexOutOfBoundsException/<init> [object java/lang/String] )
  (throw v0)
  (label lf240c)
  (line 33)
  (sget v0 java/util/concurrent/atomic/AtomicIntegerArray.base int)
  (sget v1 java/util/concurrent/atomic/AtomicIntegerArray.scale int)
  (mul-int/2addr v1 v4)
  (add-int/2addr v0 v1)
  (int-to-long v0 v0)
  (return-wide v0)
 )

(method (attrs public final ) addAndGet(int int )int
  (limit registers 6)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v4 (int)
  ; parameter[1] : v5 (int)
  (label lf242c)
  (line 231)
  (invoke-virtual-quick {v3 v4} vtable #0xe)
  (move-result v0)
  (line 232)
  (add-int v1 v0 v5)
  (line 233)
  (invoke-virtual-quick {v3 v4 v0 v1} vtable #0xc)
  (move-result v2)
  (if-eqz v2 lf242c)
  (line 234)
  (return v1)
)

(method (attrs public final ) compareAndSet(int int int )boolean
  (limit registers 10)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v7 (int)
  ; parameter[1] : v8 (int)
  ; parameter[2] : v9 (int)
  (line 125)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v6 )
  (invoke-direct {v6 v7} java/util/concurrent/atomic/AtomicIntegerArray/rawIndex int )
  (move-result-wide v2)
  (move v4 v8)
  (move v5 v9)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xd)
  (move-result v0)
  (return v0)
)

(method (attrs public final ) decrementAndGet(int )int
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v4 (int)
  (label lf2488)
  (line 215)
  (invoke-virtual-quick {v3 v4} vtable #0xe)
  (move-result v0)
  (line 216)
  (const/4 v2 1)
  (sub-int v1 v0 v2)
  (line 217)
  (invoke-virtual-quick {v3 v4 v0 v1} vtable #0xc)
  (move-result v2)
  (if-eqz v2 lf2488)
  (line 218)
  (return v1)
)

(method (attrs public final ) get(int )int
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v5 (int)
  (line 85)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v4 )
  (invoke-direct {v4 v5} java/util/concurrent/atomic/AtomicIntegerArray/rawIndex int )
  (move-result-wide v2)
  (invoke-virtual-quick {v0 v1 v2 v3} vtable #0x11)
  (move-result v0)
  (return v0)
)

(method (attrs public final ) getAndAdd(int int )int
  (limit registers 6)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v4 (int)
  ; parameter[1] : v5 (int)
  (label lf24e0)
  (line 185)
  (invoke-virtual-quick {v3 v4} vtable #0xe)
  (move-result v0)
  (line 186)
  (add-int v1 v0 v5)
  (line 187)
  (invoke-virtual-quick {v3 v4 v0 v1} vtable #0xc)
  (move-result v2)
  (if-eqz v2 lf24e0)
  (line 188)
  (return v0)
)

(method (attrs public final ) getAndDecrement(int )int
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v4 (int)
  (label lf250c)
  (line 169)
  (invoke-virtual-quick {v3 v4} vtable #0xe)
  (move-result v0)
  (line 170)
  (const/4 v2 1)
  (sub-int v1 v0 v2)
  (line 171)
  (invoke-virtual-quick {v3 v4 v0 v1} vtable #0xc)
  (move-result v2)
  (if-eqz v2 lf250c)
  (line 172)
  (return v0)
)

(method (attrs public final ) getAndIncrement(int )int
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v4 (int)
  (label lf2538)
  (line 154)
  (invoke-virtual-quick {v3 v4} vtable #0xe)
  (move-result v0)
  (line 155)
  (add-int/lit8 v1 v0 1)
  (line 156)
  (invoke-virtual-quick {v3 v4 v0 v1} vtable #0xc)
  (move-result v2)
  (if-eqz v2 lf2538)
  (line 157)
  (return v0)
)

(method (attrs public final ) getAndSet(int int )int
  (limit registers 5)
  ; this: v2 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v3 (int)
  ; parameter[1] : v4 (int)
  (label lf2564)
  (line 108)
  (invoke-virtual-quick {v2 v3} vtable #0xe)
  (move-result v0)
  (line 109)
  (invoke-virtual-quick {v2 v3 v0 v4} vtable #0xc)
  (move-result v1)
  (if-eqz v1 lf2564)
  (line 110)
  (return v0)
)

(method (attrs public final ) incrementAndGet(int )int
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v4 (int)
  (label lf258c)
  (line 200)
  (invoke-virtual-quick {v3 v4} vtable #0xe)
  (move-result v0)
  (line 201)
  (add-int/lit8 v1 v0 1)
  (line 202)
  (invoke-virtual-quick {v3 v4 v0 v1} vtable #0xc)
  (move-result v2)
  (if-eqz v2 lf258c)
  (line 203)
  (return v1)
)

(method (attrs public final ) length()int
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  (line 75)
  (iget-object-quick v0 v1 )
  (array-length v0 v0)
  (return v0)
)

(method (attrs public final ) set(int int )void
  (limit registers 7)
  ; this: v4 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v5 (int)
  ; parameter[1] : v6 (int)
  (line 95)
  (sget-object v0 java/util/concurrent/atomic/AtomicIntegerArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v4 )
  (invoke-direct {v4 v5} java/util/concurrent/atomic/AtomicIntegerArray/rawIndex int )
  (move-result-wide v2)
  (invoke-virtual-quick {v0 v1 v2 v3v6} vtable #0x19)
  (line 96)
  (return-void )
)

(method (attrs public ) toString()[object java/lang/String]
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  (line 243)
  (iget-object-quick v0 v1 )
  (array-length v0 v0)
  (if-lez v0 lf260a)
  (line 244)
  (const/4 v0 0)
  (invoke-virtual-quick {v1 v0} vtable #0xe)
  (label lf260a)
  (line 245)
  (iget-object-quick v0 v1 )
  (invoke-static {v0} java/util/Arrays/toString [array int] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public final ) weakCompareAndSet(int int int )boolean
  (limit registers 5)
  ; this: v1 ([object java/util/concurrent/atomic/AtomicIntegerArray])
  ; parameter[0] : v2 (int)
  ; parameter[1] : v3 (int)
  ; parameter[2] : v4 (int)
  (line 143)
  (invoke-virtual-quick {v1 v2 v3 v4} vtable #0xc)
  (move-result v0)
  (return v0)
)

)
