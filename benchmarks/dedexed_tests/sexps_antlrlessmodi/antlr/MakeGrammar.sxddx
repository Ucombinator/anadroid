(class (attrs public ) antlr/MakeGrammar
 (super antlr/DefineGrammarSymbols)
 (source "MakeGrammar.java")

 (field (attrs protected ) blocks [object antlr/collections/Stack] )
 (field (attrs ) currentExceptionSpec [object antlr/ExceptionSpec] )
 (field (attrs protected ) grammarError boolean )
 (field (attrs protected ) lastRuleRef [object antlr/RuleRefElement] )
 (field (attrs protected ) nested int )
 (field (attrs protected ) ruleBlock [object antlr/RuleBlock] )
 (field (attrs protected ) ruleEnd [object antlr/RuleEndElement] )

(method (attrs public ) <init>([object antlr/Tool] [array [object java/lang/String]] [object antlr/LLkAnalyzer] )void
  (limit registers 6)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Tool])
  ; parameter[1] : v4 ([array [object java/lang/String]])
  ; parameter[2] : v5 ([object antlr/LLkAnalyzer])
  (const/4 v1 0)
  (line 27)
  (invoke-direct {v2 v3 v4 v5} antlr/DefineGrammarSymbols/<init> [object antlr/Tool] [array [object java/lang/String]] [object antlr/LLkAnalyzer] )
  (line 16)
  (new-instance v0 antlr/collections/impl/LList)
  (invoke-direct {v0} antlr/collections/impl/LList/<init> )
  (iput-object v0 v2 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (line 21)
  (iput v1 v2 antlr/MakeGrammar.nested int)
  (line 22)
  (iput-boolean v1 v2 antlr/MakeGrammar.grammarError boolean)
  (line 24)
  (const/4 v0 0)
  (iput-object v0 v2 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (line 28)
  (return-void )
 )

(method (attrs public static ) createNextTokenRule([object antlr/Grammar] [object antlr/collections/impl/Vector] [object java/lang/String] )[object antlr/RuleBlock]
  (limit registers 16)
  ; parameter[0] : v13 ([object antlr/Grammar])
  ; parameter[1] : v14 ([object antlr/collections/impl/Vector])
  ; parameter[2] : v15 ([object java/lang/String])
  (const/4 v12 1)
  (line 123)
  (new-instance v4 antlr/RuleBlock)
  (invoke-direct {v4 v13 v15} antlr/RuleBlock/<init> [object antlr/Grammar] [object java/lang/String] )
  (line 124)
  (invoke-virtual {v13} antlr/Grammar/getDefaultErrorHandler )
  (move-result v9)
  (invoke-virtual {v4 v9} antlr/RuleBlock/setDefaultErrorHandler boolean )
  (line 125)
  (new-instance v6 antlr/RuleEndElement)
  (invoke-direct {v6 v13} antlr/RuleEndElement/<init> [object antlr/Grammar] )
  (line 126)
  (invoke-virtual {v4 v6} antlr/RuleBlock/setEndElement [object antlr/RuleEndElement] )
  (line 127)
  (iput-object v4 v6 antlr/RuleEndElement.block [object antlr/AlternativeBlock])
  (line 129)
  (const/4 v1 0)
  (label l4447c)
  (invoke-virtual {v14} antlr/collections/impl/Vector/size )
  (move-result v9)
  (if-lt v1 v9 l44496)
  (line 169)
  (invoke-virtual {v4 v12} antlr/RuleBlock/setAutoGen boolean )
  (line 170)
  (invoke-virtual {v4} antlr/RuleBlock/prepareForAnalysis )
  (line 172)
  (return-object v4)
  (label l44496)
  (line 130)
  (invoke-virtual {v14 v1} antlr/collections/impl/Vector/elementAt int )
  (move-result-object v3)
  (check-cast v3 [object antlr/RuleSymbol])
  (line 131)
  (invoke-virtual {v3} antlr/RuleSymbol/isDefined )
  (move-result v9)
  (if-nez v9 l444f4)
  (line 132)
  (iget-object v9 v13 antlr/Grammar.antlrTool [object antlr/Tool])
  (new-instance v10 java/lang/StringBuilder)
  (const-string v11 "Lexer rule ")
  (invoke-direct {v10 v11} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v11 v3 antlr/RuleSymbol.id [object java/lang/String])
  (invoke-virtual {v11 v12} java/lang/String/substring int )
  (move-result-object v11)
  (invoke-virtual {v10 v11} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v10)
  (const-string v11 " is not defined")
  (invoke-virtual {v10 v11} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v10)
  (invoke-virtual {v10} java/lang/StringBuilder/toString )
  (move-result-object v10)
  (invoke-virtual {v9 v10} antlr/Tool/error [object java/lang/String] )
  (label l444ee)
  (line 129)
  (add-int/lit8 v1 v1 1)
  (goto l4447c)
  (label l444f4)
  (line 135)
  (iget-object v9 v3 antlr/RuleSymbol.access [object java/lang/String])
  (const-string v10 "public")
  (invoke-virtual {v9 v10} java/lang/String/equals [object java/lang/Object] )
  (move-result v9)
  (if-eqz v9 l444ee)
  (line 136)
  (new-instance v0 antlr/Alternative)
  (invoke-direct {v0} antlr/Alternative/<init> )
  (line 137)
  (invoke-virtual {v3} antlr/RuleSymbol/getBlock )
  (move-result-object v8)
  (line 138)
  (invoke-virtual {v8} antlr/RuleBlock/getAlternatives )
  (move-result-object v7)
  (line 141)
  (if-eqz v7 l44550)
  (invoke-virtual {v7} antlr/collections/impl/Vector/size )
  (move-result v9)
  (if-ne v9 v12 l44550)
  (line 142)
  (const/4 v9 0)
  (invoke-virtual {v7 v9} antlr/collections/impl/Vector/elementAt int )
  (move-result-object v2)
  (check-cast v2 [object antlr/Alternative])
  (label l44540)
  (line 143)
  (iget-object v9 v2 antlr/Alternative.semPred [object java/lang/String])
  (if-eqz v9 l44550)
  (line 145)
  (iget-object v9 v2 antlr/Alternative.semPred [object java/lang/String])
  (iput-object v9 v0 antlr/Alternative.semPred [object java/lang/String])
  (label l44550)
  (line 155)
  (new-instance v5 antlr/RuleRefElement)
  (line 156)
  (new-instance v9 antlr/CommonToken)
  (const/16 v10 28)
  (invoke-virtual {v3} antlr/RuleSymbol/getId )
  (move-result-object v11)
  (invoke-direct {v9 v10 v11} antlr/CommonToken/<init> int [object java/lang/String] )
  (line 155)
  (invoke-direct {v5 v13 v9 v12} antlr/RuleRefElement/<init> [object antlr/Grammar] [object antlr/Token] int )
  (line 158)
  (const-string v9 "theRetToken")
  (invoke-virtual {v5 v9} antlr/RuleRefElement/setLabel [object java/lang/String] )
  (line 159)
  (const-string v9 "nextToken")
  (iput-object v9 v5 antlr/RuleRefElement.enclosingRuleName [object java/lang/String])
  (line 160)
  (iput-object v6 v5 antlr/RuleRefElement.next [object antlr/AlternativeElement])
  (line 161)
  (invoke-virtual {v0 v5} antlr/Alternative/addElement [object antlr/AlternativeElement] )
  (line 162)
  (invoke-virtual {v0 v12} antlr/Alternative/setAutoGen boolean )
  (line 163)
  (invoke-virtual {v4 v0} antlr/RuleBlock/addAlternative [object antlr/Alternative] )
  (line 164)
  (invoke-virtual {v3 v5} antlr/RuleSymbol/addReference [object antlr/RuleRefElement] )
  (goto l444ee)
 )

(method (attrs private ) createOptionalRuleRef([object java/lang/String] [object antlr/Token] )[object antlr/AlternativeBlock]
  (limit registers 12)
  ; this: v9 ([object antlr/MakeGrammar])
  ; parameter[0] : v10 ([object java/lang/String])
  ; parameter[1] : v11 ([object antlr/Token])
  (line 178)
  (new-instance v1 antlr/AlternativeBlock)
  (iget-object v7 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (const/4 v8 0)
  (invoke-direct {v1 v7 v11 v8} antlr/AlternativeBlock/<init> [object antlr/Grammar] [object antlr/Token] boolean )
  (line 181)
  (invoke-static {v10} antlr/CodeGenerator/encodeLexerRuleName [object java/lang/String] )
  (move-result-object v3)
  (line 182)
  (iget-object v7 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v7 v3} antlr/Grammar/isDefined [object java/lang/String] )
  (move-result v7)
  (if-nez v7 l445ec)
  (line 183)
  (iget-object v7 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (new-instance v8 antlr/RuleSymbol)
  (invoke-direct {v8 v3} antlr/RuleSymbol/<init> [object java/lang/String] )
  (invoke-virtual {v7 v8} antlr/Grammar/define [object antlr/RuleSymbol] )
  (label l445ec)
  (line 188)
  (new-instance v6 antlr/CommonToken)
  (const/16 v7 24)
  (invoke-direct {v6 v7 v10} antlr/CommonToken/<init> int [object java/lang/String] )
  (line 189)
  (invoke-virtual {v11} antlr/Token/getLine )
  (move-result v7)
  (invoke-virtual {v6 v7} antlr/Token/setLine int )
  (line 190)
  (invoke-virtual {v11} antlr/Token/getColumn )
  (move-result v7)
  (invoke-virtual {v6 v7} antlr/Token/setLine int )
  (line 192)
  (new-instance v5 antlr/RuleRefElement)
  (iget-object v7 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (const/4 v8 1)
  (invoke-direct {v5 v7 v6 v8} antlr/RuleRefElement/<init> [object antlr/Grammar] [object antlr/Token] int )
  (line 194)
  (iget-object v7 v9 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (iget-object v7 v7 antlr/RuleBlock.ruleName [object java/lang/String])
  (iput-object v7 v5 antlr/RuleRefElement.enclosingRuleName [object java/lang/String])
  (line 197)
  (new-instance v2 antlr/BlockEndElement)
  (iget-object v7 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v2 v7} antlr/BlockEndElement/<init> [object antlr/Grammar] )
  (line 198)
  (iput-object v1 v2 antlr/BlockEndElement.block [object antlr/AlternativeBlock])
  (line 201)
  (new-instance v0 antlr/Alternative)
  (invoke-direct {v0 v5} antlr/Alternative/<init> [object antlr/AlternativeElement] )
  (line 202)
  (invoke-virtual {v0 v2} antlr/Alternative/addElement [object antlr/AlternativeElement] )
  (line 205)
  (invoke-virtual {v1 v0} antlr/AlternativeBlock/addAlternative [object antlr/Alternative] )
  (line 208)
  (new-instance v4 antlr/Alternative)
  (invoke-direct {v4} antlr/Alternative/<init> )
  (line 209)
  (invoke-virtual {v4 v2} antlr/Alternative/addElement [object antlr/AlternativeElement] )
  (line 211)
  (invoke-virtual {v1 v4} antlr/AlternativeBlock/addAlternative [object antlr/Alternative] )
  (line 213)
  (invoke-virtual {v1} antlr/AlternativeBlock/prepareForAnalysis )
  (line 214)
  (return-object v1)
 )

(method (attrs private ) labelElement([object antlr/AlternativeElement] [object antlr/Token] )void
  (limit registers 11)
  ; this: v8 ([object antlr/MakeGrammar])
  ; parameter[0] : v9 ([object antlr/AlternativeElement])
  ; parameter[1] : v10 ([object antlr/Token])
  (line 383)
  (if-eqz v10 l446be)
  (line 385)
  (const/4 v1 0)
  (label l4468e)
  (iget-object v3 v8 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (iget-object v3 v3 antlr/RuleBlock.labeledElements [object antlr/collections/impl/Vector])
  (invoke-virtual {v3} antlr/collections/impl/Vector/size )
  (move-result v3)
  (if-lt v1 v3 l446c0)
  (line 394)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v9 v3} antlr/AlternativeElement/setLabel [object java/lang/String] )
  (line 395)
  (iget-object v3 v8 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (iget-object v3 v3 antlr/RuleBlock.labeledElements [object antlr/collections/impl/Vector])
  (invoke-virtual {v3 v9} antlr/collections/impl/Vector/appendElement [object java/lang/Object] )
  (label l446be)
  (line 397)
  (return-void )
  (label l446c0)
  (line 386)
  (iget-object v3 v8 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (iget-object v3 v3 antlr/RuleBlock.labeledElements [object antlr/collections/impl/Vector])
  (invoke-virtual {v3 v1} antlr/collections/impl/Vector/elementAt int )
  (move-result-object v0)
  (check-cast v0 [object antlr/AlternativeElement])
  (line 387)
  (invoke-virtual {v0} antlr/AlternativeElement/getLabel )
  (move-result-object v2)
  (line 388)
  (if-eqz v2 l4474e)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/String/equals [object java/lang/Object] )
  (move-result v3)
  (if-eqz v3 l4474e)
  (line 389)
  (iget-object v3 v8 antlr/MakeGrammar.tool [object antlr/Tool])
  (new-instance v4 java/lang/StringBuilder)
  (const-string v5 "Label '")
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v5)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (const-string v5 "' has already been defined")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (iget-object v5 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v5} antlr/Grammar/getFilename )
  (move-result-object v5)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v6)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v7)
  (invoke-virtual {v3 v4 v5 v6 v7} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (goto l446be)
  (label l4474e)
  (line 385)
  (add-int/lit8 v1 v1 1)
  (goto l4468e)
 )

(method (attrs public static ) setBlock([object antlr/AlternativeBlock] [object antlr/AlternativeBlock] )void
  (limit registers 3)
  ; parameter[0] : v1 ([object antlr/AlternativeBlock])
  ; parameter[1] : v2 ([object antlr/AlternativeBlock])
  (line 738)
  (invoke-virtual {v2} antlr/AlternativeBlock/getAlternatives )
  (move-result-object v0)
  (invoke-virtual {v1 v0} antlr/AlternativeBlock/setAlternatives [object antlr/collections/impl/Vector] )
  (line 739)
  (iget-object v0 v2 antlr/AlternativeBlock.initAction [object java/lang/String])
  (iput-object v0 v1 antlr/AlternativeBlock.initAction [object java/lang/String])
  (line 741)
  (iget-object v0 v2 antlr/AlternativeBlock.label [object java/lang/String])
  (iput-object v0 v1 antlr/AlternativeBlock.label [object java/lang/String])
  (line 742)
  (iget-boolean v0 v2 antlr/AlternativeBlock.hasASynPred boolean)
  (iput-boolean v0 v1 antlr/AlternativeBlock.hasASynPred boolean)
  (line 743)
  (iget-boolean v0 v2 antlr/AlternativeBlock.hasAnAction boolean)
  (iput-boolean v0 v1 antlr/AlternativeBlock.hasAnAction boolean)
  (line 744)
  (iget-boolean v0 v2 antlr/AlternativeBlock.warnWhenFollowAmbig boolean)
  (iput-boolean v0 v1 antlr/AlternativeBlock.warnWhenFollowAmbig boolean)
  (line 745)
  (iget-boolean v0 v2 antlr/AlternativeBlock.generateAmbigWarnings boolean)
  (iput-boolean v0 v1 antlr/AlternativeBlock.generateAmbigWarnings boolean)
  (line 746)
  (iget v0 v2 antlr/AlternativeBlock.line int)
  (iput v0 v1 antlr/AlternativeBlock.line int)
  (line 747)
  (iget-boolean v0 v2 antlr/AlternativeBlock.greedy boolean)
  (iput-boolean v0 v1 antlr/AlternativeBlock.greedy boolean)
  (line 748)
  (iget-boolean v0 v2 antlr/AlternativeBlock.greedySet boolean)
  (iput-boolean v0 v1 antlr/AlternativeBlock.greedySet boolean)
  (line 749)
  (return-void )
 )

(method (attrs public ) abortGrammar()void
  (limit registers 5)
  ; this: v4 ([object antlr/MakeGrammar])
  (line 32)
  (const-string v0 "unknown grammar")
  (line 33)
  (iget-object v1 v4 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (if-eqz v1 l447e4)
  (line 34)
  (iget-object v1 v4 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v1} antlr/Grammar/getClassName )
  (move-result-object v0)
  (label l447e4)
  (line 36)
  (iget-object v1 v4 antlr/MakeGrammar.tool [object antlr/Tool])
  (new-instance v2 java/lang/StringBuilder)
  (const-string v3 "aborting grammar '")
  (invoke-direct {v2 v3} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v2 v0} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "' due to errors")
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual {v2} java/lang/StringBuilder/toString )
  (move-result-object v2)
  (invoke-virtual {v1 v2} antlr/Tool/error [object java/lang/String] )
  (line 37)
  (invoke-super {v4} antlr/DefineGrammarSymbols/abortGrammar )
  (line 38)
  (return-void )
)

(method (attrs protected ) addElementToCurrentAlt([object antlr/AlternativeElement] )void
  (limit registers 3)
  ; this: v1 ([object antlr/MakeGrammar])
  ; parameter[0] : v2 ([object antlr/AlternativeElement])
  (line 41)
  (iget-object v0 v1 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (iget-object v0 v0 antlr/RuleBlock.ruleName [object java/lang/String])
  (iput-object v0 v2 antlr/AlternativeElement.enclosingRuleName [object java/lang/String])
  (line 42)
  (invoke-virtual {v1} antlr/MakeGrammar/context )
  (move-result-object v0)
  (invoke-virtual {v0 v2} antlr/BlockContext/addAlternativeElement [object antlr/AlternativeElement] )
  (line 43)
  (return-void )
)

(method (attrs public ) beginAlt(boolean )void
  (limit registers 4)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 (boolean)
  (line 46)
  (invoke-super {v2 v3} antlr/DefineGrammarSymbols/beginAlt boolean )
  (line 47)
  (new-instance v0 antlr/Alternative)
  (invoke-direct {v0} antlr/Alternative/<init> )
  (line 48)
  (invoke-virtual {v0 v3} antlr/Alternative/setAutoGen boolean )
  (line 49)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v1)
  (iget-object v1 v1 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v1 v0} antlr/AlternativeBlock/addAlternative [object antlr/Alternative] )
  (line 50)
  (return-void )
)

(method (attrs public ) beginChildList()void
  (limit registers 3)
  ; this: v2 ([object antlr/MakeGrammar])
  (line 53)
  (invoke-super {v2} antlr/DefineGrammarSymbols/beginChildList )
  (line 54)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (new-instance v1 antlr/Alternative)
  (invoke-direct {v1} antlr/Alternative/<init> )
  (invoke-virtual {v0 v1} antlr/AlternativeBlock/addAlternative [object antlr/Alternative] )
  (line 55)
  (return-void )
)

(method (attrs public ) beginExceptionGroup()void
  (limit registers 3)
  ; this: v2 ([object antlr/MakeGrammar])
  (line 59)
  (invoke-super {v2} antlr/DefineGrammarSymbols/beginExceptionGroup )
  (line 60)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (instance-of v0 v0 antlr/RuleBlock)
  (if-nez v0 l448f4)
  (line 61)
  (iget-object v0 v2 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "beginExceptionGroup called outside of rule block")
  (invoke-virtual {v0 v1} antlr/Tool/panic [object java/lang/String] )
  (label l448f4)
  (line 63)
  (return-void )
)

(method (attrs public ) beginExceptionSpec([object antlr/Token] )void
  (limit registers 4)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Token])
  (line 68)
  (if-eqz v3 l44932)
  (line 69)
  (invoke-virtual {v3} antlr/Token/getText )
  (move-result-object v0)
  (const-string v1 " \n\r\t")
  (invoke-static {v0 v1} antlr/StringUtils/stripBack [object java/lang/String] [object java/lang/String] )
  (move-result-object v0)
  (const-string v1 " \n\r\t")
  (invoke-static {v0 v1} antlr/StringUtils/stripFront [object java/lang/String] [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v3 v0} antlr/Token/setText [object java/lang/String] )
  (label l44932)
  (line 71)
  (invoke-super {v2 v3} antlr/DefineGrammarSymbols/beginExceptionSpec [object antlr/Token] )
  (line 74)
  (new-instance v0 antlr/ExceptionSpec)
  (invoke-direct {v0 v3} antlr/ExceptionSpec/<init> [object antlr/Token] )
  (iput-object v0 v2 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (line 75)
  (return-void )
)

(method (attrs public ) beginSubRule([object antlr/Token] [object antlr/Token] boolean )void
  (limit registers 7)
  ; this: v3 ([object antlr/MakeGrammar])
  ; parameter[0] : v4 ([object antlr/Token])
  ; parameter[1] : v5 ([object antlr/Token])
  ; parameter[2] : v6 (boolean)
  (line 78)
  (invoke-super {v3 v4 v5 v6} antlr/DefineGrammarSymbols/beginSubRule [object antlr/Token] [object antlr/Token] boolean )
  (line 82)
  (iget-object v0 v3 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (new-instance v1 antlr/BlockContext)
  (invoke-direct {v1} antlr/BlockContext/<init> )
  (invoke-interface {v0 v1} antlr/collections/Stack/push [object java/lang/Object] )
  (line 83)
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v0)
  (new-instance v1 antlr/AlternativeBlock)
  (iget-object v2 v3 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v1 v2 v5 v6} antlr/AlternativeBlock/<init> [object antlr/Grammar] [object antlr/Token] boolean )
  (iput-object v1 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (line 84)
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v0)
  (const/4 v1 0)
  (iput v1 v0 antlr/BlockContext.altNum int)
  (line 85)
  (iget v0 v3 antlr/MakeGrammar.nested int)
  (add-int/lit8 v0 v0 1)
  (iput v0 v3 antlr/MakeGrammar.nested int)
  (line 88)
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v0)
  (new-instance v1 antlr/BlockEndElement)
  (iget-object v2 v3 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v1 v2} antlr/BlockEndElement/<init> [object antlr/Grammar] )
  (iput-object v1 v0 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (line 90)
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v1)
  (iget-object v1 v1 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iput-object v1 v0 antlr/BlockEndElement.block [object antlr/AlternativeBlock])
  (line 91)
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-direct {v3 v0 v4} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (line 92)
  (return-void )
)

(method (attrs public ) beginTree([object antlr/Token] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object antlr/SemanticException])
  )
  (limit registers 7)
  ; this: v5 ([object antlr/MakeGrammar])
  ; parameter[0] : v6 ([object antlr/Token])
  (line 95)
  (iget-object v0 v5 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v0 v0 antlr/TreeWalkerGrammar)
  (if-nez v0 l44a46)
  (line 96)
  (iget-object v0 v5 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "Trees only allowed in TreeParser")
  (iget-object v2 v5 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2} antlr/Grammar/getFilename )
  (move-result-object v2)
  (invoke-virtual {v6} antlr/Token/getLine )
  (move-result v3)
  (invoke-virtual {v6} antlr/Token/getColumn )
  (move-result v4)
  (invoke-virtual {v0 v1 v2 v3 v4} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (line 97)
  (new-instance v0 antlr/SemanticException)
  (const-string v1 "Trees only allowed in TreeParser")
  (invoke-direct {v0 v1} antlr/SemanticException/<init> [object java/lang/String] )
  (throw v0)
  (label l44a46)
  (line 99)
  (invoke-super {v5 v6} antlr/DefineGrammarSymbols/beginTree [object antlr/Token] )
  (line 100)
  (iget-object v0 v5 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (new-instance v1 antlr/TreeBlockContext)
  (invoke-direct {v1} antlr/TreeBlockContext/<init> )
  (invoke-interface {v0 v1} antlr/collections/Stack/push [object java/lang/Object] )
  (line 101)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v0)
  (new-instance v1 antlr/TreeElement)
  (iget-object v2 v5 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v1 v2 v6} antlr/TreeElement/<init> [object antlr/Grammar] [object antlr/Token] )
  (iput-object v1 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (line 102)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v0)
  (const/4 v1 0)
  (iput v1 v0 antlr/BlockContext.altNum int)
  (line 103)
  (return-void )
)

(method (attrs public ) context()[object antlr/BlockContext]
  (limit registers 2)
  ; this: v1 ([object antlr/MakeGrammar])
  (line 106)
  (iget-object v0 v1 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v0} antlr/collections/Stack/height )
  (move-result v0)
  (if-nez v0 l44ab0)
  (line 107)
  (const/4 v0 0)
  (label l44aae)
  (line 110)
  (return-object v0)
  (label l44ab0)
  (iget-object v0 v1 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v0} antlr/collections/Stack/top )
  (move-result-object v0)
  (check-cast v0 [object antlr/BlockContext])
  (goto l44aae)
)

(method (attrs public ) defineRuleName([object antlr/Token] [object java/lang/String] boolean [object java/lang/String] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object antlr/SemanticException])
  )
  (limit registers 14)
  ; this: v9 ([object antlr/MakeGrammar])
  ; parameter[0] : v10 ([object antlr/Token])
  ; parameter[1] : v11 ([object java/lang/String])
  ; parameter[2] : v12 (boolean)
  ; parameter[3] : v13 ([object java/lang/String])
  (const/16 v8 24)
  (line 223)
  (iget v3 v10 antlr/Token.type int)
  (if-ne v3 v8 l44c06)
  (line 224)
  (iget-object v3 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v3 v3 antlr/LexerGrammar)
  (if-nez v3 l44b5a)
  (line 225)
  (iget-object v3 v9 antlr/MakeGrammar.tool [object antlr/Tool])
  (new-instance v4 java/lang/StringBuilder)
  (const-string v5 "Lexical rule ")
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v5)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (line 226)
  (const-string v5 " defined outside of lexer")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (line 227)
  (iget-object v5 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v5} antlr/Grammar/getFilename )
  (move-result-object v5)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v6)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v7)
  (line 225)
  (invoke-virtual {v3 v4 v5 v6 v7} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (line 228)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/String/toLowerCase )
  (move-result-object v3)
  (invoke-virtual {v10 v3} antlr/Token/setText [object java/lang/String] )
  (label l44b5a)
  (line 240)
  (invoke-super {v9 v10 v11 v12 v13} antlr/DefineGrammarSymbols/defineRuleName [object antlr/Token] [object java/lang/String] boolean [object java/lang/String] )
  (line 241)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v0)
  (label l44b68)
  (line 243)
  (iget v3 v10 antlr/Token.type int)
  (if-ne v3 v8 l44b78)
  (line 244)
  (invoke-static {v0} antlr/CodeGenerator/encodeLexerRuleName [object java/lang/String] )
  (move-result-object v0)
  (label l44b78)
  (line 246)
  (iget-object v3 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v3 v0} antlr/Grammar/getSymbol [object java/lang/String] )
  (move-result-object v2)
  (check-cast v2 [object antlr/RuleSymbol])
  (label l44b88)
  (line 247)
  (new-instance v1 antlr/RuleBlock)
  (iget-object v3 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v4)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v5)
  (invoke-direct {v1 v3 v4 v5 v12} antlr/RuleBlock/<init> [object antlr/Grammar] [object java/lang/String] int boolean )
  (label l44ba6)
  (line 250)
  (iget-object v3 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getDefaultErrorHandler )
  (move-result v3)
  (invoke-virtual {v1 v3} antlr/RuleBlock/setDefaultErrorHandler boolean )
  (line 252)
  (iput-object v1 v9 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (line 253)
  (iget-object v3 v9 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (new-instance v4 antlr/BlockContext)
  (invoke-direct {v4} antlr/BlockContext/<init> )
  (invoke-interface {v3 v4} antlr/collections/Stack/push [object java/lang/Object] )
  (line 254)
  (invoke-virtual {v9} antlr/MakeGrammar/context )
  (move-result-object v3)
  (iput-object v1 v3 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (line 255)
  (invoke-virtual {v2 v1} antlr/RuleSymbol/setBlock [object antlr/RuleBlock] )
  (line 256)
  (new-instance v3 antlr/RuleEndElement)
  (iget-object v4 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v3 v4} antlr/RuleEndElement/<init> [object antlr/Grammar] )
  (iput-object v3 v9 antlr/MakeGrammar.ruleEnd [object antlr/RuleEndElement])
  (line 257)
  (iget-object v3 v9 antlr/MakeGrammar.ruleEnd [object antlr/RuleEndElement])
  (invoke-virtual {v1 v3} antlr/RuleBlock/setEndElement [object antlr/RuleEndElement] )
  (line 258)
  (const/4 v3 0)
  (iput v3 v9 antlr/MakeGrammar.nested int)
  (line 259)
  (return-void )
  (label l44c06)
  (line 232)
  (iget-object v3 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v3 v3 antlr/LexerGrammar)
  (if-eqz v3 l44b5a)
  (line 233)
  (iget-object v3 v9 antlr/MakeGrammar.tool [object antlr/Tool])
  (new-instance v4 java/lang/StringBuilder)
  (const-string v5 "Lexical rule names must be upper case, '")
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v5)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (line 234)
  (const-string v5 "' is not")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (line 235)
  (iget-object v5 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v5} antlr/Grammar/getFilename )
  (move-result-object v5)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v6)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v7)
  (line 233)
  (invoke-virtual {v3 v4 v5 v6 v7} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (line 236)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/String/toUpperCase )
  (move-result-object v3)
  (invoke-virtual {v10 v3} antlr/Token/setText [object java/lang/String] )
  (goto/16 l44b5a)
)

(method (attrs public ) endAlt()void
  (limit registers 3)
  ; this: v2 ([object antlr/MakeGrammar])
  (line 262)
  (invoke-super {v2} antlr/DefineGrammarSymbols/endAlt )
  (line 263)
  (iget v0 v2 antlr/MakeGrammar.nested int)
  (if-nez v0 l44cc2)
  (line 264)
  (iget-object v0 v2 antlr/MakeGrammar.ruleEnd [object antlr/RuleEndElement])
  (invoke-virtual {v2 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (label l44cac)
  (line 269)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget v1 v0 antlr/BlockContext.altNum int)
  (add-int/lit8 v1 v1 1)
  (iput v1 v0 antlr/BlockContext.altNum int)
  (line 270)
  (return-void )
  (label l44cc2)
  (line 267)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (invoke-virtual {v2 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (goto l44cac)
)

(method (attrs public ) endChildList()void
  (limit registers 3)
  ; this: v2 ([object antlr/MakeGrammar])
  (line 273)
  (invoke-super {v2} antlr/DefineGrammarSymbols/endChildList )
  (line 278)
  (new-instance v0 antlr/BlockEndElement)
  (iget-object v1 v2 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v1} antlr/BlockEndElement/<init> [object antlr/Grammar] )
  (line 279)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v1)
  (iget-object v1 v1 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iput-object v1 v0 antlr/BlockEndElement.block [object antlr/AlternativeBlock])
  (line 280)
  (invoke-virtual {v2 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 281)
  (return-void )
)

(method (attrs public ) endExceptionGroup()void
  (limit registers 1)
  ; this: v0 ([object antlr/MakeGrammar])
  (line 284)
  (invoke-super {v0} antlr/DefineGrammarSymbols/endExceptionGroup )
  (line 285)
  (return-void )
)

(method (attrs public ) endExceptionSpec()void
  (limit registers 6)
  ; this: v5 ([object antlr/MakeGrammar])
  (line 288)
  (invoke-super {v5} antlr/DefineGrammarSymbols/endExceptionSpec )
  (line 289)
  (iget-object v0 v5 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (if-nez v0 l44d58)
  (line 290)
  (iget-object v0 v5 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "exception processing internal error -- no active exception spec")
  (invoke-virtual {v0 v1} antlr/Tool/panic [object java/lang/String] )
  (label l44d58)
  (line 292)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (instance-of v0 v0 antlr/RuleBlock)
  (if-eqz v0 l44d8e)
  (line 294)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (check-cast v0 [object antlr/RuleBlock])
  (iget-object v1 v5 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (invoke-virtual {v0 v1} antlr/RuleBlock/addExceptionSpec [object antlr/ExceptionSpec] )
  (label l44d86)
  (line 305)
  (const/4 v0 0)
  (iput-object v0 v5 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (line 306)
  (return-void )
  (label l44d8e)
  (line 298)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v0)
  (invoke-virtual {v0} antlr/BlockContext/currentAlt )
  (move-result-object v0)
  (iget-object v0 v0 antlr/Alternative.exceptionSpec [object antlr/ExceptionSpec])
  (if-eqz v0 l44dea)
  (line 299)
  (iget-object v0 v5 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "Alternative already has an exception specification")
  (iget-object v2 v5 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2} antlr/Grammar/getFilename )
  (move-result-object v2)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v3)
  (iget-object v3 v3 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v3} antlr/AlternativeBlock/getLine )
  (move-result v3)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v4)
  (iget-object v4 v4 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v4} antlr/AlternativeBlock/getColumn )
  (move-result v4)
  (invoke-virtual {v0 v1 v2 v3 v4} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (goto l44d86)
  (label l44dea)
  (line 302)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v0)
  (invoke-virtual {v0} antlr/BlockContext/currentAlt )
  (move-result-object v0)
  (iget-object v1 v5 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (iput-object v1 v0 antlr/Alternative.exceptionSpec [object antlr/ExceptionSpec])
  (goto l44d86)
)

(method (attrs public ) endGrammar()void
  (limit registers 2)
  ; this: v1 ([object antlr/MakeGrammar])
  (line 310)
  (iget-boolean v0 v1 antlr/MakeGrammar.grammarError boolean)
  (if-eqz v0 l44e24)
  (line 311)
  (invoke-virtual {v1} antlr/MakeGrammar/abortGrammar )
  (label l44e22)
  (line 316)
  (return-void )
  (label l44e24)
  (line 314)
  (invoke-super {v1} antlr/DefineGrammarSymbols/endGrammar )
  (goto l44e22)
)

(method (attrs public ) endRule([object java/lang/String] )void
  (limit registers 5)
  ; this: v3 ([object antlr/MakeGrammar])
  ; parameter[0] : v4 ([object java/lang/String])
  (line 319)
  (invoke-super {v3 v4} antlr/DefineGrammarSymbols/endRule [object java/lang/String] )
  (line 320)
  (iget-object v1 v3 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v1} antlr/collections/Stack/pop )
  (move-result-object v0)
  (check-cast v0 [object antlr/BlockContext])
  (line 322)
  (iget-object v1 v3 antlr/MakeGrammar.ruleEnd [object antlr/RuleEndElement])
  (iget-object v2 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iput-object v2 v1 antlr/RuleEndElement.block [object antlr/AlternativeBlock])
  (line 323)
  (iget-object v1 v3 antlr/MakeGrammar.ruleEnd [object antlr/RuleEndElement])
  (iget-object v1 v1 antlr/RuleEndElement.block [object antlr/AlternativeBlock])
  (invoke-virtual {v1} antlr/AlternativeBlock/prepareForAnalysis )
  (line 325)
  (return-void )
)

(method (attrs public ) endSubRule()void
  (limit registers 11)
  ; this: v10 ([object antlr/MakeGrammar])
  (const/4 v9 1)
  (line 328)
  (invoke-super {v10} antlr/DefineGrammarSymbols/endSubRule )
  (line 329)
  (iget v4 v10 antlr/MakeGrammar.nested int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v10 antlr/MakeGrammar.nested int)
  (line 331)
  (iget-object v4 v10 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v4} antlr/collections/Stack/pop )
  (move-result-object v1)
  (check-cast v1 [object antlr/BlockContext])
  (line 332)
  (iget-object v0 v1 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (line 337)
  (iget-boolean v4 v0 antlr/AlternativeBlock.not boolean)
  (if-eqz v4 l44f64)
  (line 338)
  (instance-of v4 v0 antlr/SynPredBlock)
  (if-nez v4 l44f64)
  (line 339)
  (instance-of v4 v0 antlr/ZeroOrMoreBlock)
  (if-nez v4 l44f64)
  (line 340)
  (instance-of v4 v0 antlr/OneOrMoreBlock)
  (if-nez v4 l44f64)
  (line 342)
  (iget-object v4 v10 antlr/MakeGrammar.analyzer [object antlr/LLkAnalyzer])
  (iget-object v5 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v5 v5 antlr/LexerGrammar)
  (invoke-virtual {v4 v0 v5} antlr/LLkAnalyzer/subruleCanBeInverted [object antlr/AlternativeBlock] boolean )
  (move-result v4)
  (if-nez v4 l44f64)
  (line 343)
  (const-string v4 "line.separator")
  (invoke-static {v4} java/lang/System/getProperty [object java/lang/String] )
  (move-result-object v2)
  (label l44eec)
  (line 344)
  (iget-object v4 v10 antlr/MakeGrammar.tool [object antlr/Tool])
  (line 345)
  (new-instance v5 java/lang/StringBuilder)
  (const-string v6 "This subrule cannot be inverted.  Only subrules of the form:")
  (invoke-direct {v5 v6} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v5 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (line 346)
  (const-string v6 "    (T1|T2|T3...) or")
  (invoke-virtual {v5 v6} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (invoke-virtual {v5 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (line 347)
  (const-string v6 "    ('c1'|'c2'|'c3'...)")
  (invoke-virtual {v5 v6} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (invoke-virtual {v5 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (line 348)
  (const-string v6 "may be inverted (ranges are also allowed).")
  (invoke-virtual {v5 v6} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (line 345)
  (invoke-virtual {v5} java/lang/StringBuilder/toString )
  (move-result-object v5)
  (line 349)
  (iget-object v6 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getFilename )
  (move-result-object v6)
  (line 350)
  (invoke-virtual {v0} antlr/AlternativeBlock/getLine )
  (move-result v7)
  (invoke-virtual {v0} antlr/AlternativeBlock/getColumn )
  (move-result v8)
  (line 344)
  (invoke-virtual {v4 v5 v6 v7 v8} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l44f64)
  (line 356)
  (instance-of v4 v0 antlr/SynPredBlock)
  (if-eqz v4 l44fb8)
  (move-object v3 v0)
  (line 359)
  (check-cast v3 [object antlr/SynPredBlock])
  (label l44f72)
  (line 360)
  (invoke-virtual {v10} antlr/MakeGrammar/context )
  (move-result-object v4)
  (iget-object v4 v4 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iput-boolean v9 v4 antlr/AlternativeBlock.hasASynPred boolean)
  (line 361)
  (invoke-virtual {v10} antlr/MakeGrammar/context )
  (move-result-object v4)
  (invoke-virtual {v4} antlr/BlockContext/currentAlt )
  (move-result-object v4)
  (iput-object v3 v4 antlr/Alternative.synPred [object antlr/SynPredBlock])
  (line 362)
  (iget-object v4 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (iput-boolean v9 v4 antlr/Grammar.hasSyntacticPredicate boolean)
  (line 363)
  (iget-object v4 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v3 v4} antlr/SynPredBlock/removeTrackingOfRuleRefs [object antlr/Grammar] )
  (label l44fa8)
  (line 368)
  (iget-object v4 v1 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (iget-object v4 v4 antlr/BlockEndElement.block [object antlr/AlternativeBlock])
  (invoke-virtual {v4} antlr/AlternativeBlock/prepareForAnalysis )
  (line 369)
  (return-void )
  (label l44fb8)
  (line 366)
  (invoke-virtual {v10 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (goto l44fa8)
)

(method (attrs public ) endTree()void
  (limit registers 3)
  ; this: v2 ([object antlr/MakeGrammar])
  (line 372)
  (invoke-super {v2} antlr/DefineGrammarSymbols/endTree )
  (line 373)
  (iget-object v1 v2 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v1} antlr/collections/Stack/pop )
  (move-result-object v0)
  (check-cast v0 [object antlr/BlockContext])
  (line 374)
  (iget-object v1 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v2 v1} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 375)
  (return-void )
)

(method (attrs public ) hasError()void
  (limit registers 2)
  ; this: v1 ([object antlr/MakeGrammar])
  (line 379)
  (const/4 v0 1)
  (iput-boolean v0 v1 antlr/MakeGrammar.grammarError boolean)
  (line 380)
  (return-void )
)

(method (attrs public ) noAutoGenSubRule()void
  (limit registers 3)
  ; this: v2 ([object antlr/MakeGrammar])
  (line 400)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (const/4 v1 0)
  (invoke-virtual {v0 v1} antlr/AlternativeBlock/setAutoGen boolean )
  (line 401)
  (return-void )
)

(method (attrs public ) oneOrMoreSubRule()void
  (limit registers 8)
  ; this: v7 ([object antlr/MakeGrammar])
  (line 404)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iget-boolean v2 v2 antlr/AlternativeBlock.not boolean)
  (if-eqz v2 l4509a)
  (line 405)
  (iget-object v2 v7 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v3 "'~' cannot be applied to (...)* subrule")
  (iget-object v4 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getFilename )
  (move-result-object v4)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v5)
  (iget-object v5 v5 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v5} antlr/AlternativeBlock/getLine )
  (move-result v5)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v6)
  (iget-object v6 v6 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v6} antlr/AlternativeBlock/getColumn )
  (move-result v6)
  (invoke-virtual {v2 v3 v4 v5 v6} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l4509a)
  (line 410)
  (new-instance v0 antlr/OneOrMoreBlock)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v2} antlr/OneOrMoreBlock/<init> [object antlr/Grammar] )
  (line 411)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-static {v0 v2} antlr/MakeGrammar/setBlock [object antlr/AlternativeBlock] [object antlr/AlternativeBlock] )
  (line 412)
  (iget-object v2 v7 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v2} antlr/collections/Stack/pop )
  (move-result-object v1)
  (check-cast v1 [object antlr/BlockContext])
  (line 413)
  (iget-object v2 v7 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (new-instance v3 antlr/BlockContext)
  (invoke-direct {v3} antlr/BlockContext/<init> )
  (invoke-interface {v2 v3} antlr/collections/Stack/push [object java/lang/Object] )
  (line 414)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iput-object v0 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (line 415)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v3 v1 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (iput-object v3 v2 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (line 416)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (iput-object v0 v2 antlr/BlockEndElement.block [object antlr/AlternativeBlock])
  (line 417)
  (return-void )
)

(method (attrs public ) optionalSubRule()void
  (limit registers 6)
  ; this: v5 ([object antlr/MakeGrammar])
  (line 420)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iget-boolean v0 v0 antlr/AlternativeBlock.not boolean)
  (if-eqz v0 l45172)
  (line 421)
  (iget-object v0 v5 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "'~' cannot be applied to (...)? subrule")
  (iget-object v2 v5 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2} antlr/Grammar/getFilename )
  (move-result-object v2)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v3)
  (iget-object v3 v3 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v3} antlr/AlternativeBlock/getLine )
  (move-result v3)
  (invoke-virtual {v5} antlr/MakeGrammar/context )
  (move-result-object v4)
  (iget-object v4 v4 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v4} antlr/AlternativeBlock/getColumn )
  (move-result v4)
  (invoke-virtual {v0 v1 v2 v3 v4} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l45172)
  (line 425)
  (const/4 v0 0)
  (invoke-virtual {v5 v0} antlr/MakeGrammar/beginAlt boolean )
  (line 426)
  (invoke-virtual {v5} antlr/MakeGrammar/endAlt )
  (line 427)
  (return-void )
)

(method (attrs public ) refAction([object antlr/Token] )void
  (limit registers 4)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Token])
  (line 430)
  (invoke-super {v2 v3} antlr/DefineGrammarSymbols/refAction [object antlr/Token] )
  (line 431)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (const/4 v1 1)
  (iput-boolean v1 v0 antlr/AlternativeBlock.hasAnAction boolean)
  (line 432)
  (new-instance v0 antlr/ActionElement)
  (iget-object v1 v2 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v1 v3} antlr/ActionElement/<init> [object antlr/Grammar] [object antlr/Token] )
  (invoke-virtual {v2 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 433)
  (return-void )
)

(method (attrs public ) refArgAction([object antlr/Token] )void
  (limit registers 4)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Token])
  (line 441)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (check-cast v0 [object antlr/RuleBlock])
  (invoke-virtual {v3} antlr/Token/getText )
  (move-result-object v1)
  (iput-object v1 v0 antlr/RuleBlock.argAction [object java/lang/String])
  (line 442)
  (return-void )
)

(method (attrs public ) refCharLiteral([object antlr/Token] [object antlr/Token] boolean int boolean )void
  (limit registers 13)
  ; this: v7 ([object antlr/MakeGrammar])
  ; parameter[0] : v8 ([object antlr/Token])
  ; parameter[1] : v9 ([object antlr/Token])
  ; parameter[2] : v10 (boolean)
  ; parameter[3] : v11 (int)
  ; parameter[4] : v12 (boolean)
  (line 445)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v2 v2 antlr/LexerGrammar)
  (if-nez v2 l4523c)
  (line 446)
  (iget-object v2 v7 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v3 "Character literal only valid in lexer")
  (iget-object v4 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getFilename )
  (move-result-object v4)
  (invoke-virtual {v8} antlr/Token/getLine )
  (move-result v5)
  (invoke-virtual {v8} antlr/Token/getColumn )
  (move-result v6)
  (invoke-virtual {v2 v3 v4 v5 v6} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l4523a)
  (line 468)
  (return-void )
  (label l4523c)
  (line 449)
  (invoke-super/range {v7 .. v12} antlr/DefineGrammarSymbols/refCharLiteral [object antlr/Token] [object antlr/Token] boolean int boolean )
  (line 450)
  (new-instance v0 antlr/CharLiteralElement)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (check-cast v2 [object antlr/LexerGrammar])
  (invoke-direct {v0 v2 v8 v10 v11} antlr/CharLiteralElement/<init> [object antlr/LexerGrammar] [object antlr/Token] boolean int )
  (line 454)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (check-cast v2 [object antlr/LexerGrammar])
  (iget-boolean v2 v2 antlr/LexerGrammar.caseSensitive boolean)
  (if-nez v2 l452be)
  (invoke-virtual {v0} antlr/CharLiteralElement/getType )
  (move-result v2)
  (const/16 v3 128)
  (if-ge v2 v3 l452be)
  (line 455)
  (invoke-virtual {v0} antlr/CharLiteralElement/getType )
  (move-result v2)
  (int-to-char v2 v2)
  (invoke-static {v2} java/lang/Character/toLowerCase char )
  (move-result v2)
  (invoke-virtual {v0} antlr/CharLiteralElement/getType )
  (move-result v3)
  (int-to-char v3 v3)
  (if-eq v2 v3 l452be)
  (line 457)
  (iget-object v2 v7 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v3 "Character literal must be lowercase when caseSensitive=false")
  (iget-object v4 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getFilename )
  (move-result-object v4)
  (invoke-virtual {v8} antlr/Token/getLine )
  (move-result v5)
  (invoke-virtual {v8} antlr/Token/getColumn )
  (move-result v6)
  (invoke-virtual {v2 v3 v4 v5 v6} antlr/Tool/warning [object java/lang/String] [object java/lang/String] int int )
  (label l452be)
  (line 460)
  (invoke-virtual {v7 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 461)
  (invoke-direct {v7 v0 v9} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (line 464)
  (iget-object v2 v7 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (invoke-virtual {v2} antlr/RuleBlock/getIgnoreRule )
  (move-result-object v1)
  (line 465)
  (if-nez v12 l4523a)
  (if-eqz v1 l4523a)
  (line 466)
  (invoke-direct {v7 v1 v8} antlr/MakeGrammar/createOptionalRuleRef [object java/lang/String] [object antlr/Token] )
  (move-result-object v2)
  (invoke-virtual {v7 v2} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (goto l4523a)
)

(method (attrs public ) refCharRange([object antlr/Token] [object antlr/Token] [object antlr/Token] int boolean )void
  (limit registers 16)
  ; this: v10 ([object antlr/MakeGrammar])
  ; parameter[0] : v11 ([object antlr/Token])
  ; parameter[1] : v12 ([object antlr/Token])
  ; parameter[2] : v13 ([object antlr/Token])
  ; parameter[3] : v14 (int)
  ; parameter[4] : v15 (boolean)
  (const/16 v9 128)
  (line 471)
  (iget-object v4 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v4 v4 antlr/LexerGrammar)
  (if-nez v4 l4533c)
  (line 472)
  (iget-object v4 v10 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v5 "Character range only valid in lexer")
  (iget-object v6 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getFilename )
  (move-result-object v6)
  (invoke-virtual {v11} antlr/Token/getLine )
  (move-result v7)
  (invoke-virtual {v11} antlr/Token/getColumn )
  (move-result v8)
  (invoke-virtual {v4 v5 v6 v7 v8} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l4533a)
  (line 502)
  (return-void )
  (label l4533c)
  (line 475)
  (invoke-virtual {v11} antlr/Token/getText )
  (move-result-object v4)
  (invoke-static {v4} antlr/ANTLRLexer/tokenTypeForCharLiteral [object java/lang/String] )
  (move-result v3)
  (line 476)
  (invoke-virtual {v12} antlr/Token/getText )
  (move-result-object v4)
  (invoke-static {v4} antlr/ANTLRLexer/tokenTypeForCharLiteral [object java/lang/String] )
  (move-result v2)
  (line 477)
  (if-ge v2 v3 l4538c)
  (line 478)
  (iget-object v4 v10 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v5 "Malformed range.")
  (iget-object v6 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getFilename )
  (move-result-object v6)
  (invoke-virtual {v11} antlr/Token/getLine )
  (move-result v7)
  (invoke-virtual {v11} antlr/Token/getColumn )
  (move-result v8)
  (invoke-virtual {v4 v5 v6 v7 v8} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (goto l4533a)
  (label l4538c)
  (line 483)
  (iget-object v4 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (check-cast v4 [object antlr/LexerGrammar])
  (iget-boolean v4 v4 antlr/LexerGrammar.caseSensitive boolean)
  (if-nez v4 l45418)
  (line 484)
  (if-ge v3 v9 l453da)
  (int-to-char v4 v3)
  (invoke-static {v4} java/lang/Character/toLowerCase char )
  (move-result v4)
  (int-to-char v5 v3)
  (if-eq v4 v5 l453da)
  (line 485)
  (iget-object v4 v10 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v5 "Character literal must be lowercase when caseSensitive=false")
  (iget-object v6 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getFilename )
  (move-result-object v6)
  (invoke-virtual {v11} antlr/Token/getLine )
  (move-result v7)
  (invoke-virtual {v11} antlr/Token/getColumn )
  (move-result v8)
  (invoke-virtual {v4 v5 v6 v7 v8} antlr/Tool/warning [object java/lang/String] [object java/lang/String] int int )
  (label l453da)
  (line 487)
  (if-ge v2 v9 l45418)
  (int-to-char v4 v2)
  (invoke-static {v4} java/lang/Character/toLowerCase char )
  (move-result v4)
  (int-to-char v5 v2)
  (if-eq v4 v5 l45418)
  (line 488)
  (iget-object v4 v10 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v5 "Character literal must be lowercase when caseSensitive=false")
  (iget-object v6 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getFilename )
  (move-result-object v6)
  (invoke-virtual {v12} antlr/Token/getLine )
  (move-result v7)
  (invoke-virtual {v12} antlr/Token/getColumn )
  (move-result v8)
  (invoke-virtual {v4 v5 v6 v7 v8} antlr/Tool/warning [object java/lang/String] [object java/lang/String] int int )
  (label l45418)
  (line 492)
  (invoke-super/range {v10 .. v15} antlr/DefineGrammarSymbols/refCharRange [object antlr/Token] [object antlr/Token] [object antlr/Token] int boolean )
  (line 493)
  (new-instance v0 antlr/CharRangeElement)
  (iget-object v4 v10 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (check-cast v4 [object antlr/LexerGrammar])
  (invoke-direct {v0 v4 v11 v12 v14} antlr/CharRangeElement/<init> [object antlr/LexerGrammar] [object antlr/Token] [object antlr/Token] int )
  (line 494)
  (invoke-virtual {v10 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 495)
  (invoke-direct {v10 v0 v13} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (line 498)
  (iget-object v4 v10 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (invoke-virtual {v4} antlr/RuleBlock/getIgnoreRule )
  (move-result-object v1)
  (line 499)
  (if-nez v15 l4533a)
  (if-eqz v1 l4533a)
  (line 500)
  (invoke-direct {v10 v1 v11} antlr/MakeGrammar/createOptionalRuleRef [object java/lang/String] [object antlr/Token] )
  (move-result-object v4)
  (invoke-virtual {v10 v4} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (goto/16 l4533a)
)

(method (attrs public ) refElementOption([object antlr/Token] [object antlr/Token] )void
  (limit registers 9)
  ; this: v6 ([object antlr/MakeGrammar])
  ; parameter[0] : v7 ([object antlr/Token])
  ; parameter[1] : v8 ([object antlr/Token])
  (line 532)
  (invoke-virtual {v6} antlr/MakeGrammar/context )
  (move-result-object v1)
  (invoke-virtual {v1} antlr/BlockContext/currentElement )
  (move-result-object v0)
  (label l45484)
  (line 533)
  (instance-of v1 v0 antlr/StringLiteralElement)
  (if-nez v1 l4549c)
  (line 534)
  (instance-of v1 v0 antlr/TokenRefElement)
  (if-nez v1 l4549c)
  (line 535)
  (instance-of v1 v0 antlr/WildcardElement)
  (if-eqz v1 l454a8)
  (label l4549c)
  (line 536)
  (check-cast v0 [object antlr/GrammarAtom])
  (label l454a0)
  (invoke-virtual {v0 v7 v8} antlr/GrammarAtom/setOption [object antlr/Token] [object antlr/Token] )
  (label l454a6)
  (line 543)
  (return-void )
  (label l454a8)
  (line 539)
  (iget-object v1 v6 antlr/MakeGrammar.tool [object antlr/Tool])
  (new-instance v2 java/lang/StringBuilder)
  (const-string v3 "cannot use element option (")
  (invoke-direct {v2 v3} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v7} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (line 540)
  (const-string v3 ") for this kind of element")
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual {v2} java/lang/StringBuilder/toString )
  (move-result-object v2)
  (line 541)
  (iget-object v3 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getFilename )
  (move-result-object v3)
  (invoke-virtual {v7} antlr/Token/getLine )
  (move-result v4)
  (invoke-virtual {v7} antlr/Token/getColumn )
  (move-result v5)
  (line 539)
  (invoke-virtual {v1 v2 v3 v4 v5} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (goto l454a6)
)

(method (attrs public ) refExceptionHandler([object antlr/Token] [object antlr/Token] )void
  (limit registers 5)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Token])
  ; parameter[1] : v4 ([object antlr/Token])
  (line 547)
  (invoke-super {v2 v3 v4} antlr/DefineGrammarSymbols/refExceptionHandler [object antlr/Token] [object antlr/Token] )
  (line 548)
  (iget-object v0 v2 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (if-nez v0 l45530)
  (line 549)
  (iget-object v0 v2 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "exception handler processing internal error")
  (invoke-virtual {v0 v1} antlr/Tool/panic [object java/lang/String] )
  (label l45530)
  (line 551)
  (iget-object v0 v2 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (new-instance v1 antlr/ExceptionHandler)
  (invoke-direct {v1 v3 v4} antlr/ExceptionHandler/<init> [object antlr/Token] [object antlr/Token] )
  (invoke-virtual {v0 v1} antlr/ExceptionSpec/addHandler [object antlr/ExceptionHandler] )
  (line 552)
  (return-void )
)

(method (attrs public ) refInitAction([object antlr/Token] )void
  (limit registers 4)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Token])
  (line 555)
  (invoke-super {v2 v3} antlr/DefineGrammarSymbols/refAction [object antlr/Token] )
  (line 556)
  (invoke-virtual {v2} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v3} antlr/Token/getText )
  (move-result-object v1)
  (invoke-virtual {v0 v1} antlr/AlternativeBlock/setInitAction [object java/lang/String] )
  (line 557)
  (return-void )
)

(method (attrs public ) refMemberAction([object antlr/Token] )void
  (limit registers 3)
  ; this: v1 ([object antlr/MakeGrammar])
  ; parameter[0] : v2 ([object antlr/Token])
  (line 560)
  (iget-object v0 v1 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (iput-object v2 v0 antlr/Grammar.classMemberAction [object antlr/Token])
  (line 561)
  (return-void )
)

(method (attrs public ) refPreambleAction([object antlr/Token] )void
  (limit registers 2)
  ; this: v0 ([object antlr/MakeGrammar])
  ; parameter[0] : v1 ([object antlr/Token])
  (line 564)
  (invoke-super {v0 v1} antlr/DefineGrammarSymbols/refPreambleAction [object antlr/Token] )
  (line 565)
  (return-void )
)

(method (attrs public ) refReturnAction([object antlr/Token] )void
  (limit registers 9)
  ; this: v7 ([object antlr/MakeGrammar])
  ; parameter[0] : v8 ([object antlr/Token])
  (line 569)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v2 v2 antlr/LexerGrammar)
  (if-eqz v2 l4563c)
  (line 570)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (check-cast v2 [object antlr/RuleBlock])
  (invoke-virtual {v2} antlr/RuleBlock/getRuleName )
  (move-result-object v2)
  (invoke-static {v2} antlr/CodeGenerator/encodeLexerRuleName [object java/lang/String] )
  (move-result-object v0)
  (label l455ec)
  (line 571)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2 v0} antlr/Grammar/getSymbol [object java/lang/String] )
  (move-result-object v1)
  (check-cast v1 [object antlr/RuleSymbol])
  (label l455fc)
  (line 572)
  (iget-object v2 v1 antlr/RuleSymbol.access [object java/lang/String])
  (const-string v3 "public")
  (invoke-virtual {v2 v3} java/lang/String/equals [object java/lang/Object] )
  (move-result v2)
  (if-eqz v2 l4563c)
  (line 573)
  (iget-object v2 v7 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v3 "public Lexical rules cannot specify return type")
  (iget-object v4 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getFilename )
  (move-result-object v4)
  (invoke-virtual {v8} antlr/Token/getLine )
  (move-result v5)
  (invoke-virtual {v8} antlr/Token/getColumn )
  (move-result v6)
  (invoke-virtual {v2 v3 v4 v5 v6} antlr/Tool/warning [object java/lang/String] [object java/lang/String] int int )
  (label l4563a)
  (line 578)
  (return-void )
  (label l4563c)
  (line 577)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (check-cast v2 [object antlr/RuleBlock])
  (invoke-virtual {v8} antlr/Token/getText )
  (move-result-object v3)
  (iput-object v3 v2 antlr/RuleBlock.returnAction [object java/lang/String])
  (goto l4563a)
)

(method (attrs public ) refRule([object antlr/Token] [object antlr/Token] [object antlr/Token] [object antlr/Token] int )void
  (limit registers 14)
  ; this: v8 ([object antlr/MakeGrammar])
  ; parameter[0] : v9 ([object antlr/Token])
  ; parameter[1] : v10 ([object antlr/Token])
  ; parameter[2] : v11 ([object antlr/Token])
  ; parameter[3] : v12 ([object antlr/Token])
  ; parameter[4] : v13 (int)
  (const/16 v7 24)
  (line 586)
  (iget-object v2 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v2 v2 antlr/LexerGrammar)
  (if-eqz v2 l456f2)
  (line 588)
  (iget v2 v10 antlr/Token.type int)
  (if-eq v2 v7 l456c2)
  (line 589)
  (iget-object v2 v8 antlr/MakeGrammar.tool [object antlr/Tool])
  (new-instance v3 java/lang/StringBuilder)
  (const-string v4 "Parser rule ")
  (invoke-direct {v3 v4} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v4)
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (const-string v4 " referenced in lexer")
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/StringBuilder/toString )
  (move-result-object v3)
  (invoke-virtual {v2 v3} antlr/Tool/error [object java/lang/String] )
  (label l456c0)
  (line 616)
  (return-void )
  (label l456c2)
  (line 592)
  (const/4 v2 2)
  (if-ne v13 v2 l456f2)
  (line 593)
  (iget-object v2 v8 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v3 "AST specification ^ not allowed in lexer")
  (iget-object v4 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getFilename )
  (move-result-object v4)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v5)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v6)
  (invoke-virtual {v2 v3 v4 v5 v6} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l456f2)
  (line 597)
  (invoke-super/range {v8 .. v13} antlr/DefineGrammarSymbols/refRule [object antlr/Token] [object antlr/Token] [object antlr/Token] [object antlr/Token] int )
  (line 598)
  (new-instance v2 antlr/RuleRefElement)
  (iget-object v3 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v2 v3 v10 v13} antlr/RuleRefElement/<init> [object antlr/Grammar] [object antlr/Token] int )
  (iput-object v2 v8 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (line 599)
  (if-eqz v12 l45720)
  (line 600)
  (iget-object v2 v8 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (invoke-virtual {v12} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v2 v3} antlr/RuleRefElement/setArgs [object java/lang/String] )
  (label l45720)
  (line 602)
  (if-eqz v9 l45736)
  (line 603)
  (iget-object v2 v8 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (invoke-virtual {v9} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v2 v3} antlr/RuleRefElement/setIdAssign [object java/lang/String] )
  (label l45736)
  (line 605)
  (iget-object v2 v8 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (invoke-virtual {v8 v2} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 607)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v0)
  (line 609)
  (iget v2 v10 antlr/Token.type int)
  (if-ne v2 v7 l45758)
  (line 610)
  (invoke-static {v0} antlr/CodeGenerator/encodeLexerRuleName [object java/lang/String] )
  (move-result-object v0)
  (label l45758)
  (line 613)
  (iget-object v2 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2 v0} antlr/Grammar/getSymbol [object java/lang/String] )
  (move-result-object v1)
  (check-cast v1 [object antlr/RuleSymbol])
  (line 614)
  (iget-object v2 v8 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (invoke-virtual {v1 v2} antlr/RuleSymbol/addReference [object antlr/RuleRefElement] )
  (line 615)
  (iget-object v2 v8 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (invoke-direct {v8 v2 v11} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (goto l456c0)
)

(method (attrs public ) refSemPred([object antlr/Token] )void
  (limit registers 5)
  ; this: v3 ([object antlr/MakeGrammar])
  ; parameter[0] : v4 ([object antlr/Token])
  (line 620)
  (invoke-super {v3 v4} antlr/DefineGrammarSymbols/refSemPred [object antlr/Token] )
  (line 622)
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v1)
  (invoke-virtual {v1} antlr/BlockContext/currentAlt )
  (move-result-object v1)
  (invoke-virtual {v1} antlr/Alternative/atStart )
  (move-result v1)
  (if-eqz v1 l457d0)
  (line 623)
  (invoke-virtual {v3} antlr/MakeGrammar/context )
  (move-result-object v1)
  (invoke-virtual {v1} antlr/BlockContext/currentAlt )
  (move-result-object v1)
  (invoke-virtual {v4} antlr/Token/getText )
  (move-result-object v2)
  (iput-object v2 v1 antlr/Alternative.semPred [object java/lang/String])
  (label l457ce)
  (line 631)
  (return-void )
  (label l457d0)
  (line 626)
  (new-instance v0 antlr/ActionElement)
  (iget-object v1 v3 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v1 v4} antlr/ActionElement/<init> [object antlr/Grammar] [object antlr/Token] )
  (line 627)
  (const/4 v1 1)
  (iput-boolean v1 v0 antlr/ActionElement.isSemPred boolean)
  (line 628)
  (invoke-virtual {v3 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (goto l457ce)
)

(method (attrs public ) refStringLiteral([object antlr/Token] [object antlr/Token] int boolean )void
  (limit registers 14)
  ; this: v9 ([object antlr/MakeGrammar])
  ; parameter[0] : v10 ([object antlr/Token])
  ; parameter[1] : v11 ([object antlr/Token])
  ; parameter[2] : v12 (int)
  ; parameter[3] : v13 (boolean)
  (line 634)
  (invoke-super {v9 v10 v11 v12 v13} antlr/DefineGrammarSymbols/refStringLiteral [object antlr/Token] [object antlr/Token] int boolean )
  (line 635)
  (iget-object v4 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v4 v4 antlr/TreeWalkerGrammar)
  (if-eqz v4 l4583e)
  (const/4 v4 2)
  (if-ne v12 v4 l4583e)
  (line 636)
  (iget-object v4 v9 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v5 "^ not allowed in here for tree-walker")
  (iget-object v6 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getFilename )
  (move-result-object v6)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v7)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v8)
  (invoke-virtual {v4 v5 v6 v7 v8} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l4583e)
  (line 638)
  (new-instance v3 antlr/StringLiteralElement)
  (iget-object v4 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v3 v4 v10 v12} antlr/StringLiteralElement/<init> [object antlr/Grammar] [object antlr/Token] int )
  (line 641)
  (iget-object v4 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v4 v4 antlr/LexerGrammar)
  (if-eqz v4 l45882)
  (iget-object v4 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (check-cast v4 [object antlr/LexerGrammar])
  (iget-boolean v4 v4 antlr/LexerGrammar.caseSensitive boolean)
  (if-nez v4 l45882)
  (line 642)
  (const/4 v1 1)
  (label l4586a)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/String/length )
  (move-result v4)
  (add-int/lit8 v4 v4 255)
  (if-lt v1 v4 l458b2)
  (label l45882)
  (line 651)
  (invoke-virtual {v9 v3} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 652)
  (invoke-direct {v9 v3 v11} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (line 655)
  (iget-object v4 v9 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (invoke-virtual {v4} antlr/RuleBlock/getIgnoreRule )
  (move-result-object v2)
  (label l4589a)
  (line 656)
  (if-nez v13 l458b0)
  (if-eqz v2 l458b0)
  (line 657)
  (invoke-direct {v9 v2 v10} antlr/MakeGrammar/createOptionalRuleRef [object java/lang/String] [object antlr/Token] )
  (move-result-object v4)
  (invoke-virtual {v9 v4} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (label l458b0)
  (line 659)
  (return-void )
  (label l458b2)
  (line 643)
  (invoke-virtual {v10} antlr/Token/getText )
  (move-result-object v4)
  (invoke-virtual {v4 v1} java/lang/String/charAt int )
  (move-result v0)
  (line 644)
  (const/16 v4 128)
  (if-ge v0 v4 l45902)
  (invoke-static {v0} java/lang/Character/toLowerCase char )
  (move-result v4)
  (if-eq v4 v0 l45902)
  (line 645)
  (iget-object v4 v9 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v5 "Characters of string literal must be lowercase when caseSensitive=false")
  (iget-object v6 v9 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getFilename )
  (move-result-object v6)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v7)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v8)
  (invoke-virtual {v4 v5 v6 v7 v8} antlr/Tool/warning [object java/lang/String] [object java/lang/String] int int )
  (goto l45882)
  (label l45902)
  (line 642)
  (add-int/lit8 v1 v1 1)
  (goto l4586a)
)

(method (attrs public ) refToken([object antlr/Token] [object antlr/Token] [object antlr/Token] [object antlr/Token] boolean int boolean )void
  (limit registers 16)
  ; this: v8 ([object antlr/MakeGrammar])
  ; parameter[0] : v9 ([object antlr/Token])
  ; parameter[1] : v10 ([object antlr/Token])
  ; parameter[2] : v11 ([object antlr/Token])
  ; parameter[3] : v12 ([object antlr/Token])
  ; parameter[4] : v13 (boolean)
  ; parameter[5] : v14 (int)
  ; parameter[6] : v15 (boolean)
  (line 663)
  (iget-object v0 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v0 v0 antlr/LexerGrammar)
  (if-eqz v0 l459b8)
  (line 665)
  (const/4 v0 2)
  (if-ne v14 v0 l45954)
  (line 666)
  (iget-object v0 v8 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "AST specification ^ not allowed in lexer")
  (iget-object v2 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2} antlr/Grammar/getFilename )
  (move-result-object v2)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v3)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v4)
  (invoke-virtual {v0 v1 v2 v3 v4} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l45954)
  (line 668)
  (if-eqz v13 l45982)
  (line 669)
  (iget-object v0 v8 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "~TOKEN is not allowed in lexer")
  (iget-object v2 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2} antlr/Grammar/getFilename )
  (move-result-object v2)
  (invoke-virtual {v10} antlr/Token/getLine )
  (move-result v3)
  (invoke-virtual {v10} antlr/Token/getColumn )
  (move-result v4)
  (invoke-virtual {v0 v1 v2 v3 v4} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l45982)
  (move-object v0 v8)
  (move-object v1 v9)
  (move-object v2 v10)
  (move-object v3 v11)
  (move-object v4 v12)
  (move v5 v14)
  (line 671)
  (invoke-virtual/range {v0 .. v5} antlr/MakeGrammar/refRule [object antlr/Token] [object antlr/Token] [object antlr/Token] [object antlr/Token] int )
  (line 674)
  (iget-object v0 v8 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (invoke-virtual {v0} antlr/RuleBlock/getIgnoreRule )
  (move-result-object v6)
  (label l459a0)
  (line 675)
  (if-nez v15 l459b6)
  (if-eqz v6 l459b6)
  (line 676)
  (invoke-direct {v8 v6 v10} antlr/MakeGrammar/createOptionalRuleRef [object java/lang/String] [object antlr/Token] )
  (move-result-object v0)
  (invoke-virtual {v8 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (label l459b6)
  (line 692)
  (return-void )
  (label l459b8)
  (line 681)
  (if-eqz v9 l459e6)
  (line 682)
  (iget-object v0 v8 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "Assignment from token reference only allowed in lexer")
  (iget-object v2 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2} antlr/Grammar/getFilename )
  (move-result-object v2)
  (invoke-virtual {v9} antlr/Token/getLine )
  (move-result v3)
  (invoke-virtual {v9} antlr/Token/getColumn )
  (move-result v4)
  (invoke-virtual {v0 v1 v2 v3 v4} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l459e6)
  (line 684)
  (if-eqz v12 l45a14)
  (line 685)
  (iget-object v0 v8 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v1 "Token reference arguments only allowed in lexer")
  (iget-object v2 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v2} antlr/Grammar/getFilename )
  (move-result-object v2)
  (invoke-virtual {v12} antlr/Token/getLine )
  (move-result v3)
  (invoke-virtual {v12} antlr/Token/getColumn )
  (move-result v4)
  (invoke-virtual {v0 v1 v2 v3 v4} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l45a14)
  (line 687)
  (invoke-super/range {v8 .. v15} antlr/DefineGrammarSymbols/refToken [object antlr/Token] [object antlr/Token] [object antlr/Token] [object antlr/Token] boolean int boolean )
  (line 688)
  (new-instance v7 antlr/TokenRefElement)
  (iget-object v0 v8 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v7 v0 v10 v13 v14} antlr/TokenRefElement/<init> [object antlr/Grammar] [object antlr/Token] boolean int )
  (line 689)
  (invoke-virtual {v8 v7} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 690)
  (invoke-direct {v8 v7 v11} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (goto l459b6)
)

(method (attrs public ) refTokenRange([object antlr/Token] [object antlr/Token] [object antlr/Token] int boolean )void
  (limit registers 12)
  ; this: v6 ([object antlr/MakeGrammar])
  ; parameter[0] : v7 ([object antlr/Token])
  ; parameter[1] : v8 ([object antlr/Token])
  ; parameter[2] : v9 ([object antlr/Token])
  ; parameter[3] : v10 (int)
  ; parameter[4] : v11 (boolean)
  (line 695)
  (iget-object v1 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (instance-of v1 v1 antlr/LexerGrammar)
  (if-eqz v1 l45a80)
  (line 696)
  (iget-object v1 v6 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v2 "Token range not allowed in lexer")
  (iget-object v3 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getFilename )
  (move-result-object v3)
  (invoke-virtual {v7} antlr/Token/getLine )
  (move-result v4)
  (invoke-virtual {v7} antlr/Token/getColumn )
  (move-result v5)
  (invoke-virtual {v1 v2 v3 v4 v5} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l45a7e)
  (line 707)
  (return-void )
  (label l45a80)
  (line 699)
  (invoke-super/range {v6 .. v11} antlr/DefineGrammarSymbols/refTokenRange [object antlr/Token] [object antlr/Token] [object antlr/Token] int boolean )
  (line 700)
  (new-instance v0 antlr/TokenRangeElement)
  (iget-object v1 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v1 v7 v8 v10} antlr/TokenRangeElement/<init> [object antlr/Grammar] [object antlr/Token] [object antlr/Token] int )
  (line 701)
  (iget v1 v0 antlr/TokenRangeElement.end int)
  (iget v2 v0 antlr/TokenRangeElement.begin int)
  (if-ge v1 v2 l45acc)
  (line 702)
  (iget-object v1 v6 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v2 "Malformed range.")
  (iget-object v3 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getFilename )
  (move-result-object v3)
  (invoke-virtual {v7} antlr/Token/getLine )
  (move-result v4)
  (invoke-virtual {v7} antlr/Token/getColumn )
  (move-result v5)
  (invoke-virtual {v1 v2 v3 v4 v5} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (goto l45a7e)
  (label l45acc)
  (line 705)
  (invoke-virtual {v6 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 706)
  (invoke-direct {v6 v0 v9} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (goto l45a7e)
)

(method (attrs public ) refTokensSpecElementOption([object antlr/Token] [object antlr/Token] [object antlr/Token] )void
  (limit registers 10)
  ; this: v6 ([object antlr/MakeGrammar])
  ; parameter[0] : v7 ([object antlr/Token])
  ; parameter[1] : v8 ([object antlr/Token])
  ; parameter[2] : v9 ([object antlr/Token])
  (line 512)
  (iget-object v1 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (iget-object v1 v1 antlr/Grammar.tokenManager [object antlr/TokenManager])
  (invoke-virtual {v7} antlr/Token/getText )
  (move-result-object v2)
  (invoke-interface {v1 v2} antlr/TokenManager/getTokenSymbol [object java/lang/String] )
  (move-result-object v0)
  (line 513)
  (if-nez v0 l45b44)
  (line 514)
  (iget-object v1 v6 antlr/MakeGrammar.tool [object antlr/Tool])
  (new-instance v2 java/lang/StringBuilder)
  (const-string v3 "cannot find ")
  (invoke-direct {v2 v3} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v7} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "in tokens {...}")
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual {v2} java/lang/StringBuilder/toString )
  (move-result-object v2)
  (invoke-virtual {v1 v2} antlr/Tool/panic [object java/lang/String] )
  (label l45b44)
  (line 516)
  (invoke-virtual {v8} antlr/Token/getText )
  (move-result-object v1)
  (const-string v2 "AST")
  (invoke-virtual {v1 v2} java/lang/String/equals [object java/lang/Object] )
  (move-result v1)
  (if-eqz v1 l45b6c)
  (line 517)
  (invoke-virtual {v9} antlr/Token/getText )
  (move-result-object v1)
  (invoke-virtual {v0 v1} antlr/TokenSymbol/setASTNodeType [object java/lang/String] )
  (label l45b6a)
  (line 525)
  (return-void )
  (label l45b6c)
  (line 520)
  (iget-object v1 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (iget-object v1 v1 antlr/Grammar.antlrTool [object antlr/Tool])
  (new-instance v2 java/lang/StringBuilder)
  (const-string v3 "invalid tokens {...} element option:")
  (invoke-direct {v2 v3} java/lang/StringBuilder/<init> [object java/lang/String] )
  (line 521)
  (invoke-virtual {v8} antlr/Token/getText )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual {v2} java/lang/StringBuilder/toString )
  (move-result-object v2)
  (line 522)
  (iget-object v3 v6 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getFilename )
  (move-result-object v3)
  (line 523)
  (invoke-virtual {v8} antlr/Token/getLine )
  (move-result v4)
  (invoke-virtual {v8} antlr/Token/getColumn )
  (move-result v5)
  (line 520)
  (invoke-virtual {v1 v2 v3 v4 v5} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (goto l45b6a)
)

(method (attrs public ) refTreeSpecifier([object antlr/Token] )void
  (limit registers 3)
  ; this: v1 ([object antlr/MakeGrammar])
  ; parameter[0] : v2 ([object antlr/Token])
  (line 710)
  (invoke-virtual {v1} antlr/MakeGrammar/context )
  (move-result-object v0)
  (invoke-virtual {v0} antlr/BlockContext/currentAlt )
  (move-result-object v0)
  (iput-object v2 v0 antlr/Alternative.treeSpecifier [object antlr/Token])
  (line 711)
  (return-void )
)

(method (attrs public ) refWildcard([object antlr/Token] [object antlr/Token] int )void
  (limit registers 6)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Token])
  ; parameter[1] : v4 ([object antlr/Token])
  ; parameter[2] : v5 (int)
  (line 714)
  (invoke-super {v2 v3 v4 v5} antlr/DefineGrammarSymbols/refWildcard [object antlr/Token] [object antlr/Token] int )
  (line 715)
  (new-instance v0 antlr/WildcardElement)
  (iget-object v1 v2 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v1 v3 v5} antlr/WildcardElement/<init> [object antlr/Grammar] [object antlr/Token] int )
  (line 716)
  (invoke-virtual {v2 v0} antlr/MakeGrammar/addElementToCurrentAlt [object antlr/AlternativeElement] )
  (line 717)
  (invoke-direct {v2 v0 v4} antlr/MakeGrammar/labelElement [object antlr/AlternativeElement] [object antlr/Token] )
  (line 718)
  (return-void )
)

(method (attrs public ) reset()void
  (limit registers 4)
  ; this: v3 ([object antlr/MakeGrammar])
  (const/4 v2 0)
  (const/4 v1 0)
  (line 722)
  (invoke-super {v3} antlr/DefineGrammarSymbols/reset )
  (line 723)
  (new-instance v0 antlr/collections/impl/LList)
  (invoke-direct {v0} antlr/collections/impl/LList/<init> )
  (iput-object v0 v3 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (line 724)
  (iput-object v1 v3 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (line 725)
  (iput-object v1 v3 antlr/MakeGrammar.ruleEnd [object antlr/RuleEndElement])
  (line 726)
  (iput-object v1 v3 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (line 727)
  (iput v2 v3 antlr/MakeGrammar.nested int)
  (line 728)
  (iput-object v1 v3 antlr/MakeGrammar.currentExceptionSpec [object antlr/ExceptionSpec])
  (line 729)
  (iput-boolean v2 v3 antlr/MakeGrammar.grammarError boolean)
  (line 730)
  (return-void )
)

(method (attrs public ) setArgOfRuleRef([object antlr/Token] )void
  (limit registers 4)
  ; this: v2 ([object antlr/MakeGrammar])
  ; parameter[0] : v3 ([object antlr/Token])
  (line 733)
  (invoke-super {v2 v3} antlr/DefineGrammarSymbols/setArgOfRuleRef [object antlr/Token] )
  (line 734)
  (iget-object v0 v2 antlr/MakeGrammar.lastRuleRef [object antlr/RuleRefElement])
  (invoke-virtual {v3} antlr/Token/getText )
  (move-result-object v1)
  (invoke-virtual {v0 v1} antlr/RuleRefElement/setArgs [object java/lang/String] )
  (line 735)
  (return-void )
)

(method (attrs public ) setRuleOption([object antlr/Token] [object antlr/Token] )void
  (limit registers 4)
  ; this: v1 ([object antlr/MakeGrammar])
  ; parameter[0] : v2 ([object antlr/Token])
  ; parameter[1] : v3 ([object antlr/Token])
  (line 753)
  (iget-object v0 v1 antlr/MakeGrammar.ruleBlock [object antlr/RuleBlock])
  (invoke-virtual {v0 v2 v3} antlr/RuleBlock/setOption [object antlr/Token] [object antlr/Token] )
  (line 754)
  (return-void )
)

(method (attrs public ) setSubruleOption([object antlr/Token] [object antlr/Token] )void
  (limit registers 4)
  ; this: v1 ([object antlr/MakeGrammar])
  ; parameter[0] : v2 ([object antlr/Token])
  ; parameter[1] : v3 ([object antlr/Token])
  (line 757)
  (invoke-virtual {v1} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v0 v2 v3} antlr/AlternativeBlock/setOption [object antlr/Token] [object antlr/Token] )
  (line 758)
  (return-void )
)

(method (attrs public ) setUserExceptions([object java/lang/String] )void
  (limit registers 3)
  ; this: v1 ([object antlr/MakeGrammar])
  ; parameter[0] : v2 ([object java/lang/String])
  (line 436)
  (invoke-virtual {v1} antlr/MakeGrammar/context )
  (move-result-object v0)
  (iget-object v0 v0 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (check-cast v0 [object antlr/RuleBlock])
  (iput-object v2 v0 antlr/RuleBlock.throwsSpec [object java/lang/String])
  (line 437)
  (return-void )
)

(method (attrs public ) synPred()void
  (limit registers 8)
  ; this: v7 ([object antlr/MakeGrammar])
  (line 761)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iget-boolean v2 v2 antlr/AlternativeBlock.not boolean)
  (if-eqz v2 l45d5a)
  (line 762)
  (iget-object v2 v7 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v3 "'~' cannot be applied to syntactic predicate")
  (iget-object v4 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getFilename )
  (move-result-object v4)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v5)
  (iget-object v5 v5 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v5} antlr/AlternativeBlock/getLine )
  (move-result v5)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v6)
  (iget-object v6 v6 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v6} antlr/AlternativeBlock/getColumn )
  (move-result v6)
  (invoke-virtual {v2 v3 v4 v5 v6} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l45d5a)
  (line 767)
  (new-instance v0 antlr/SynPredBlock)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v2} antlr/SynPredBlock/<init> [object antlr/Grammar] )
  (line 768)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-static {v0 v2} antlr/MakeGrammar/setBlock [object antlr/AlternativeBlock] [object antlr/AlternativeBlock] )
  (line 769)
  (iget-object v2 v7 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v2} antlr/collections/Stack/pop )
  (move-result-object v1)
  (check-cast v1 [object antlr/BlockContext])
  (line 770)
  (iget-object v2 v7 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (new-instance v3 antlr/BlockContext)
  (invoke-direct {v3} antlr/BlockContext/<init> )
  (invoke-interface {v2 v3} antlr/collections/Stack/push [object java/lang/Object] )
  (line 771)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iput-object v0 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (line 772)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v3 v1 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (iput-object v3 v2 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (line 773)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (iput-object v0 v2 antlr/BlockEndElement.block [object antlr/AlternativeBlock])
  (line 774)
  (return-void )
)

(method (attrs public ) zeroOrMoreSubRule()void
  (limit registers 8)
  ; this: v7 ([object antlr/MakeGrammar])
  (line 777)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (iget-boolean v2 v2 antlr/AlternativeBlock.not boolean)
  (if-eqz v2 l45e32)
  (line 778)
  (iget-object v2 v7 antlr/MakeGrammar.tool [object antlr/Tool])
  (const-string v3 "'~' cannot be applied to (...)+ subrule")
  (iget-object v4 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getFilename )
  (move-result-object v4)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v5)
  (iget-object v5 v5 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v5} antlr/AlternativeBlock/getLine )
  (move-result v5)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v6)
  (iget-object v6 v6 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-virtual {v6} antlr/AlternativeBlock/getColumn )
  (move-result v6)
  (invoke-virtual {v2 v3 v4 v5 v6} antlr/Tool/error [object java/lang/String] [object java/lang/String] int int )
  (label l45e32)
  (line 783)
  (new-instance v0 antlr/ZeroOrMoreBlock)
  (iget-object v2 v7 antlr/MakeGrammar.grammar [object antlr/Grammar])
  (invoke-direct {v0 v2} antlr/ZeroOrMoreBlock/<init> [object antlr/Grammar] )
  (line 784)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (invoke-static {v0 v2} antlr/MakeGrammar/setBlock [object antlr/AlternativeBlock] [object antlr/AlternativeBlock] )
  (line 785)
  (iget-object v2 v7 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (invoke-interface {v2} antlr/collections/Stack/pop )
  (move-result-object v1)
  (check-cast v1 [object antlr/BlockContext])
  (line 786)
  (iget-object v2 v7 antlr/MakeGrammar.blocks [object antlr/collections/Stack])
  (new-instance v3 antlr/BlockContext)
  (invoke-direct {v3} antlr/BlockContext/<init> )
  (invoke-interface {v2 v3} antlr/collections/Stack/push [object java/lang/Object] )
  (line 787)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iput-object v0 v2 antlr/BlockContext.block [object antlr/AlternativeBlock])
  (line 788)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v3 v1 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (iput-object v3 v2 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (line 789)
  (invoke-virtual {v7} antlr/MakeGrammar/context )
  (move-result-object v2)
  (iget-object v2 v2 antlr/BlockContext.blockEnd [object antlr/BlockEndElement])
  (iput-object v0 v2 antlr/BlockEndElement.block [object antlr/AlternativeBlock])
  (line 790)
  (return-void )
)

)
