(class (attrs public ) a/g
 (super java/lang/Object)
 (source "DiffUtils.java")

 (field (attrs private static ) a [object a/f] )
 (field (attrs private static ) b [object java/util/regex/Pattern] )

(method (attrs static ) <clinit>()void
  (limit registers 1)
  (line 32)
  (new-instance v0 a/a/d)
  (invoke-direct {v0} a/a/d/<init> )
  (sput-object v0 a/g.a [object a/f])
  (line 33)
  (const-string v0 "^@@\\s+-(?:(\\d+)(?:,(\\d+))?)\\s+\\+(?:(\\d+)(?:,(\\d+))?)\\s+@@$")
  (invoke-static {v0} java/util/regex/Pattern/compile [object java/lang/String] )
  (move-result-object v0)
  (sput-object v0 a/g.b [object java/util/regex/Pattern])
  (return-void )
 )

(method (attrs public ) <init>()void
  (limit registers 1)
  ; this: v0 ([object a/g])
  (line 31)
  (invoke-direct {v0} java/lang/Object/<init> )
  (return-void )
 )

(method (attrs public static ) a([object java/util/List] [object java/util/List] )[object a/i]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "("  "Ljava/util/List"  "<*>;"  "Ljava/util/List"  "<*>;"  "La/f;"  ")"  "La/i;")
  )
  (limit registers 3)
  ; parameter[0] : v1 ([object java/util/List])
  ; parameter[1] : v2 ([object java/util/List])
  (line 44)
  (sget-object v0 a/g.a [object a/f])
  (invoke-static {v1 v2 v0} a/g/a [object java/util/List] [object java/util/List] [object a/f] )
  (move-result-object v0)
  (return-object v0)
 )

(method (attrs public static ) a([object java/util/List] [object java/util/List] [object a/f] )[object a/i]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "("  "Ljava/util/List"  "<*>;"  "Ljava/util/List"  "<*>;"  "La/f;"  ")"  "La/i;")
  )
  (limit registers 4)
  ; parameter[0] : v1 ([object java/util/List])
  ; parameter[1] : v2 ([object java/util/List])
  ; parameter[2] : v3 ([object a/f])
  (line 56)
  (invoke-interface {v3 v1 v2} a/f/a [object java/util/List] [object java/util/List] )
  (move-result-object v0)
  (return-object v0)
 )

)
