(class (attrs public ) net/sourceforge/pmd/rules/design/PositionalIteratorRule
 (super net/sourceforge/pmd/AbstractRule)
 (source "PositionalIteratorRule.java")


(method (attrs public ) <init>()void
  (limit registers 1)
  ; this: v0 ([object net/sourceforge/pmd/rules/design/PositionalIteratorRule])
  (line 15)
  (invoke-direct {v0} net/sourceforge/pmd/AbstractRule/<init> )
  (return-void )
 )

(method (attrs private ) collectNames([object java/lang/String] [object java/util/List] [object net/sourceforge/pmd/ast/SimpleNode] )void
  (limit registers 8)
  ; this: v4 ([object net/sourceforge/pmd/rules/design/PositionalIteratorRule])
  ; parameter[0] : v5 ([object java/lang/String])
  ; parameter[1] : v6 ([object java/util/List])
  ; parameter[2] : v7 ([object net/sourceforge/pmd/ast/SimpleNode])
  (line 47)
  (const/4 v1 0)
  (label l65a2a)
  (invoke-virtual {v7} net/sourceforge/pmd/ast/SimpleNode/jjtGetNumChildren )
  (move-result v2)
  (if-lt v1 v2 l65a38)
  (line 57)
  (return-void )
  (label l65a38)
  (line 48)
  (invoke-virtual {v7 v1} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v0)
  (check-cast v0 [object net/sourceforge/pmd/ast/SimpleNode])
  (line 49)
  (invoke-virtual {v0} net/sourceforge/pmd/ast/SimpleNode/jjtGetNumChildren )
  (move-result v2)
  (if-lez v2 l65a5c)
  (line 50)
  (invoke-direct {v4 v5 v6 v0} net/sourceforge/pmd/rules/design/PositionalIteratorRule/collectNames [object java/lang/String] [object java/util/List] [object net/sourceforge/pmd/ast/SimpleNode] )
  (label l65a56)
  (line 47)
  (add-int/lit8 v1 v1 1)
  (goto l65a2a)
  (label l65a5c)
  (line 52)
  (instance-of v2 v0 net/sourceforge/pmd/ast/ASTName)
  (if-eqz v2 l65a56)
  (invoke-virtual {v0} net/sourceforge/pmd/ast/SimpleNode/getImage )
  (move-result-object v2)
  (const-string v3 ".")
  (invoke-virtual {v2 v3} java/lang/String/indexOf [object java/lang/String] )
  (move-result v2)
  (const/4 v3 15)
  (if-eq v2 v3 l65a56)
  (invoke-virtual {v0} net/sourceforge/pmd/ast/SimpleNode/getImage )
  (move-result-object v2)
  (invoke-direct {v4 v2} net/sourceforge/pmd/rules/design/PositionalIteratorRule/getVariableName [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual {v5 v2} java/lang/String/equals [object java/lang/Object] )
  (move-result v2)
  (if-eqz v2 l65a56)
  (line 53)
  (invoke-virtual {v0} net/sourceforge/pmd/ast/SimpleNode/getImage )
  (move-result-object v2)
  (invoke-interface {v6 v2} java/util/List/add [object java/lang/Object] )
  (goto l65a56)
 )

(method (attrs private ) getName([object net/sourceforge/pmd/ast/SimpleNode] )[object java/lang/String]
  (limit registers 4)
  ; this: v2 ([object net/sourceforge/pmd/rules/design/PositionalIteratorRule])
  ; parameter[0] : v3 ([object net/sourceforge/pmd/ast/SimpleNode])
  (const/4 v1 0)
  (line 70)
  (invoke-virtual {v3} net/sourceforge/pmd/ast/SimpleNode/jjtGetNumChildren )
  (move-result v0)
  (if-lez v0 l65b06)
  (line 71)
  (invoke-virtual {v3 v1} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v0)
  (instance-of v0 v0 net/sourceforge/pmd/ast/ASTName)
  (if-eqz v0 l65af0)
  (line 72)
  (invoke-virtual {v3 v1} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v0)
  (check-cast v0 [object net/sourceforge/pmd/ast/ASTName])
  (invoke-virtual {v0} net/sourceforge/pmd/ast/ASTName/getImage )
  (move-result-object v0)
  (label l65aee)
  (line 74)
  (return-object v0)
  (label l65af0)
  (invoke-virtual {v3 v1} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v0)
  (check-cast v0 [object net/sourceforge/pmd/ast/SimpleNode])
  (invoke-direct {v2 v0} net/sourceforge/pmd/rules/design/PositionalIteratorRule/getName [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result-object v0)
  (goto l65aee)
  (label l65b06)
  (line 76)
  (new-instance v0 java/lang/IllegalArgumentException)
  (const-string v1 "Check with hasNameAsChild() first!")
  (invoke-direct {v0 v1} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v0)
 )

(method (attrs private ) getVariableName([object java/lang/String] )[object java/lang/String]
  (limit registers 4)
  ; this: v2 ([object net/sourceforge/pmd/rules/design/PositionalIteratorRule])
  ; parameter[0] : v3 ([object java/lang/String])
  (line 43)
  (const/4 v0 0)
  (const/16 v1 46)
  (invoke-virtual {v3 v1} java/lang/String/indexOf int )
  (move-result v1)
  (invoke-virtual {v3 v0 v1} java/lang/String/substring int int )
  (move-result-object v0)
  (return-object v0)
 )

(method (attrs private ) hasNameAsChild([object net/sourceforge/pmd/ast/SimpleNode] )boolean
  (limit registers 4)
  ; this: v2 ([object net/sourceforge/pmd/rules/design/PositionalIteratorRule])
  ; parameter[0] : v3 ([object net/sourceforge/pmd/ast/SimpleNode])
  (const/4 v0 0)
  (line 60)
  (invoke-virtual {v3} net/sourceforge/pmd/ast/SimpleNode/jjtGetNumChildren )
  (move-result v1)
  (if-lez v1 l65b70)
  (line 61)
  (invoke-virtual {v3 v0} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v1)
  (instance-of v1 v1 net/sourceforge/pmd/ast/ASTName)
  (if-eqz v1 l65b72)
  (line 62)
  (const/4 v0 1)
  (label l65b70)
  (line 66)
  (return v0)
  (label l65b72)
  (line 64)
  (invoke-virtual {v3 v0} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v0)
  (check-cast v0 [object net/sourceforge/pmd/ast/SimpleNode])
  (invoke-direct {v2 v0} net/sourceforge/pmd/rules/design/PositionalIteratorRule/hasNameAsChild [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result v0)
  (goto l65b70)
 )

(method (attrs public ) visit([object net/sourceforge/pmd/ast/ASTWhileStatement] [object java/lang/Object] )[object java/lang/Object]
  (limit registers 13)
  ; this: v10 ([object net/sourceforge/pmd/rules/design/PositionalIteratorRule])
  ; parameter[0] : v11 ([object net/sourceforge/pmd/ast/ASTWhileStatement])
  ; parameter[1] : v12 ([object java/lang/Object])
  (const/4 v9 0)
  (const/4 v8 15)
  (const/4 v7 1)
  (line 18)
  (invoke-virtual {v11 v9} net/sourceforge/pmd/ast/ASTWhileStatement/jjtGetChild int )
  (move-result-object v6)
  (check-cast v6 [object net/sourceforge/pmd/ast/SimpleNode])
  (invoke-direct {v10 v6} net/sourceforge/pmd/rules/design/PositionalIteratorRule/hasNameAsChild [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result v6)
  (if-eqz v6 l65c2a)
  (line 19)
  (invoke-virtual {v11 v9} net/sourceforge/pmd/ast/ASTWhileStatement/jjtGetChild int )
  (move-result-object v6)
  (check-cast v6 [object net/sourceforge/pmd/ast/SimpleNode])
  (invoke-direct {v10 v6} net/sourceforge/pmd/rules/design/PositionalIteratorRule/getName [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result-object v0)
  (label l65bca)
  (line 20)
  (const-string v6 ".hasNext")
  (invoke-virtual {v0 v6} java/lang/String/indexOf [object java/lang/String] )
  (move-result v6)
  (if-eq v6 v8 l65c2a)
  (invoke-virtual {v11} net/sourceforge/pmd/ast/ASTWhileStatement/jjtGetNumChildren )
  (move-result v6)
  (if-le v6 v7 l65c2a)
  (line 22)
  (invoke-virtual {v11 v7} net/sourceforge/pmd/ast/ASTWhileStatement/jjtGetChild int )
  (move-result-object v2)
  (check-cast v2 [object net/sourceforge/pmd/ast/SimpleNode])
  (label l65bf2)
  (line 23)
  (new-instance v4 java/util/ArrayList)
  (invoke-direct {v4} java/util/ArrayList/<init> )
  (label l65bfc)
  (line 24)
  (invoke-direct {v10 v0} net/sourceforge/pmd/rules/design/PositionalIteratorRule/getVariableName [object java/lang/String] )
  (move-result-object v6)
  (invoke-direct {v10 v6 v4 v2} net/sourceforge/pmd/rules/design/PositionalIteratorRule/collectNames [object java/lang/String] [object java/util/List] [object net/sourceforge/pmd/ast/SimpleNode] )
  (line 25)
  (const/4 v5 0)
  (label l65c0c)
  (line 26)
  (invoke-interface {v4} java/util/List/iterator )
  (move-result-object v1)
  (label l65c14)
  (invoke-interface {v1} java/util/Iterator/hasNext )
  (move-result v6)
  (if-nez v6 l65c2e)
  (line 33)
  (if-le v5 v7 l65c2a)
  (line 34)
  (invoke-virtual {v10 v12 v11} net/sourceforge/pmd/rules/design/PositionalIteratorRule/addViolation [object java/lang/Object] [object net/sourceforge/pmd/ast/SimpleNode] )
  (label l65c2a)
  (line 39)
  (const/4 v6 0)
  (return-object v6)
  (label l65c2e)
  (line 27)
  (invoke-interface {v1} java/util/Iterator/next )
  (move-result-object v3)
  (check-cast v3 [object java/lang/String])
  (line 28)
  (const-string v6 ".next")
  (invoke-virtual {v3 v6} java/lang/String/indexOf [object java/lang/String] )
  (move-result v6)
  (if-eq v6 v8 l65c14)
  (line 29)
  (add-int/lit8 v5 v5 1)
  (goto l65c14)
)

)
