(class (attrs public ) difflib/myers/MyersDiff
 (super java/lang/Object)
 (source "MyersDiff.java")
 (implements difflib/DiffAlgorithm)


(method (attrs public ) <init>()void
  (limit registers 1)
  ; this: v0 ([object difflib/myers/MyersDiff])
  (line 78)
  (invoke-direct {v0} java/lang/Object/<init> )
  (line 79)
  (return-void )
 )

(method (attrs public static ) buildPath([array [object java/lang/Object]] [array [object java/lang/Object]] )[object difflib/myers/PathNode]
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object difflib/myers/DifferentiationFailedException])
  )
  (limit registers 25)
  ; parameter[0] : v23 ([array [object java/lang/Object]])
  ; parameter[1] : v24 ([array [object java/lang/Object]])
  (line 118)
  (if-nez v23 l119e8)
  (line 119)
  (new-instance v18 java/lang/IllegalArgumentException)
  (const-string v19 "original sequence is null")
  (invoke-direct/range {v18 .. v19} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v18)
  (label l119e8)
  (line 120)
  (if-nez v24 l119fc)
  (line 121)
  (new-instance v18 java/lang/IllegalArgumentException)
  (const-string v19 "revised sequence is null")
  (invoke-direct/range {v18 .. v19} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v18)
  (label l119fc)
  (line 124)
  (move-object/from16 v0 v23)
  (array-length v4 v0)
  (line 125)
  (move-object/from16 v0 v24)
  (array-length v2 v0)
  (line 127)
  (add-int v18 v4 v2)
  (add-int/lit8 v3 v18 1)
  (line 128)
  (mul-int/lit8 v18 v3 2)
  (add-int/lit8 v17 v18 1)
  (line 129)
  (div-int/lit8 v13 v17 2)
  (line 130)
  (move/from16 v0 v17)
  (new-array v6 v0 [array [object difflib/myers/PathNode]])
  (line 132)
  (add-int/lit8 v18 v13 1)
  (new-instance v19 difflib/myers/Snake)
  (const/16 v20 0)
  (const/16 v21 65535)
  (const/16 v22 0)
  (invoke-direct/range {v19 .. v22} difflib/myers/Snake/<init> int int [object difflib/myers/PathNode] )
  (aput-object v19 v6 v18)
  (line 133)
  (const/4 v5 0)
  (label l11a44)
  (if-ge v5 v3 l11b52)
  (line 134)
  (neg-int v9 v5)
  (label l11a4a)
  (if-gt v9 v5 l11b3a)
  (line 135)
  (add-int v10 v13 v9)
  (label l11a52)
  (line 136)
  (add-int/lit8 v12 v10 1)
  (label l11a56)
  (line 137)
  (add-int/lit8 v11 v10 255)
  (label l11a5a)
  (line 138)
  (const/16 v16 0)
  (label l11a5e)
  (line 141)
  (neg-int v0 v5)
  (move/from16 v18 v0)
  (move/from16 v0 v18)
  (if-eq v9 v0 l11a9c)
  (if-eq v9 v5 l11aec)
  (aget-object v18 v6 v11)
  (move-object/from16 v0 v18)
  (iget v0 v0 difflib/myers/PathNode.i int)
  (move/from16 v18 v0)
  (aget-object v19 v6 v12)
  (move-object/from16 v0 v19)
  (iget v0 v0 difflib/myers/PathNode.i int)
  (move/from16 v19 v0)
  (move/from16 v0 v18)
  (move/from16 v1 v19)
  (if-ge v0 v1 l11aec)
  (label l11a9c)
  (line 142)
  (aget-object v18 v6 v12)
  (move-object/from16 v0 v18)
  (iget v7 v0 difflib/myers/PathNode.i int)
  (label l11aa8)
  (line 143)
  (aget-object v16 v6 v12)
  (label l11aac)
  (line 149)
  (const/16 v18 0)
  (aput-object v18 v6 v11)
  (line 151)
  (sub-int v8 v7 v9)
  (label l11ab8)
  (line 153)
  (new-instance v14 difflib/myers/DiffNode)
  (move-object/from16 v0 v16)
  (invoke-direct {v14 v7 v8 v0} difflib/myers/DiffNode/<init> int int [object difflib/myers/PathNode] )
  (label l11ac6)
  (line 158)
  (if-ge v7 v4 l11b06)
  (if-ge v8 v2 l11b06)
  (aget-object v18 v23 v7)
  (aget-object v19 v24 v8)
  (invoke-virtual/range {v18 .. v19} java/lang/Object/equals [object java/lang/Object] )
  (move-result v18)
  (if-eqz v18 l11b06)
  (line 159)
  (add-int/lit8 v7 v7 1)
  (line 160)
  (add-int/lit8 v8 v8 1)
  (goto l11ac6)
  (label l11aec)
  (line 145)
  (aget-object v18 v6 v11)
  (move-object/from16 v0 v18)
  (iget v0 v0 difflib/myers/PathNode.i int)
  (move/from16 v18 v0)
  (add-int/lit8 v7 v18 1)
  (label l11b00)
  (line 146)
  (aget-object v16 v6 v11)
  (goto l11aac)
  (label l11b06)
  (line 162)
  (iget v0 v14 difflib/myers/PathNode.i int)
  (move/from16 v18 v0)
  (move/from16 v0 v18)
  (if-le v7 v0 l11b22)
  (line 163)
  (new-instance v15 difflib/myers/Snake)
  (invoke-direct {v15 v7 v8 v14} difflib/myers/Snake/<init> int int [object difflib/myers/PathNode] )
  (label l11b20)
  (move-object v14 v15)
  (label l11b22)
  (line 165)
  (aput-object v14 v6 v10)
  (line 167)
  (if-lt v7 v4 l11b34)
  (if-lt v8 v2 l11b34)
  (line 168)
  (aget-object v18 v6 v10)
  (return-object v18)
  (label l11b34)
  (line 134)
  (add-int/lit8 v9 v9 2)
  (goto l11a4a)
  (label l11b3a)
  (line 171)
  (add-int v18 v13 v5)
  (add-int/lit8 v18 v18 255)
  (const/16 v19 0)
  (aput-object v19 v6 v18)
  (line 133)
  (add-int/lit8 v5 v5 1)
  (goto/16 l11a44)
  (label l11b52)
  (line 175)
  (new-instance v18 difflib/myers/DifferentiationFailedException)
  (const-string v19 "could not find a diff path")
  (invoke-direct/range {v18 .. v19} difflib/myers/DifferentiationFailedException/<init> [object java/lang/String] )
  (throw v18)
 )

(method (attrs public static ) buildRevision([object difflib/myers/PathNode] [array [object java/lang/Object]] [array [object java/lang/Object]] )[object difflib/Patch]
  (limit registers 13)
  ; parameter[0] : v10 ([object difflib/myers/PathNode])
  ; parameter[1] : v11 ([array [object java/lang/Object]])
  ; parameter[2] : v12 ([array [object java/lang/Object]])
  (line 189)
  (if-nez v10 l11b88)
  (line 190)
  (new-instance v8 java/lang/IllegalArgumentException)
  (const-string v9 "path is null")
  (invoke-direct {v8 v9} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v8)
  (label l11b88)
  (line 191)
  (if-nez v11 l11b9c)
  (line 192)
  (new-instance v8 java/lang/IllegalArgumentException)
  (const-string v9 "original sequence is null")
  (invoke-direct {v8 v9} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v8)
  (label l11b9c)
  (line 193)
  (if-nez v12 l11bb0)
  (line 194)
  (new-instance v8 java/lang/IllegalArgumentException)
  (const-string v9 "revised sequence is null")
  (invoke-direct {v8 v9} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v8)
  (label l11bb0)
  (line 196)
  (new-instance v6 difflib/Patch)
  (invoke-direct {v6} difflib/Patch/<init> )
  (line 197)
  (invoke-virtual {v10} difflib/myers/PathNode/isSnake )
  (move-result v8)
  (if-eqz v8 l11bca)
  (line 198)
  (iget-object v10 v10 difflib/myers/PathNode.prev [object difflib/myers/PathNode])
  (label l11bca)
  (line 199)
  (if-eqz v10 l11ca2)
  (iget-object v8 v10 difflib/myers/PathNode.prev [object difflib/myers/PathNode])
  (if-eqz v8 l11ca2)
  (iget-object v8 v10 difflib/myers/PathNode.prev [object difflib/myers/PathNode])
  (iget v8 v8 difflib/myers/PathNode.j int)
  (if-ltz v8 l11ca2)
  (line 200)
  (invoke-virtual {v10} difflib/myers/PathNode/isSnake )
  (move-result v8)
  (if-eqz v8 l11bfe)
  (line 201)
  (new-instance v8 java/lang/IllegalStateException)
  (const-string v9 "bad diffpath: found snake when looking for diff")
  (invoke-direct {v8 v9} java/lang/IllegalStateException/<init> [object java/lang/String] )
  (throw v8)
  (label l11bfe)
  (line 202)
  (iget v1 v10 difflib/myers/PathNode.i int)
  (label l11c02)
  (line 203)
  (iget v3 v10 difflib/myers/PathNode.j int)
  (label l11c06)
  (line 205)
  (iget-object v10 v10 difflib/myers/PathNode.prev [object difflib/myers/PathNode])
  (line 206)
  (iget v2 v10 difflib/myers/PathNode.i int)
  (label l11c0e)
  (line 207)
  (iget v4 v10 difflib/myers/PathNode.j int)
  (label l11c12)
  (line 209)
  (new-instance v5 difflib/Chunk)
  (invoke-static {v11 v2 v1} difflib/myers/MyersDiff/copyOfRange [array [object java/lang/Object]] int int )
  (move-result-object v8)
  (invoke-direct {v5 v2 v8} difflib/Chunk/<init> int [array [object java/lang/Object]] )
  (label l11c24)
  (line 210)
  (new-instance v7 difflib/Chunk)
  (invoke-static {v12 v4 v3} difflib/myers/MyersDiff/copyOfRange [array [object java/lang/Object]] int int )
  (move-result-object v8)
  (invoke-direct {v7 v4 v8} difflib/Chunk/<init> int [array [object java/lang/Object]] )
  (label l11c36)
  (line 211)
  (const/4 v0 0)
  (label l11c38)
  (line 212)
  (invoke-virtual {v5} difflib/Chunk/size )
  (move-result v8)
  (if-nez v8 l11c72)
  (invoke-virtual {v7} difflib/Chunk/size )
  (move-result v8)
  (if-eqz v8 l11c72)
  (line 213)
  (new-instance v0 difflib/InsertDelta)
  (label l11c54)
  (invoke-direct {v0 v5 v7} difflib/InsertDelta/<init> [object difflib/Chunk] [object difflib/Chunk] )
  (label l11c5a)
  (line 220)
  (invoke-virtual {v6 v0} difflib/Patch/addDelta [object difflib/Delta] )
  (line 221)
  (invoke-virtual {v10} difflib/myers/PathNode/isSnake )
  (move-result v8)
  (if-eqz v8 l11bca)
  (line 222)
  (iget-object v10 v10 difflib/myers/PathNode.prev [object difflib/myers/PathNode])
  (goto l11bca)
  (label l11c72)
  (line 214)
  (invoke-virtual {v5} difflib/Chunk/size )
  (move-result v8)
  (if-lez v8 l11c96)
  (invoke-virtual {v7} difflib/Chunk/size )
  (move-result v8)
  (if-nez v8 l11c96)
  (line 215)
  (new-instance v0 difflib/DeleteDelta)
  (label l11c8e)
  (invoke-direct {v0 v5 v7} difflib/DeleteDelta/<init> [object difflib/Chunk] [object difflib/Chunk] )
  (label l11c94)
  (goto l11c5a)
  (label l11c96)
  (line 217)
  (new-instance v0 difflib/ChangeDelta)
  (label l11c9a)
  (invoke-direct {v0 v5 v7} difflib/ChangeDelta/<init> [object difflib/Chunk] [object difflib/Chunk] )
  (label l11ca0)
  (goto l11c5a)
  (label l11ca2)
  (line 224)
  (return-object v6)
 )

(method (attrs public static ) copyOfRange([array [object java/lang/Object]] int int )[array [object java/lang/Object]]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "<T:"  "Ljava/lang/Object;"  "U:"  "Ljava/lang/Object;"  ">([TU;II"  "Ljava/lang/Class"  "<+[TT;>;)[TT;")
  )
  (limit registers 4)
  ; parameter[0] : v1 ([array [object java/lang/Object]])
  ; parameter[1] : v2 (int)
  ; parameter[2] : v3 (int)
  (line 233)
  (invoke-virtual {v1} java/lang/Object/getClass )
  (move-result-object v0)
  (invoke-static {v1 v2 v3 v0} difflib/myers/MyersDiff/copyOfRange [array [object java/lang/Object]] int int [object java/lang/Class] )
  (move-result-object v0)
  (return-object v0)
 )

(method (attrs public static ) copyOfRange([array [object java/lang/Object]] int int [object java/lang/Class] )[array [object java/lang/Object]]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "<T:"  "Ljava/lang/Object;"  "U:"  "Ljava/lang/Object;"  ">([TU;II"  "Ljava/lang/Class"  "<+[TT;>;)[TT;")
  )
  (limit registers 9)
  ; parameter[0] : v5 ([array [object java/lang/Object]])
  ; parameter[1] : v6 (int)
  ; parameter[2] : v7 (int)
  ; parameter[3] : v8 ([object java/lang/Class])
  (line 242)
  (sub-int v1 v7 v6)
  (line 243)
  (if-gez v1 l11d1a)
  (line 244)
  (new-instance v2 java/lang/IllegalArgumentException)
  (new-instance v3 java/lang/StringBuilder)
  (invoke-direct {v3} java/lang/StringBuilder/<init> )
  (invoke-virtual {v3 v6} java/lang/StringBuilder/append int )
  (move-result-object v3)
  (const-string v4 " > ")
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (invoke-virtual {v3 v7} java/lang/StringBuilder/append int )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/StringBuilder/toString )
  (move-result-object v3)
  (invoke-direct {v2 v3} java/lang/IllegalArgumentException/<init> [object java/lang/String] )
  (throw v2)
  (label l11d1a)
  (line 245)
  (const-class v2 [array [object java/lang/Object]])
  (if-ne v8 v2 l11d42)
  (new-array v2 v1 [array [object java/lang/Object]])
  (check-cast v2 [array [object java/lang/Object]])
  (move-object v0 v2)
  (label l11d2c)
  (line 247)
  (const/4 v2 0)
  (array-length v3 v5)
  (sub-int/2addr v3 v6)
  (invoke-static {v3 v1} java/lang/Math/min int int )
  (move-result v3)
  (invoke-static {v5 v6 v0 v2 v3} java/lang/System/arraycopy [object java/lang/Object] int [object java/lang/Object] int int )
  (line 248)
  (return-object v0)
  (label l11d42)
  (line 245)
  (invoke-virtual {v8} java/lang/Class/getComponentType )
  (move-result-object v2)
  (invoke-static {v2 v1} java/lang/reflect/Array/newInstance [object java/lang/Class] int )
  (move-result-object v2)
  (check-cast v2 [array [object java/lang/Object]])
  (check-cast v2 [array [object java/lang/Object]])
  (move-object v0 v2)
  (goto l11d2c)
 )

(method (attrs public ) diff([object java/util/List] [object java/util/List] )[object difflib/Patch]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "("  "Ljava/util/List"  "<*>;"  "Ljava/util/List"  "<*>;)"  "Ldifflib/Patch;")
  )
  (limit registers 5)
  ; this: v2 ([object difflib/myers/MyersDiff])
  ; parameter[0] : v3 ([object java/util/List])
  ; parameter[1] : v4 ([object java/util/List])
  (line 87)
  (invoke-interface {v3} java/util/List/toArray )
  (move-result-object v0)
  (invoke-interface {v4} java/util/List/toArray )
  (move-result-object v1)
  (invoke-virtual {v2 v0 v1} difflib/myers/MyersDiff/diff [array [object java/lang/Object]] [array [object java/lang/Object]] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) diff([array [object java/lang/Object]] [array [object java/lang/Object]] )[object difflib/Patch]
  (annotation systemVisibility [object dalvik/annotation/Signature]
    (value [array [object java/lang/String]] "("  "Ljava/util/List"  "<*>;"  "Ljava/util/List"  "<*>;)"  "Ldifflib/Patch;")
  )
  (limit registers 6)
  ; this: v3 ([object difflib/myers/MyersDiff])
  ; parameter[0] : v4 ([array [object java/lang/Object]])
  ; parameter[1] : v5 ([array [object java/lang/Object]])
  (catch difflib/myers/DifferentiationFailedException from l11d9c to l11daa using l11dae)
  (label l11d9c)
  (line 98)
  (invoke-static {v4 v5} difflib/myers/MyersDiff/buildPath [array [object java/lang/Object]] [array [object java/lang/Object]] )
  (move-result-object v1)
  (label l11da4)
  (line 99)
  (invoke-static {v1 v4 v5} difflib/myers/MyersDiff/buildRevision [object difflib/myers/PathNode] [array [object java/lang/Object]] [array [object java/lang/Object]] )
  (label l11daa)
  (move-result-object v2)
  (label l11dac)
  (line 103)
  (return-object v2)
  (label l11dae)
  (line 100)
  (move-exception v0)
  (line 101)
  (invoke-virtual {v0} difflib/myers/DifferentiationFailedException/printStackTrace )
  (line 103)
  (new-instance v2 difflib/Patch)
  (invoke-direct {v2} difflib/Patch/<init> )
  (goto l11dac)
)

)
