(class (attrs abstract synchronized ) java/util/concurrent/locks/ReentrantLock$Sync
 (super java/util/concurrent/locks/AbstractQueuedSynchronizer)
 (source "ReentrantLock.java")

 (field (attrs private static final ) serialVersionUID long -1168180484); 0xba5efafc )

(method (attrs ) <init>()void
  (limit registers 1)
  ; this: v0 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  (line 90)
  (invoke-direct {v0} java/util/concurrent/locks/AbstractQueuedSynchronizer/<init> )
  (return-void )
 )

(method (attrs private ) readObject([object java/io/ObjectInputStream] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException]  [object java/lang/ClassNotFoundException])
  )
  (limit registers 3)
  ; this: v1 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  ; parameter[0] : v2 ([object java/io/ObjectInputStream])
  (line 166)
  (invoke-virtual-quick {v2} vtable #0x14)
  (line 167)
  (const/4 v0 0)
  (invoke-virtual-quick {v1 v0} vtable #0x27)
  (line 168)
  (return-void )
 )

(method (attrs final ) getHoldCount()int
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  (line 153)
  (invoke-virtual-quick {v1} vtable #0x21)
  (move-result v0)
  (if-eqz v0 leac1a)
  (invoke-virtual-quick {v1} vtable #0x1a)
  (move-result v0)
  (label leac18)
  (return v0)
  (label leac1a)
  (const/4 v0 0)
  (goto leac18)
)

(method (attrs final ) getOwner()[object java/lang/Thread]
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  (line 149)
  (invoke-virtual-quick {v1} vtable #0x1a)
  (move-result v0)
  (if-nez v0 leac40)
  (const/4 v0 0)
  (label leac3e)
  (return-object v0)
  (label leac40)
  (invoke-virtual-quick {v1} vtable #0xb)
  (move-result-object v0)
  (goto leac3e)
)

(method (attrs protected final ) isHeldExclusively()boolean
  (limit registers 3)
  ; this: v2 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  (line 139)
  (invoke-virtual-quick {v2} vtable #0xb)
  (move-result-object v0)
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v1)
  (if-ne v0 v1 leac74)
  (const/4 v0 1)
  (label leac72)
  (return v0)
  (label leac74)
  (const/4 v0 0)
  (goto leac72)
)

(method (attrs final ) isLocked()boolean
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  (line 157)
  (invoke-virtual-quick {v1} vtable #0x1a)
  (move-result v0)
  (if-eqz v0 leac98)
  (const/4 v0 1)
  (label leac96)
  (return v0)
  (label leac98)
  (const/4 v0 0)
  (goto leac96)
)

(method (attrs abstract ) lock()void
)

(method (attrs final ) newCondition()[object java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject]
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  (line 143)
  (new-instance v0 java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject)
  (invoke-direct {v0 v1} java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject/<init> [object java/util/concurrent/locks/AbstractQueuedSynchronizer] )
  (return-object v0)
)

(method (attrs final ) nonfairTryAcquire(int )boolean
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  ; parameter[0] : v7 (int)
  (const/4 v5 1)
  (const/4 v4 0)
  (line 105)
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v1)
  (line 106)
  (invoke-virtual-quick {v6} vtable #0x1a)
  (move-result v0)
  (line 107)
  (if-nez v0 leacf6)
  (line 108)
  (invoke-virtual-quick {v6 v4 v7} vtable #0x13)
  (move-result v3)
  (if-eqz v3 lead24)
  (line 109)
  (invoke-virtual-quick {v6 v1} vtable #0xc)
  (move v3 v5)
  (label leacf4)
  (line 120)
  (return v3)
  (label leacf6)
  (line 113)
  (invoke-virtual-quick {v6} vtable #0xb)
  (move-result-object v3)
  (if-ne v1 v3 lead24)
  (line 114)
  (add-int v2 v0 v7)
  (label lead06)
  (line 115)
  (if-gez v2 lead1a)
  (line 116)
  (new-instance v3 java/lang/Error)
  (const-string v4 "Maximum lock count exceeded")
  (invoke-direct {v3 v4} java/lang/Error/<init> [object java/lang/String] )
  (throw v3)
  (label lead1a)
  (line 117)
  (invoke-virtual-quick {v6 v2} vtable #0x27)
  (move v3 v5)
  (line 118)
  (goto leacf4)
  (label lead24)
  (move v3 v4)
  (line 120)
  (goto leacf4)
)

(method (attrs protected final ) tryRelease(int )boolean
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/locks/ReentrantLock$Sync])
  ; parameter[0] : v5 (int)
  (line 124)
  (invoke-virtual-quick {v4} vtable #0x1a)
  (move-result v2)
  (sub-int v0 v2 v5)
  (line 125)
  (invoke-static {} java/lang/Thread/currentThread )
  (nop )
  (move-result-object v2)
  (invoke-virtual-quick {v4} vtable #0xb)
  (move-result-object v3)
  (if-eq v2 v3 lead64)
  (line 126)
  (new-instance v2 java/lang/IllegalMonitorStateException)
  (invoke-direct {v2} java/lang/IllegalMonitorStateException/<init> )
  (throw v2)
  (label lead64)
  (line 127)
  (const/4 v1 0)
  (line 128)
  (if-nez v0 lead74)
  (line 129)
  (const/4 v1 1)
  (line 130)
  (const/4 v2 0)
  (invoke-virtual-quick {v4 v2} vtable #0xc)
  (label lead74)
  (line 132)
  (invoke-virtual-quick {v4 v0} vtable #0x27)
  (line 133)
  (return v1)
)

)
