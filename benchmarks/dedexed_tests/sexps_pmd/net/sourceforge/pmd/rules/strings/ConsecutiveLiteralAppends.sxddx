(class (attrs public ) net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends
 (super net/sourceforge/pmd/AbstractRule)
 (source "ConsecutiveLiteralAppends.java")

 (field (attrs private static final ) blockParents [object java/util/Set] )
 (field (attrs private ) threshold int )

(method (attrs static ) <clinit>()void
  (limit registers 2)
  (line 59)
  (new-instance v0 java/util/HashSet)
  (invoke-direct {v0} java/util/HashSet/<init> )
  (sput-object v0 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (line 60)
  (sget-object v0 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (const-class v1 net/sourceforge/pmd/ast/ASTForStatement)
  (invoke-interface {v0 v1} java/util/Set/add [object java/lang/Object] )
  (line 61)
  (sget-object v0 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (const-class v1 net/sourceforge/pmd/ast/ASTWhileStatement)
  (invoke-interface {v0 v1} java/util/Set/add [object java/lang/Object] )
  (line 62)
  (sget-object v0 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (const-class v1 net/sourceforge/pmd/ast/ASTDoStatement)
  (invoke-interface {v0 v1} java/util/Set/add [object java/lang/Object] )
  (line 63)
  (sget-object v0 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (const-class v1 net/sourceforge/pmd/ast/ASTIfStatement)
  (invoke-interface {v0 v1} java/util/Set/add [object java/lang/Object] )
  (line 64)
  (sget-object v0 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (const-class v1 net/sourceforge/pmd/ast/ASTSwitchStatement)
  (invoke-interface {v0 v1} java/util/Set/add [object java/lang/Object] )
  (line 65)
  (sget-object v0 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (const-class v1 net/sourceforge/pmd/ast/ASTMethodDeclaration)
  (invoke-interface {v0 v1} java/util/Set/add [object java/lang/Object] )
  (line 54)
  (return-void )
 )

(method (attrs public ) <init>()void
  (limit registers 2)
  ; this: v1 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  (line 54)
  (invoke-direct {v1} net/sourceforge/pmd/AbstractRule/<init> )
  (line 68)
  (const/4 v0 1)
  (iput v0 v1 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.threshold int)
  (line 54)
  (return-void )
 )

(method (attrs private ) checkConstructor([object net/sourceforge/pmd/ast/ASTVariableDeclaratorId] [object java/lang/Object] )int
  (limit registers 10)
  ; this: v7 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v8 ([object net/sourceforge/pmd/ast/ASTVariableDeclaratorId])
  ; parameter[1] : v9 ([object java/lang/Object])
  (const/4 v4 1)
  (const/4 v5 0)
  (line 152)
  (invoke-virtual {v8} net/sourceforge/pmd/ast/ASTVariableDeclaratorId/jjtGetParent )
  (move-result-object v2)
  (line 153)
  (invoke-interface {v2} net/sourceforge/pmd/ast/Node/jjtGetNumChildren )
  (move-result v3)
  (const/4 v6 2)
  (if-lt v3 v6 l680cc)
  (line 155)
  (invoke-interface {v2 v4} net/sourceforge/pmd/ast/Node/jjtGetChild int )
  (move-result-object v3)
  (line 154)
  (check-cast v3 [object net/sourceforge/pmd/ast/SimpleNode])
  (line 155)
  (const-class v6 net/sourceforge/pmd/ast/ASTArgumentList)
  (invoke-virtual {v3 v6} net/sourceforge/pmd/ast/SimpleNode/getFirstChildOfType [object java/lang/Class] )
  (move-result-object v0)
  (line 154)
  (check-cast v0 [object net/sourceforge/pmd/ast/ASTArgumentList])
  (label l6808e)
  (line 156)
  (if-eqz v0 l680cc)
  (line 158)
  (const-class v3 net/sourceforge/pmd/ast/ASTLiteral)
  (invoke-virtual {v0 v3} net/sourceforge/pmd/ast/ASTArgumentList/getFirstChildOfType [object java/lang/Class] )
  (move-result-object v1)
  (line 157)
  (check-cast v1 [object net/sourceforge/pmd/ast/ASTLiteral])
  (label l680a2)
  (line 159)
  (invoke-direct {v7 v0} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/isAdditive [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result v3)
  (if-nez v3 l680c2)
  (if-eqz v1 l680c2)
  (line 160)
  (invoke-virtual {v1} net/sourceforge/pmd/ast/ASTLiteral/isStringLiteral )
  (move-result v3)
  (if-eqz v3 l680c2)
  (move v3 v4)
  (label l680c0)
  (line 166)
  (return v3)
  (label l680c2)
  (line 163)
  (invoke-direct {v7 v9 v5 v0 v8} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/processAdditive [object java/lang/Object] int [object net/sourceforge/pmd/ast/SimpleNode] [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result v3)
  (goto l680c0)
  (label l680cc)
  (move v3 v5)
  (line 166)
  (goto l680c0)
 )

(method (attrs private ) checkForViolation([object net/sourceforge/pmd/ast/SimpleNode] [object java/lang/Object] int )void
  (limit registers 7)
  ; this: v3 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v4 ([object net/sourceforge/pmd/ast/SimpleNode])
  ; parameter[1] : v5 ([object java/lang/Object])
  ; parameter[2] : v6 (int)
  (line 284)
  (iget v1 v3 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.threshold int)
  (if-le v6 v1 l68102)
  (line 285)
  (const/4 v1 1)
  (new-array v0 v1 [array [object java/lang/String]])
  (const/4 v1 0)
  (invoke-static {v6} java/lang/String/valueOf int )
  (move-result-object v2)
  (aput-object v2 v0 v1)
  (label l680fc)
  (line 286)
  (invoke-virtual {v3 v5 v4 v0} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/addViolation [object java/lang/Object] [object net/sourceforge/pmd/ast/Node] [array [object java/lang/Object]] )
  (label l68102)
  (line 288)
  (return-void )
 )

(method (attrs private ) getFirstParentBlock([object net/sourceforge/pmd/ast/Node] )[object net/sourceforge/pmd/ast/Node]
  (limit registers 6)
  ; this: v4 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v5 ([object net/sourceforge/pmd/ast/Node])
  (line 238)
  (invoke-interface {v5} net/sourceforge/pmd/ast/Node/jjtGetParent )
  (move-result-object v1)
  (line 240)
  (move-object v0 v5)
  (label l6811e)
  (line 241)
  (if-eqz v1 l6813a)
  (line 242)
  (sget-object v2 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.blockParents [object java/util/Set])
  (invoke-virtual {v1} java/lang/Object/getClass )
  (move-result-object v3)
  (invoke-interface {v2 v3} java/util/Set/contains [object java/lang/Object] )
  (move-result v2)
  (line 241)
  (if-eqz v2 l6815a)
  (label l6813a)
  (line 246)
  (if-eqz v1 l68166)
  (line 247)
  (invoke-virtual {v1} java/lang/Object/getClass )
  (move-result-object v2)
  (const-class v3 net/sourceforge/pmd/ast/ASTIfStatement)
  (invoke-virtual {v2 v3} java/lang/Object/equals [object java/lang/Object] )
  (move-result v2)
  (if-eqz v2 l68166)
  (line 248)
  (move-object v1 v0)
  (label l68158)
  (line 253)
  (return-object v1)
  (label l6815a)
  (line 243)
  (move-object v0 v1)
  (line 244)
  (invoke-interface {v1} net/sourceforge/pmd/ast/Node/jjtGetParent )
  (move-result-object v1)
  (goto l6811e)
  (label l68166)
  (line 249)
  (if-eqz v1 l68158)
  (line 250)
  (invoke-virtual {v1} java/lang/Object/getClass )
  (move-result-object v2)
  (const-class v3 net/sourceforge/pmd/ast/ASTSwitchStatement)
  (invoke-virtual {v2 v3} java/lang/Object/equals [object java/lang/Object] )
  (move-result v2)
  (if-eqz v2 l68158)
  (line 251)
  (invoke-direct {v4 v1 v0} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/getSwitchParent [object net/sourceforge/pmd/ast/Node] [object net/sourceforge/pmd/ast/Node] )
  (move-result-object v1)
  (goto l68158)
 )

(method (attrs private ) getSwitchParent([object net/sourceforge/pmd/ast/Node] [object net/sourceforge/pmd/ast/Node] )[object net/sourceforge/pmd/ast/Node]
  (limit registers 9)
  ; this: v6 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v7 ([object net/sourceforge/pmd/ast/Node])
  ; parameter[1] : v8 ([object net/sourceforge/pmd/ast/Node])
  (line 264)
  (invoke-interface {v7} net/sourceforge/pmd/ast/Node/jjtGetNumChildren )
  (move-result v0)
  (line 265)
  (const/4 v2 0)
  (line 266)
  (const/4 v1 0)
  (label l681a8)
  (if-lt v1 v0 l681ae)
  (label l681ac)
  (line 275)
  (return-object v7)
  (label l681ae)
  (line 267)
  (invoke-interface {v7 v1} net/sourceforge/pmd/ast/Node/jjtGetChild int )
  (move-result-object v3)
  (line 268)
  (invoke-virtual {v3} java/lang/Object/getClass )
  (move-result-object v4)
  (const-class v5 net/sourceforge/pmd/ast/ASTSwitchLabel)
  (invoke-virtual {v4 v5} java/lang/Object/equals [object java/lang/Object] )
  (move-result v4)
  (if-eqz v4 l681da)
  (move-object v2 v3)
  (line 269)
  (check-cast v2 [object net/sourceforge/pmd/ast/ASTSwitchLabel])
  (label l681d4)
  (line 266)
  (add-int/lit8 v1 v1 1)
  (goto l681a8)
  (label l681da)
  (line 270)
  (invoke-virtual {v3 v8} java/lang/Object/equals [object java/lang/Object] )
  (move-result v4)
  (if-eqz v4 l681d4)
  (line 271)
  (move-object v7 v2)
  (line 272)
  (goto l681ac)
 )

(method (attrs private ) isAdditive([object net/sourceforge/pmd/ast/SimpleNode] )boolean
  (limit registers 8)
  ; this: v6 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v7 ([object net/sourceforge/pmd/ast/SimpleNode])
  (const/4 v4 1)
  (const/4 v3 0)
  (line 213)
  (const-class v5 net/sourceforge/pmd/ast/ASTAdditiveExpression)
  (invoke-virtual {v7 v5} net/sourceforge/pmd/ast/SimpleNode/findChildrenOfType [object java/lang/Class] )
  (move-result-object v2)
  (line 214)
  (invoke-interface {v2} java/util/List/size )
  (move-result v5)
  (if-nez v5 l6821a)
  (label l68218)
  (line 226)
  (return v3)
  (label l6821a)
  (line 220)
  (const/4 v1 0)
  (label l6821c)
  (invoke-interface {v2} java/util/List/size )
  (move-result v5)
  (if-lt v1 v5 l6822c)
  (move v3 v4)
  (line 226)
  (goto l68218)
  (label l6822c)
  (line 221)
  (invoke-interface {v2 v1} java/util/List/get int )
  (move-result-object v0)
  (check-cast v0 [object net/sourceforge/pmd/ast/ASTAdditiveExpression])
  (line 222)
  (const-class v5 net/sourceforge/pmd/ast/ASTArgumentList)
  (invoke-virtual {v0 v5} net/sourceforge/pmd/ast/ASTAdditiveExpression/getParentsOfType [object java/lang/Class] )
  (move-result-object v5)
  (invoke-interface {v5} java/util/List/size )
  (move-result v5)
  (if-ne v5 v4 l68218)
  (line 220)
  (add-int/lit8 v1 v1 1)
  (goto l6821c)
 )

(method (attrs private ) isAppendingStringLiteral([object net/sourceforge/pmd/ast/SimpleNode] )boolean
  (limit registers 5)
  ; this: v3 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v4 ([object net/sourceforge/pmd/ast/SimpleNode])
  (line 291)
  (move-object v0 v4)
  (label l6826a)
  (line 292)
  (invoke-virtual {v0} net/sourceforge/pmd/ast/SimpleNode/jjtGetNumChildren )
  (move-result v1)
  (if-eqz v1 l6828e)
  (line 293)
  (invoke-virtual {v0} java/lang/Object/getClass )
  (move-result-object v1)
  (const-class v2 net/sourceforge/pmd/ast/ASTLiteral)
  (invoke-virtual {v1 v2} java/lang/Object/equals [object java/lang/Object] )
  (move-result v1)
  (line 292)
  (if-eqz v1 l682a4)
  (label l6828e)
  (line 296)
  (invoke-virtual {v0} java/lang/Object/getClass )
  (move-result-object v1)
  (const-class v2 net/sourceforge/pmd/ast/ASTLiteral)
  (invoke-virtual {v1 v2} java/lang/Object/equals [object java/lang/Object] )
  (move-result v1)
  (return v1)
  (label l682a4)
  (line 294)
  (const/4 v1 0)
  (invoke-virtual {v0 v1} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v0)
  (label l682ae)
  (check-cast v0 [object net/sourceforge/pmd/ast/SimpleNode])
  (goto l6826a)
 )

(method (attrs private static ) isStringBuffer([object net/sourceforge/pmd/ast/ASTVariableDeclaratorId] )boolean
  (limit registers 4)
  ; parameter[0] : v3 ([object net/sourceforge/pmd/ast/ASTVariableDeclaratorId])
  (const/4 v1 0)
  (line 300)
  (invoke-virtual {v3} net/sourceforge/pmd/ast/ASTVariableDeclaratorId/getTypeNameNode )
  (move-result-object v0)
  (line 301)
  (invoke-virtual {v0} net/sourceforge/pmd/ast/SimpleNode/jjtGetNumChildren )
  (move-result v2)
  (if-nez v2 l682dc)
  (label l682da)
  (line 304)
  (return v1)
  (label l682dc)
  (const-string v2 "StringBuffer")
  (invoke-virtual {v0 v1} net/sourceforge/pmd/ast/SimpleNode/jjtGetChild int )
  (move-result-object v1)
  (check-cast v1 [object net/sourceforge/pmd/ast/SimpleNode])
  (line 305)
  (invoke-virtual {v1} net/sourceforge/pmd/ast/SimpleNode/getImage )
  (move-result-object v1)
  (line 304)
  (invoke-virtual {v2 v1} java/lang/String/equals [object java/lang/Object] )
  (move-result v1)
  (goto l682da)
 )

(method (attrs private ) processAdditive([object java/lang/Object] int [object net/sourceforge/pmd/ast/SimpleNode] [object net/sourceforge/pmd/ast/SimpleNode] )int
  (limit registers 12)
  ; this: v7 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v8 ([object java/lang/Object])
  ; parameter[1] : v9 (int)
  ; parameter[2] : v10 ([object net/sourceforge/pmd/ast/SimpleNode])
  ; parameter[3] : v11 ([object net/sourceforge/pmd/ast/SimpleNode])
  (line 171)
  (line 172)
  (const-class v5 net/sourceforge/pmd/ast/ASTAdditiveExpression)
  (invoke-virtual {v10 v5} net/sourceforge/pmd/ast/SimpleNode/getFirstChildOfType [object java/lang/Class] )
  (move-result-object v0)
  (line 171)
  (check-cast v0 [object net/sourceforge/pmd/ast/ASTAdditiveExpression])
  (line 173)
  (if-nez v0 l68328)
  (line 174)
  (const/4 v2 0)
  (label l68326)
  (line 198)
  (return v2)
  (label l68328)
  (line 176)
  (move v2 v9)
  (line 177)
  (const/4 v3 0)
  (line 178)
  (const/4 v4 0)
  (label l6832e)
  (invoke-virtual {v0} net/sourceforge/pmd/ast/ASTAdditiveExpression/jjtGetNumChildren )
  (move-result v5)
  (if-lt v4 v5 l68342)
  (line 194)
  (if-nez v3 l68326)
  (line 195)
  (const/4 v2 1)
  (goto l68326)
  (label l68342)
  (line 179)
  (invoke-virtual {v0 v4} net/sourceforge/pmd/ast/ASTAdditiveExpression/jjtGetChild int )
  (move-result-object v1)
  (check-cast v1 [object net/sourceforge/pmd/ast/SimpleNode])
  (line 180)
  (invoke-virtual {v1} net/sourceforge/pmd/ast/SimpleNode/jjtGetNumChildren )
  (move-result v5)
  (const/4 v6 1)
  (if-ne v5 v6 l68374)
  (line 181)
  (const-class v5 net/sourceforge/pmd/ast/ASTName)
  (invoke-virtual {v1 v5} net/sourceforge/pmd/ast/SimpleNode/findChildrenOfType [object java/lang/Class] )
  (move-result-object v5)
  (invoke-interface {v5} java/util/List/size )
  (move-result v5)
  (if-eqz v5 l68388)
  (label l68374)
  (line 182)
  (if-nez v3 l68380)
  (line 183)
  (invoke-direct {v7 v11 v8 v2} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/checkForViolation [object net/sourceforge/pmd/ast/SimpleNode] [object java/lang/Object] int )
  (line 184)
  (const/4 v3 1)
  (label l68380)
  (line 186)
  (const/4 v2 0)
  (label l68382)
  (line 178)
  (add-int/lit8 v4 v4 1)
  (goto l6832e)
  (label l68388)
  (line 188)
  (add-int/lit8 v2 v2 1)
  (goto l68382)
 )

(method (attrs public ) visit([object net/sourceforge/pmd/ast/ASTVariableDeclaratorId] [object java/lang/Object] )[object java/lang/Object]
  (limit registers 23)
  ; this: v20 ([object net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends])
  ; parameter[0] : v21 ([object net/sourceforge/pmd/ast/ASTVariableDeclaratorId])
  ; parameter[1] : v22 ([object java/lang/Object])
  (line 72)
  (invoke-static/range {v21} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/isStringBuffer [object net/sourceforge/pmd/ast/ASTVariableDeclaratorId] )
  (move-result v18)
  (if-nez v18 l683ae)
  (label l683ac)
  (line 142)
  (return-object v22)
  (label l683ae)
  (line 75)
  (const-string v18 "threshold")
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v18)
  (invoke-virtual {v0 v1} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/getIntProperty [object java/lang/String] )
  (move-result v18)
  (move/from16 v0 v18)
  (move-object/from16 v1 v20)
  (iput v0 v1 net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends.threshold int)
  (line 77)
  (invoke-direct/range {v20 .. v22} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/checkConstructor [object net/sourceforge/pmd/ast/ASTVariableDeclaratorId] [object java/lang/Object] )
  (move-result v3)
  (line 78)
  (invoke-direct/range {v20 .. v21} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/getFirstParentBlock [object net/sourceforge/pmd/ast/Node] )
  (move-result-object v11)
  (line 79)
  (move-object v4 v11)
  (line 80)
  (invoke-virtual/range {v21} net/sourceforge/pmd/ast/ASTVariableDeclaratorId/getScope )
  (move-result-object v18)
  (invoke-interface/range {v18} net/sourceforge/pmd/symboltable/Scope/getVariableDeclarations )
  (move-result-object v6)
  (line 81)
  (const/4 v15 0)
  (line 83)
  (const/16 v18 1)
  (move/from16 v0 v18)
  (if-ne v3 v0 l68402)
  (line 84)
  (move-object/from16 v15 v21)
  (label l68402)
  (line 86)
  (invoke-interface {v6} java/util/Map/entrySet )
  (move-result-object v18)
  (invoke-interface/range {v18} java/util/Set/iterator )
  (move-result-object v8)
  (label l68412)
  (invoke-interface {v8} java/util/Iterator/hasNext )
  (move-result v18)
  (if-nez v18 l6842e)
  (line 141)
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v22)
  (invoke-direct {v0 v15 v1 v3} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/checkForViolation [object net/sourceforge/pmd/ast/SimpleNode] [object java/lang/Object] int )
  (goto l683ac)
  (label l6842e)
  (line 87)
  (invoke-interface {v8} java/util/Iterator/next )
  (move-result-object v7)
  (check-cast v7 [object java/util/Map$Entry])
  (line 88)
  (invoke-interface {v7} java/util/Map$Entry/getValue )
  (move-result-object v5)
  (check-cast v5 [object java/util/List])
  (line 89)
  (const/4 v9 0)
  (label l68448)
  (invoke-interface {v5} java/util/List/size )
  (move-result v18)
  (move/from16 v0 v18)
  (if-ge v9 v0 l68412)
  (line 90)
  (invoke-interface {v5 v9} java/util/List/get int )
  (move-result-object v13)
  (check-cast v13 [object net/sourceforge/pmd/symboltable/NameOccurrence])
  (line 91)
  (invoke-virtual {v13} net/sourceforge/pmd/symboltable/NameOccurrence/getLocation )
  (move-result-object v12)
  (line 93)
  (move-object/from16 v0 v20)
  (invoke-direct {v0 v12} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/getFirstParentBlock [object net/sourceforge/pmd/ast/Node] )
  (move-result-object v4)
  (line 95)
  (const/16 v18 3)
  (move/from16 v0 v18)
  (invoke-static {v12 v0} net/sourceforge/pmd/rules/strings/InefficientStringBuffering/isInStringBufferAppend [object net/sourceforge/pmd/ast/SimpleNode] int )
  (move-result v18)
  (if-nez v18 l684ae)
  (line 96)
  (invoke-virtual {v13} net/sourceforge/pmd/symboltable/NameOccurrence/isPartOfQualifiedName )
  (move-result v18)
  (if-nez v18 l684a8)
  (line 97)
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v22)
  (invoke-direct {v0 v15 v1 v3} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/checkForViolation [object net/sourceforge/pmd/ast/SimpleNode] [object java/lang/Object] int )
  (line 98)
  (const/4 v3 0)
  (label l684a8)
  (line 89)
  (add-int/lit8 v9 v9 1)
  (goto l68448)
  (label l684ae)
  (line 103)
  (const-class v18 net/sourceforge/pmd/ast/ASTPrimaryExpression)
  (move-object/from16 v0 v18)
  (invoke-virtual {v12 v0} net/sourceforge/pmd/ast/SimpleNode/getFirstParentOfType [object java/lang/Class] )
  (move-result-object v16)
  (line 102)
  (check-cast v16 [object net/sourceforge/pmd/ast/ASTPrimaryExpression])
  (line 104)
  (invoke-virtual/range {v16} net/sourceforge/pmd/ast/ASTPrimaryExpression/jjtGetNumChildren )
  (move-result v14)
  (line 105)
  (const/4 v10 0)
  (label l684cc)
  (if-ge v10 v14 l684a8)
  (line 106)
  (move-object/from16 v0 v16)
  (invoke-virtual {v0 v10} net/sourceforge/pmd/ast/ASTPrimaryExpression/jjtGetChild int )
  (move-result-object v17)
  (check-cast v17 [object net/sourceforge/pmd/ast/SimpleNode])
  (line 107)
  (move-object/from16 v0 v17)
  (instance-of v0 v0 net/sourceforge/pmd/ast/ASTPrimarySuffix)
  (move/from16 v18 v0)
  (if-eqz v18 l684fc)
  (line 108)
  (invoke-virtual/range {v17} net/sourceforge/pmd/ast/SimpleNode/getImage )
  (move-result-object v18)
  (if-eqz v18 l68502)
  (label l684fc)
  (line 105)
  (add-int/lit8 v10 v10 1)
  (goto l684cc)
  (label l68502)
  (line 113)
  (if-eqz v4 l68516)
  (if-eqz v11 l68516)
  (line 114)
  (invoke-virtual {v4 v11} java/lang/Object/equals [object java/lang/Object] )
  (move-result v18)
  (if-eqz v18 l68532)
  (label l68516)
  (line 115)
  (if-nez v4 l6857e)
  (const/16 v18 1)
  (move/from16 v19 v18)
  (label l68522)
  (if-nez v11 l68588)
  (const/16 v18 1)
  (label l6852a)
  (xor-int v18 v18 v19)
  (if-eqz v18 l68542)
  (label l68532)
  (line 116)
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v22)
  (invoke-direct {v0 v15 v1 v3} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/checkForViolation [object net/sourceforge/pmd/ast/SimpleNode] [object java/lang/Object] int )
  (line 117)
  (const/4 v3 0)
  (label l68542)
  (line 122)
  (if-nez v3 l6854a)
  (line 123)
  (move-object/from16 v15 v17)
  (label l6854a)
  (line 125)
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v17)
  (invoke-direct {v0 v1} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/isAdditive [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result v18)
  (if-eqz v18 l6858e)
  (line 126)
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v22)
  (move-object/from16 v2 v17)
  (invoke-direct {v0 v1 v3 v2 v15} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/processAdditive [object java/lang/Object] int [object net/sourceforge/pmd/ast/SimpleNode] [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result v3)
  (line 128)
  (if-eqz v3 l6857a)
  (line 129)
  (move-object/from16 v15 v17)
  (label l6857a)
  (line 137)
  (move-object v11 v4)
  (goto l684fc)
  (label l6857e)
  (line 115)
  (const/16 v18 0)
  (move/from16 v19 v18)
  (goto l68522)
  (label l68588)
  (const/16 v18 0)
  (goto l6852a)
  (label l6858e)
  (line 131)
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v17)
  (invoke-direct {v0 v1} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/isAppendingStringLiteral [object net/sourceforge/pmd/ast/SimpleNode] )
  (move-result v18)
  (if-nez v18 l685b4)
  (line 132)
  (move-object/from16 v0 v20)
  (move-object/from16 v1 v22)
  (invoke-direct {v0 v15 v1 v3} net/sourceforge/pmd/rules/strings/ConsecutiveLiteralAppends/checkForViolation [object net/sourceforge/pmd/ast/SimpleNode] [object java/lang/Object] int )
  (line 133)
  (const/4 v3 0)
  (goto l6857a)
  (label l685b4)
  (line 135)
  (add-int/lit8 v3 v3 1)
  (goto l6857a)
)

)
