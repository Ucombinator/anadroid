(class (attrs public synchronized ) java/util/concurrent/atomic/AtomicLongArray
 (super java/lang/Object)
 (source "AtomicLongArray.java")
 (implements java/io/Serializable)

 (field (attrs private static final ) base int 0); 0x0 )
 (field (attrs private static final ) scale int 0); 0x0 )
 (field (attrs private static final ) serialVersionUID long -589830); 0xfff6fffa )
 (field (attrs private static final ) unsafe [object sun/misc/Unsafe] )
 (field (attrs private final ) array [array long] )

(method (attrs static ) <clinit>()void
  (limit registers 3)
  (const-class v2 [array long])
  (line 23)
  (sget-object v0 java/util/concurrent/atomic/UnsafeAccess.THE_ONE [object sun/misc/Unsafe])
  (sput-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (line 25)
  (sget-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (const-class v1 [array long])
  (invoke-virtual-quick {v0 v2} vtable #0xb)
  (move-result v0)
  (sput v0 java/util/concurrent/atomic/AtomicLongArray.base int)
  (line 26)
  (sget-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (const-class v1 [array long])
  (invoke-virtual-quick {v0 v2} vtable #0xc)
  (move-result v0)
  (sput v0 java/util/concurrent/atomic/AtomicLongArray.scale int)
  (return-void )
 )

(method (attrs public ) <init>(int )void
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  (line 40)
  (invoke-direct-empty {v6} java/lang/Object/<init> )
  (line 41)
  (new-array v0 v7 [array long])
  (iput-object-quick v0 v6 )
  (line 43)
  (if-lez v7 lf1bce)
  (line 44)
  (sget-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v6 )
  (const/4 v2 0)
  (invoke-direct {v6 v2} java/util/concurrent/atomic/AtomicLongArray/rawIndex int )
  (move-result-wide v2)
  (const-wide/16 v4 0)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0x1b)
  (label lf1bce)
  (line 45)
  (return-void )
 )

(method (attrs public ) <init>([array long] )void
  (limit registers 11)
  ; this: v9 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v10 ([array long])
  (line 54)
  (invoke-direct-empty {v9} java/lang/Object/<init> )
  (line 55)
  (if-nez v10 lf1bf6)
  (line 56)
  (new-instance v0 java/lang/NullPointerException)
  (invoke-direct {v0} java/lang/NullPointerException/<init> )
  (throw v0)
  (label lf1bf6)
  (line 57)
  (array-length v8 v10)
  (line 58)
  (new-array v0 v8 [array long])
  (iput-object-quick v0 v9 )
  (line 59)
  (if-lez v8 lf1c3c)
  (line 60)
  (const/4 v0 1)
  (sub-int v7 v8 v0)
  (label lf1c0a)
  (line 61)
  (const/4 v6 0)
  (label lf1c0c)
  (if-ge v6 v7 lf1c22)
  (line 62)
  (iget-object-quick v0 v9 )
  (aget-wide v1 v10 v6)
  (aput-wide v1 v0 v6)
  (line 61)
  (add-int/lit8 v6 v6 1)
  (goto lf1c0c)
  (label lf1c22)
  (line 64)
  (sget-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v9 )
  (invoke-direct {v9 v7} java/util/concurrent/atomic/AtomicLongArray/rawIndex int )
  (move-result-wide v2)
  (aget-wide v4 v10 v7)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0x1b)
  (label lf1c3c)
  (line 66)
  (return-void )
 )

(method (attrs private ) rawIndex(int )long
  (limit registers 5)
  ; this: v3 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v4 (int)
  (line 30)
  (if-ltz v4 lf1c5e)
  (iget-object-quick v0 v3 )
  (array-length v0 v0)
  (if-lt v4 v0 lf1c90)
  (label lf1c5e)
  (line 31)
  (new-instance v0 java/lang/IndexOutOfBoundsException)
  (new-instance v1 java/lang/StringBuilder)
  (invoke-direct {v1} java/lang/StringBuilder/<init> )
  (const-string v2 "index ")
  (invoke-virtual-quick {v1 v2} vtable #0x3b)
  (move-result-object v1)
  (invoke-virtual-quick {v1 v4} vtable #0x36)
  (move-result-object v1)
  (invoke-virtual-quick {v1} vtable #0x7)
  (move-result-object v1)
  (invoke-direct {v0 v1} java/lang/IndexOutOfBoundsException/<init> [object java/lang/String] )
  (throw v0)
  (label lf1c90)
  (line 32)
  (sget v0 java/util/concurrent/atomic/AtomicLongArray.base int)
  (sget v1 java/util/concurrent/atomic/AtomicLongArray.scale int)
  (mul-int/2addr v1 v4)
  (add-int/2addr v0 v1)
  (int-to-long v0 v0)
  (return-wide v0)
 )

(method (attrs public ) addAndGet(int long )long
  (limit registers 10)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  ; parameter[1] : v8 (long)
  (label lf1cb0)
  (line 230)
  (invoke-virtual-quick {v6 v7} vtable #0xe)
  (move-result-wide v2)
  (line 231)
  (add-long v4 v2 v8)
  (move-object v0 v6)
  (move v1 v7)
  (line 232)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf1cb0)
  (line 233)
  (return-wide v4)
)

(method (attrs public final ) compareAndSet(int long long )boolean
  (limit registers 14)
  ; this: v8 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v9 (int)
  ; parameter[1] : v10 (long)
  ; parameter[2] : v12 (long)
  (line 124)
  (sget-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v8 )
  (invoke-direct {v8 v9} java/util/concurrent/atomic/AtomicLongArray/rawIndex int )
  (move-result-wide v2)
  (move-wide v4 v10)
  (move-wide v6 v12)
  (invoke-virtual-quick/range {v0 .. v7},vtable #0xe)
  (move-result v0)
  (return v0)
)

(method (attrs public final ) decrementAndGet(int )long
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  (label lf1d10)
  (line 214)
  (invoke-virtual-quick {v6 v7} vtable #0xe)
  (move-result-wide v2)
  (line 215)
  (const-wide/16 v0 1)
  (sub-long v4 v2 v0)
  (move-object v0 v6)
  (move v1 v7)
  (line 216)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf1d10)
  (line 217)
  (return-wide v4)
)

(method (attrs public final ) get(int )long
  (limit registers 6)
  ; this: v4 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v5 (int)
  (line 84)
  (sget-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v4 )
  (invoke-direct {v4 v5} java/util/concurrent/atomic/AtomicLongArray/rawIndex int )
  (move-result-wide v2)
  (invoke-virtual-quick {v0 v1 v2 v3} vtable #0x13)
  (move-result-wide v0)
  (return-wide v0)
)

(method (attrs public final ) getAndAdd(int long )long
  (limit registers 10)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  ; parameter[1] : v8 (long)
  (label lf1d70)
  (line 184)
  (invoke-virtual-quick {v6 v7} vtable #0xe)
  (move-result-wide v2)
  (line 185)
  (add-long v4 v2 v8)
  (move-object v0 v6)
  (move v1 v7)
  (line 186)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf1d70)
  (line 187)
  (return-wide v2)
)

(method (attrs public final ) getAndDecrement(int )long
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  (label lf1da0)
  (line 168)
  (invoke-virtual-quick {v6 v7} vtable #0xe)
  (move-result-wide v2)
  (line 169)
  (const-wide/16 v0 1)
  (sub-long v4 v2 v0)
  (move-object v0 v6)
  (move v1 v7)
  (line 170)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf1da0)
  (line 171)
  (return-wide v2)
)

(method (attrs public final ) getAndIncrement(int )long
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  (label lf1dd4)
  (line 153)
  (invoke-virtual-quick {v6 v7} vtable #0xe)
  (move-result-wide v2)
  (line 154)
  (const-wide/16 v0 1)
  (add-long v4 v2 v0)
  (move-object v0 v6)
  (move v1 v7)
  (line 155)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf1dd4)
  (line 156)
  (return-wide v2)
)

(method (attrs public final ) getAndSet(int long )long
  (limit registers 10)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  ; parameter[1] : v8 (long)
  (label lf1e08)
  (line 107)
  (invoke-virtual-quick {v6 v7} vtable #0xe)
  (move-result-wide v2)
  (move-object v0 v6)
  (move v1 v7)
  (move-wide v4 v8)
  (line 108)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf1e08)
  (line 109)
  (return-wide v2)
)

(method (attrs public final ) incrementAndGet(int )long
  (limit registers 8)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  (label lf1e34)
  (line 199)
  (invoke-virtual-quick {v6 v7} vtable #0xe)
  (move-result-wide v2)
  (line 200)
  (const-wide/16 v0 1)
  (add-long v4 v2 v0)
  (move-object v0 v6)
  (move v1 v7)
  (line 201)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0xc)
  (move-result v0)
  (if-eqz v0 lf1e34)
  (line 202)
  (return-wide v4)
)

(method (attrs public final ) length()int
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/atomic/AtomicLongArray])
  (line 74)
  (iget-object-quick v0 v1 )
  (array-length v0 v0)
  (return v0)
)

(method (attrs public final ) set(int long )void
  (limit registers 10)
  ; this: v6 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v7 (int)
  ; parameter[1] : v8 (long)
  (line 94)
  (sget-object v0 java/util/concurrent/atomic/AtomicLongArray.unsafe [object sun/misc/Unsafe])
  (iget-object-quick v1 v6 )
  (invoke-direct {v6 v7} java/util/concurrent/atomic/AtomicLongArray/rawIndex int )
  (move-result-wide v2)
  (move-wide v4 v8)
  (invoke-virtual-quick/range {v0 .. v5},vtable #0x1b)
  (line 95)
  (return-void )
)

(method (attrs public ) toString()[object java/lang/String]
  (limit registers 2)
  ; this: v1 ([object java/util/concurrent/atomic/AtomicLongArray])
  (line 242)
  (iget-object-quick v0 v1 )
  (array-length v0 v0)
  (if-lez v0 lf1ebe)
  (line 243)
  (const/4 v0 0)
  (invoke-virtual-quick {v1 v0} vtable #0xe)
  (label lf1ebe)
  (line 244)
  (iget-object-quick v0 v1 )
  (invoke-static {v0} java/util/Arrays/toString [array long] )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public final ) weakCompareAndSet(int long long )boolean
  (limit registers 7)
  ; this: v1 ([object java/util/concurrent/atomic/AtomicLongArray])
  ; parameter[0] : v2 (int)
  ; parameter[1] : v3 (long)
  ; parameter[2] : v5 (long)
  (line 142)
  (invoke-virtual-quick/range {v1 .. v6},vtable #0xc)
  (move-result v0)
  (return v0)
)

)
